{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar CommandOperationV2 = require('./command_v2');\n\nvar EstimatedDocumentCountOperation = /*#__PURE__*/function (_CommandOperationV) {\n  _inherits(EstimatedDocumentCountOperation, _CommandOperationV);\n\n  var _super = _createSuper(EstimatedDocumentCountOperation);\n\n  function EstimatedDocumentCountOperation(collection, query, options) {\n    var _this;\n\n    _classCallCheck(this, EstimatedDocumentCountOperation);\n\n    if (typeof options === 'undefined') {\n      options = query;\n      query = undefined;\n    }\n\n    _this = _super.call(this, collection, options);\n    _this.collectionName = collection.s.namespace.collection;\n\n    if (query) {\n      _this.query = query;\n    }\n\n    return _this;\n  }\n\n  _createClass(EstimatedDocumentCountOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      var options = this.options;\n      var cmd = {\n        count: this.collectionName\n      };\n\n      if (this.query) {\n        cmd.query = this.query;\n      }\n\n      if (typeof options.skip === 'number') {\n        cmd.skip = options.skip;\n      }\n\n      if (typeof options.limit === 'number') {\n        cmd.limit = options.limit;\n      }\n\n      if (options.hint) {\n        cmd.hint = options.hint;\n      }\n\n      _get(_getPrototypeOf(EstimatedDocumentCountOperation.prototype), \"executeCommand\", this).call(this, server, cmd, function (err, response) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        callback(null, response.n);\n      });\n    }\n  }]);\n\n  return EstimatedDocumentCountOperation;\n}(CommandOperationV2);\n\ndefineAspects(EstimatedDocumentCountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = EstimatedDocumentCountOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/estimated_document_count.js"],"names":["Aspect","require","defineAspects","CommandOperationV2","EstimatedDocumentCountOperation","collection","query","options","undefined","collectionName","s","namespace","server","callback","cmd","count","skip","limit","hint","err","response","n","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,IAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,IAAMC,kBAAkB,GAAGF,OAAO,CAAC,cAAD,CAAlC;;IAEMG,+B;;;;;AACJ,2CAAYC,UAAZ,EAAwBC,KAAxB,EAA+BC,OAA/B,EAAwC;AAAA;;AAAA;;AACtC,QAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,MAAAA,OAAO,GAAGD,KAAV;AACAA,MAAAA,KAAK,GAAGE,SAAR;AACD;;AAED,8BAAMH,UAAN,EAAkBE,OAAlB;AACA,UAAKE,cAAL,GAAsBJ,UAAU,CAACK,CAAX,CAAaC,SAAb,CAAuBN,UAA7C;;AACA,QAAIC,KAAJ,EAAW;AACT,YAAKA,KAAL,GAAaA,KAAb;AACD;;AAVqC;AAWvC;;;;4BAEOM,M,EAAQC,Q,EAAU;AACxB,UAAMN,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMO,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,KAAKN;AAAd,OAAZ;;AAEA,UAAI,KAAKH,KAAT,EAAgB;AACdQ,QAAAA,GAAG,CAACR,KAAJ,GAAY,KAAKA,KAAjB;AACD;;AAED,UAAI,OAAOC,OAAO,CAACS,IAAf,KAAwB,QAA5B,EAAsC;AACpCF,QAAAA,GAAG,CAACE,IAAJ,GAAWT,OAAO,CAACS,IAAnB;AACD;;AAED,UAAI,OAAOT,OAAO,CAACU,KAAf,KAAyB,QAA7B,EAAuC;AACrCH,QAAAA,GAAG,CAACG,KAAJ,GAAYV,OAAO,CAACU,KAApB;AACD;;AAED,UAAIV,OAAO,CAACW,IAAZ,EAAkB;AAChBJ,QAAAA,GAAG,CAACI,IAAJ,GAAWX,OAAO,CAACW,IAAnB;AACD;;AAED,0GAAqBN,MAArB,EAA6BE,GAA7B,EAAkC,UAACK,GAAD,EAAMC,QAAN,EAAmB;AACnD,YAAID,GAAJ,EAAS;AACPN,UAAAA,QAAQ,CAACM,GAAD,CAAR;AACA;AACD;;AAEDN,QAAAA,QAAQ,CAAC,IAAD,EAAOO,QAAQ,CAACC,CAAhB,CAAR;AACD,OAPD;AAQD;;;;EA1C2ClB,kB;;AA6C9CD,aAAa,CAACE,+BAAD,EAAkC,CAC7CJ,MAAM,CAACsB,cADsC,EAE7CtB,MAAM,CAACuB,SAFsC,EAG7CvB,MAAM,CAACwB,sBAHsC,CAAlC,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBtB,+BAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\n\nclass EstimatedDocumentCountOperation extends CommandOperationV2 {\n  constructor(collection, query, options) {\n    if (typeof options === 'undefined') {\n      options = query;\n      query = undefined;\n    }\n\n    super(collection, options);\n    this.collectionName = collection.s.namespace.collection;\n    if (query) {\n      this.query = query;\n    }\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const cmd = { count: this.collectionName };\n\n    if (this.query) {\n      cmd.query = this.query;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (options.hint) {\n      cmd.hint = options.hint;\n    }\n\n    super.executeCommand(server, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, response.n);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = EstimatedDocumentCountOperation;\n"]},"metadata":{},"sourceType":"script"}