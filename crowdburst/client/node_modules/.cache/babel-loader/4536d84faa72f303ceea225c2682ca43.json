{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar resolveReadPreference = require('../utils').resolveReadPreference;\n\nvar FindOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(FindOperation, _OperationBase);\n\n  var _super = _createSuper(FindOperation);\n\n  function FindOperation(collection, ns, command, options) {\n    var _this;\n\n    _classCallCheck(this, FindOperation);\n\n    _this = _super.call(this, options);\n    _this.ns = ns;\n    _this.cmd = command;\n    _this.readPreference = resolveReadPreference(collection, _this.options);\n    return _this;\n  }\n\n  _createClass(FindOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      // copied from `CommandOperationV2`, to be subclassed in the future\n      this.server = server;\n      var cursorState = this.cursorState || {}; // TOOD: use `MongoDBNamespace` through and through\n\n      server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n    }\n  }]);\n\n  return FindOperation;\n}(OperationBase);\n\ndefineAspects(FindOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = FindOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/find.js"],"names":["OperationBase","require","Aspect","defineAspects","resolveReadPreference","FindOperation","collection","ns","command","options","cmd","readPreference","server","callback","cursorState","query","toString","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,aAA7C;;AACA,IAAME,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AACA,IAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,IAAMC,qBAAqB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,qBAAlD;;IAEMC,a;;;;;AACJ,yBAAYC,UAAZ,EAAwBC,EAAxB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8C;AAAA;;AAAA;;AAC5C,8BAAMA,OAAN;AAEA,UAAKF,EAAL,GAAUA,EAAV;AACA,UAAKG,GAAL,GAAWF,OAAX;AACA,UAAKG,cAAL,GAAsBP,qBAAqB,CAACE,UAAD,EAAa,MAAKG,OAAlB,CAA3C;AAL4C;AAM7C;;;;4BAEOG,M,EAAQC,Q,EAAU;AACxB;AACA,WAAKD,MAAL,GAAcA,MAAd;AAEA,UAAME,WAAW,GAAG,KAAKA,WAAL,IAAoB,EAAxC,CAJwB,CAMxB;;AACAF,MAAAA,MAAM,CAACG,KAAP,CAAa,KAAKR,EAAL,CAAQS,QAAR,EAAb,EAAiC,KAAKN,GAAtC,EAA2CI,WAA3C,EAAwD,KAAKL,OAA7D,EAAsEI,QAAtE;AACD;;;;EAjByBb,a;;AAoB5BG,aAAa,CAACE,aAAD,EAAgB,CAC3BH,MAAM,CAACe,cADoB,EAE3Bf,MAAM,CAACgB,SAFoB,EAG3BhB,MAAM,CAACiB,sBAHoB,CAAhB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBhB,aAAjB","sourcesContent":["'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst resolveReadPreference = require('../utils').resolveReadPreference;\n\nclass FindOperation extends OperationBase {\n  constructor(collection, ns, command, options) {\n    super(options);\n\n    this.ns = ns;\n    this.cmd = command;\n    this.readPreference = resolveReadPreference(collection, this.options);\n  }\n\n  execute(server, callback) {\n    // copied from `CommandOperationV2`, to be subclassed in the future\n    this.server = server;\n\n    const cursorState = this.cursorState || {};\n\n    // TOOD: use `MongoDBNamespace` through and through\n    server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n  }\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = FindOperation;\n"]},"metadata":{},"sourceType":"script"}