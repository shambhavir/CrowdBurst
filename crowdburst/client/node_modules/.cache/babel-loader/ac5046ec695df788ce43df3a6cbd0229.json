{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useLazyQuery, gql } from \"@apollo/client\";\n// //import Search from \"./Search\";\n// import Grocery from \"./Components/Grocery\"; \n// import InputForm from \"./Components/InputForm\";\n// const SEARCH = gql`\n// query MyQuery($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     name\n//     id\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n// `;\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\n// const GrocerySearch = () => {\n//   const [inputVal, setInputVal] = useState(\"\");\n//   const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n//   if (loading) return <p>Loading ...</p>;\n//   if (error) return <p>Error :(</p>;\n//     return (\n//       <div>\n//         {/* <InputForm\n//           inputVal={inputVal}\n//           onChange={(e) => setInputVal(e.target.value)}\n//           onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n//         /> */}\n//         <Grocery newGrocery={data ? data.grocery : null} />\n//       </div>\n//     );\n//   };\n// export default GrocerySearch;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/GrocerySearch2.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import { useLazyQuery, gql } from \"@apollo/client\";\n// //import Search from \"./Search\";\n// import Grocery from \"./Components/Grocery\"; \n// import InputForm from \"./Components/InputForm\";\n\n\n// const SEARCH = gql`\n// query MyQuery($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     name\n//     id\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n\n// `;\n\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\n// const GrocerySearch = () => {\n  \n//   const [inputVal, setInputVal] = useState(\"\");\n//   const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n//   if (loading) return <p>Loading ...</p>;\n//   if (error) return <p>Error :(</p>;\n\n//     return (\n//       <div>\n//         {/* <InputForm\n//           inputVal={inputVal}\n//           onChange={(e) => setInputVal(e.target.value)}\n//           onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n//         /> */}\n//         <Grocery newGrocery={data ? data.grocery : null} />\n//       </div>\n//     );\n//   };\n\n// export default GrocerySearch;"]},"metadata":{},"sourceType":"module"}