{"ast":null,"code":"import _classCallCheck from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var MongoClient=require('mongodb').MongoClient;var uri='mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true';// MongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {useUnifiedTopology: true})\n// MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n//   if (err) {\n//         //error\n//   } else {\n//         var collection = client.db('test').collection('devices');\n//         collection.update(); \n//         //client.close() should be called after you are done performing actions such as collection.update, etc.\n//   }\n// });\nvar MyForm=/*#__PURE__*/function(_React$Component){_inherits(MyForm,_React$Component);var _super=_createSuper(MyForm);function MyForm(){var _this;_classCallCheck(this,MyForm);_this=_super.call(this);_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(MyForm,[{key:\"handleSubmit\",value:function handleSubmit(event){event.preventDefault();var data=new FormData(event.target);// MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n//   var collection = client.db('test').collection('devices');\n//   collection.update(); \n// }); \n// const db = data.db('reviews'); \nfetch('/api/form-submit-url',{method:'POST',body:data});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Enter username\"),/*#__PURE__*/React.createElement(\"input\",{id:\"username\",name:\"username\",type:\"text\"}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"birthdate\"},\"Enter your birth date\"),/*#__PURE__*/React.createElement(\"input\",{id:\"birthdate\",name:\"birthdate\",type:\"text\"}),/*#__PURE__*/React.createElement(\"button\",null,\"Send data!\"));}}]);return MyForm;}(React.Component);export default MyForm;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/App.js"],"names":["React","Component","MongoClient","require","uri","MyForm","handleSubmit","bind","event","preventDefault","data","FormData","target","fetch","method","body"],"mappings":"8zBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC,CACA,GAAME,CAAAA,GAAG,CAAG,iLAAZ,CACA;AAGA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;GAGMC,CAAAA,M,4GACJ,iBAAc,wCACZ,wBACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAFY,aAGb,C,qEAKgBC,K,CAAO,CAClBA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,QAAJ,CAAaH,KAAK,CAACI,MAAnB,CAAb,CAGA;AACA;AACA;AACA;AAEA;AACAC,KAAK,CAAC,sBAAD,CAAyB,CAC5BC,MAAM,CAAE,MADoB,CAE5BC,IAAI,CAAEL,IAFsB,CAAzB,CAAL,CAKD,C,uCAMI,CACP,mBACE,4BAAM,QAAQ,CAAE,KAAKJ,YAArB,eACE,6BAAO,OAAO,CAAC,UAAf,mBADF,cAEE,6BAAO,EAAE,CAAC,UAAV,CAAqB,IAAI,CAAC,UAA1B,CAAqC,IAAI,CAAC,MAA1C,EAFF,cAOE,6BAAO,OAAO,CAAC,WAAf,0BAPF,cAQE,6BAAO,EAAE,CAAC,WAAV,CAAsB,IAAI,CAAC,WAA3B,CAAuC,IAAI,CAAC,MAA5C,EARF,cAUE,+CAVF,CADF,CAcD,C,oBA9CkBN,KAAK,CAACC,S,EAgD3B,cAAeI,CAAAA,MAAf","sourcesContent":["import React, {Component} from 'react'; \nconst MongoClient = require('mongodb').MongoClient;\nconst uri = 'mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true'; \n// MongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {useUnifiedTopology: true})\n\n\n// MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n\n//   if (err) {\n\n//         //error\n\n//   } else {\n\n//         var collection = client.db('test').collection('devices');\n//         collection.update(); \n//         //client.close() should be called after you are done performing actions such as collection.update, etc.\n\n//   }\n// });\n\n\nclass MyForm extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  \n  \n      handleSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n\n\n        // MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n        //   var collection = client.db('test').collection('devices');\n        //   collection.update(); \n        // }); \n      \n        // const db = data.db('reviews'); \n        fetch('/api/form-submit-url', {\n          method: 'POST',\n          body: data,\n         \n        });\n      }\n      \n\n\n  \n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"username\">Enter username</label>\n        <input id=\"username\" name=\"username\" type=\"text\" />\n\n        {/* <label htmlFor=\"email\">Enter your email</label>\n        <input id=\"email\" name=\"email\" type=\"email\" /> */}\n\n        <label htmlFor=\"birthdate\">Enter your birth date</label>\n        <input id=\"birthdate\" name=\"birthdate\" type=\"text\" />\n\n        <button>Send data!</button>\n      </form>\n    );\n  }\n}\nexport default MyForm; "]},"metadata":{},"sourceType":"module"}