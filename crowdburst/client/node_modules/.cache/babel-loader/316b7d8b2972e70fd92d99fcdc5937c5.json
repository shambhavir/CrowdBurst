{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Grocery.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { List, ListItem } from './shared/List';\nimport { Badge } from './shared/Badge';\nconst GROCERY = gql` \n{\n    grocery {\n      address\n      alias\n      display_phone\n      id\n      name\n    }\n}`;\nexport default function Grocery() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GROCERY);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }\n  }, \"Error!\"); // return data.grocery.map(({id, name, address}) => (\n  //     <div key = {id}>\n  //         <p>\n  //             {name} | {address}\n  //         </p>\n  //     </div>\n  // )); \n\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data.grocery.map(({\n    id,\n    name,\n    address\n  }) => /*#__PURE__*/React.createElement(ListItem, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, name, \" \", /*#__PURE__*/React.createElement(Badge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 28\n    }\n  }, address))));\n}","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Grocery.js"],"names":["React","useQuery","gql","List","ListItem","Badge","GROCERY","Grocery","loading","error","data","grocery","map","id","name","address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,eAA7B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAIA,MAAMC,OAAO,GAAGJ,GAAI;;;;;;;;;EAApB;AAWA,eAAe,SAASK,OAAT,GAAmB;AAC9B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBT,QAAQ,CAACK,OAAD,CAAvC;AAEA,MAAGE,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP,CAJmB,CAM9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA;AAAX,GAAD,kBACd,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAIF,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IADL,oBACW,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,OAAR,CADX,CADH,CADL,CADJ;AASH","sourcesContent":["import React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport {List, ListItem} from './shared/List';\nimport {Badge} from './shared/Badge';\n\n\n\nconst GROCERY = gql` \n{\n    grocery {\n      address\n      alias\n      display_phone\n      id\n      name\n    }\n}`;\n\nexport default function Grocery() {\n    const {loading, error, data} = useQuery(GROCERY);\n\n    if(loading) return <p>Loading...</p>;\n    if(error)  return <p>Error!</p>;\n\n    // return data.grocery.map(({id, name, address}) => (\n    //     <div key = {id}>\n    //         <p>\n    //             {name} | {address}\n    //         </p>\n    //     </div>\n    // )); \n\n    return(\n        <List>\n            {data.grocery.map(({id, name, address}) => (\n                <ListItem key = {id}>\n                    {name} <Badge>{address}</Badge>\n                </ListItem>\n            ))}\n        </List>\n    );\n}"]},"metadata":{},"sourceType":"module"}