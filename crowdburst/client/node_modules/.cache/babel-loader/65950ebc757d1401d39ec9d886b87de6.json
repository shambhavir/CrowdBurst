{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useLazyQuery, gql } from \"@apollo/client\";\n// import InputForm from \"./shared/InputForm\";\n// import Grocery2 from \"./Grocery2\";\n// const SEARCH = gql`\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       address\n//       id\n//     }\n//   }\n// `;\n// const GrocerySearch3 = () => {\n//   const [inputVal, setInputVal] = useState(\"\");\n//   const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n//   if (loading) return <p>Loading ...</p>;\n//   if (error) return <p>Error :(</p>;\n//   return (\n//     <div>\n//       <InputForm\n//         inputVal={inputVal}\n//         onChange={(e) => setInputVal(e.target.value)}\n//         onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n//       />\n//       <Grocery2 newGrocery ={data ? data.grocery : null} />\n//     </div>\n//   );\n// };\n// export default GrocerySearch3;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch3.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import { useLazyQuery, gql } from \"@apollo/client\";\n// import InputForm from \"./shared/InputForm\";\n// import Grocery2 from \"./Grocery2\";\n\n// const SEARCH = gql`\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       address\n//       id\n//     }\n//   }\n// `;\n\n// const GrocerySearch3 = () => {\n//   const [inputVal, setInputVal] = useState(\"\");\n//   const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n\n//   if (loading) return <p>Loading ...</p>;\n//   if (error) return <p>Error :(</p>;\n\n//   return (\n//     <div>\n//       <InputForm\n//         inputVal={inputVal}\n//         onChange={(e) => setInputVal(e.target.value)}\n//         onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n//       />\n//       <Grocery2 newGrocery ={data ? data.grocery : null} />\n//     </div>\n//   );\n// };\n\n// export default GrocerySearch3;"]},"metadata":{},"sourceType":"module"}