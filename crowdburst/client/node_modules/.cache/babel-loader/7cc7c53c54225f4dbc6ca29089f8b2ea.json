{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar AuthProvider = require('./auth_provider').AuthProvider;\n/**\n * Creates a new X509 authentication mechanism\n * @class\n * @extends AuthProvider\n */\n\n\nvar X509 = /*#__PURE__*/function (_AuthProvider) {\n  _inherits(X509, _AuthProvider);\n\n  var _super = _createSuper(X509);\n\n  function X509() {\n    _classCallCheck(this, X509);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(X509, [{\n    key: \"_authenticateSingleConnection\",\n\n    /**\n     * Implementation of authentication for a single connection\n     * @override\n     */\n    value: function _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n      var username = credentials.username;\n      var command = {\n        authenticate: 1,\n        mechanism: 'MONGODB-X509'\n      };\n\n      if (username) {\n        command.user = username;\n      }\n\n      sendAuthCommand(connection, '$external.$cmd', command, callback);\n    }\n  }]);\n\n  return X509;\n}(AuthProvider);\n\nmodule.exports = X509;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/core/auth/x509.js"],"names":["AuthProvider","require","X509","sendAuthCommand","connection","credentials","callback","username","command","authenticate","mechanism","user","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,YAAhD;AAEA;;;;;;;IAKME,I;;;;;;;;;;;;;;AACJ;;;;kDAI8BC,e,EAAiBC,U,EAAYC,W,EAAaC,Q,EAAU;AAChF,UAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;AACA,UAAMC,OAAO,GAAG;AAAEC,QAAAA,YAAY,EAAE,CAAhB;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAhB;;AACA,UAAIH,QAAJ,EAAc;AACZC,QAAAA,OAAO,CAACG,IAAR,GAAeJ,QAAf;AACD;;AAEDJ,MAAAA,eAAe,CAACC,UAAD,EAAa,gBAAb,EAA+BI,OAA/B,EAAwCF,QAAxC,CAAf;AACD;;;;EAbgBN,Y;;AAgBnBY,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["'use strict';\n\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n/**\n * Creates a new X509 authentication mechanism\n * @class\n * @extends AuthProvider\n */\nclass X509 extends AuthProvider {\n  /**\n   * Implementation of authentication for a single connection\n   * @override\n   */\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n    const username = credentials.username;\n    const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n    if (username) {\n      command.user = username;\n    }\n\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = X509;\n"]},"metadata":{},"sourceType":"script"}