{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar FindAndModifyOperation = require('./find_and_modify');\n\nvar FindOneAndReplaceOperation = /*#__PURE__*/function (_FindAndModifyOperati) {\n  _inherits(FindOneAndReplaceOperation, _FindAndModifyOperati);\n\n  var _super = _createSuper(FindOneAndReplaceOperation);\n\n  function FindOneAndReplaceOperation(collection, filter, replacement, options) {\n    _classCallCheck(this, FindOneAndReplaceOperation);\n\n    // Final options\n    var finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new = options.returnOriginal !== void 0 ? !options.returnOriginal : false;\n    finalOptions.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n    return _super.call(this, collection, filter, finalOptions.sort, replacement, finalOptions);\n  }\n\n  return FindOneAndReplaceOperation;\n}(FindAndModifyOperation);\n\nmodule.exports = FindOneAndReplaceOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/find_one_and_replace.js"],"names":["FindAndModifyOperation","require","FindOneAndReplaceOperation","collection","filter","replacement","options","finalOptions","Object","assign","fields","projection","update","new","returnOriginal","upsert","sort","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,mBAAD,CAAtC;;IAEMC,0B;;;;;AACJ,sCAAYC,UAAZ,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,OAA7C,EAAsD;AAAA;;AACpD;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAArB;AACAC,IAAAA,YAAY,CAACG,MAAb,GAAsBJ,OAAO,CAACK,UAA9B;AACAJ,IAAAA,YAAY,CAACK,MAAb,GAAsB,IAAtB;AACAL,IAAAA,YAAY,CAACM,GAAb,GAAmBP,OAAO,CAACQ,cAAR,KAA2B,KAAK,CAAhC,GAAoC,CAACR,OAAO,CAACQ,cAA7C,GAA8D,KAAjF;AACAP,IAAAA,YAAY,CAACQ,MAAb,GAAsBT,OAAO,CAACS,MAAR,KAAmB,KAAK,CAAxB,GAA4B,CAAC,CAACT,OAAO,CAACS,MAAtC,GAA+C,KAArE;AANoD,6BAQ9CZ,UAR8C,EAQlCC,MARkC,EAQ1BG,YAAY,CAACS,IARa,EAQPX,WARO,EAQME,YARN;AASrD;;;EAVsCP,sB;;AAazCiB,MAAM,CAACC,OAAP,GAAiBhB,0BAAjB","sourcesContent":["'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\n\nclass FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(collection, filter, replacement, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new = options.returnOriginal !== void 0 ? !options.returnOriginal : false;\n    finalOptions.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n\n    super(collection, filter, finalOptions.sort, replacement, finalOptions);\n  }\n}\n\nmodule.exports = FindOneAndReplaceOperation;\n"]},"metadata":{},"sourceType":"script"}