{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch2.js\";\nimport React, { useState } from \"react\";\nimport { useLazyQuery, gql, useSubscription } from \"@apollo/client\"; //import Search from \"./Search\";\n\nimport Grocery from \"./Components/Grocery\";\nimport Search2 from \"./Components/Search2\"; // import Form2 from './Components/Form2';\n\nimport Stitch2 from './Stitch2';\nconst SEARCH = gql`\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n\n`; // const SEARCH = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// `; \n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\n\nconst GrocerySearch = () => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const [search, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(SEARCH);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"addReview\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grocery, {\n    newGrocery: data ? data.grocery : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default GrocerySearch;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch2.js"],"names":["React","useState","useLazyQuery","gql","useSubscription","Grocery","Search2","Stitch2","SEARCH","GrocerySearch","inputVal","setInputVal","search","loading","error","data","grocery"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,eAA5B,QAAmD,gBAAnD,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AAIA,MAAMC,MAAM,GAAGL,GAAI;;;;;;;;;;;;;CAAnB,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,aAAa,GAAG,MAAM;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAAS;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAT,IAAqCb,YAAY,CAACM,MAAD,CAAvD;AACA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAET,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEC,IAAI,GAAGA,IAAI,CAACC,OAAR,GAAkB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CApBH;;AAsBA,eAAeP,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useLazyQuery, gql, useSubscription } from \"@apollo/client\";\n//import Search from \"./Search\";\nimport Grocery from \"./Components/Grocery\"; \nimport Search2 from \"./Components/Search2\";\n// import Form2 from './Components/Form2';\nimport Stitch2 from './Stitch2'; \n\n\n\nconst SEARCH = gql`\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n\n`;\n\n// const SEARCH = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// `; \n\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\n\nconst GrocerySearch = () => {\n  \n  const [inputVal, setInputVal] = useState(\"\");\n  const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n  if (loading) return <p>Loading ...</p>;\n  if (error) return <p>Error :(</p>;\n\n    return (\n      <div>\n        {/* <Form2></Form2> */}\n        <addReview></addReview>\n        {/* <Stitch2></Stitch2> */}\n        {/* <Search2\n          inputVal={inputVal}\n          onChange={(e) => setInputVal(e.target.value)}\n          onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n        /> */}\n        <Grocery newGrocery={data ? data.grocery : null} />\n      </div>\n    );\n  };\n\nexport default GrocerySearch;\n\n"]},"metadata":{},"sourceType":"module"}