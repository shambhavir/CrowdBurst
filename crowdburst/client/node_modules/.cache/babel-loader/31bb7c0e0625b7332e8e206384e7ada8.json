{"ast":null,"code":"import RemoteMongoReadOperation from \"../RemoteMongoReadOperation\";\n\nvar RemoteMongoCollectionImpl = function () {\n  function RemoteMongoCollectionImpl(proxy) {\n    this.proxy = proxy;\n    this.namespace = this.proxy.namespace;\n  }\n\n  RemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {\n    return new RemoteMongoCollectionImpl(this.proxy.withCollectionType(codec));\n  };\n\n  RemoteMongoCollectionImpl.prototype.count = function (query, options) {\n    return this.proxy.count(query, options);\n  };\n\n  RemoteMongoCollectionImpl.prototype.find = function (query, options) {\n    return new RemoteMongoReadOperation(this.proxy.find(query, options));\n  };\n\n  RemoteMongoCollectionImpl.prototype.findOne = function (query, options) {\n    return this.proxy.findOne(query, options);\n  };\n\n  RemoteMongoCollectionImpl.prototype.findOneAndUpdate = function (query, update, options) {\n    return this.proxy.findOneAndUpdate(query, update, options);\n  };\n\n  RemoteMongoCollectionImpl.prototype.findOneAndReplace = function (query, replacement, options) {\n    return this.proxy.findOneAndReplace(query, replacement, options);\n  };\n\n  RemoteMongoCollectionImpl.prototype.findOneAndDelete = function (query, options) {\n    return this.proxy.findOneAndDelete(query, options);\n  };\n\n  RemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {\n    return new RemoteMongoReadOperation(this.proxy.aggregate(pipeline));\n  };\n\n  RemoteMongoCollectionImpl.prototype.insertOne = function (doc) {\n    return this.proxy.insertOne(doc);\n  };\n\n  RemoteMongoCollectionImpl.prototype.insertMany = function (docs) {\n    return this.proxy.insertMany(docs);\n  };\n\n  RemoteMongoCollectionImpl.prototype.deleteOne = function (query) {\n    return this.proxy.deleteOne(query);\n  };\n\n  RemoteMongoCollectionImpl.prototype.deleteMany = function (query) {\n    return this.proxy.deleteMany(query);\n  };\n\n  RemoteMongoCollectionImpl.prototype.updateOne = function (query, update, updateOptions) {\n    return this.proxy.updateOne(query, update, updateOptions);\n  };\n\n  RemoteMongoCollectionImpl.prototype.updateMany = function (query, update, updateOptions) {\n    return this.proxy.updateMany(query, update, updateOptions);\n  };\n\n  RemoteMongoCollectionImpl.prototype.watch = function (arg) {\n    return this.proxy.watch(arg);\n  };\n\n  RemoteMongoCollectionImpl.prototype.watchCompact = function (ids) {\n    return this.proxy.watchCompact(ids);\n  };\n\n  return RemoteMongoCollectionImpl;\n}();\n\nexport default RemoteMongoCollectionImpl;","map":{"version":3,"sources":["../../../src/internal/RemoteMongoCollectionImpl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import RemoteMongoReadOperation from \"../RemoteMongoReadOperation\";\nvar RemoteMongoCollectionImpl = (function () {\n    function RemoteMongoCollectionImpl(proxy) {\n        this.proxy = proxy;\n        this.namespace = this.proxy.namespace;\n    }\n    RemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {\n        return new RemoteMongoCollectionImpl(this.proxy.withCollectionType(codec));\n    };\n    RemoteMongoCollectionImpl.prototype.count = function (query, options) {\n        return this.proxy.count(query, options);\n    };\n    RemoteMongoCollectionImpl.prototype.find = function (query, options) {\n        return new RemoteMongoReadOperation(this.proxy.find(query, options));\n    };\n    RemoteMongoCollectionImpl.prototype.findOne = function (query, options) {\n        return this.proxy.findOne(query, options);\n    };\n    RemoteMongoCollectionImpl.prototype.findOneAndUpdate = function (query, update, options) {\n        return this.proxy.findOneAndUpdate(query, update, options);\n    };\n    RemoteMongoCollectionImpl.prototype.findOneAndReplace = function (query, replacement, options) {\n        return this.proxy.findOneAndReplace(query, replacement, options);\n    };\n    RemoteMongoCollectionImpl.prototype.findOneAndDelete = function (query, options) {\n        return this.proxy.findOneAndDelete(query, options);\n    };\n    RemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {\n        return new RemoteMongoReadOperation(this.proxy.aggregate(pipeline));\n    };\n    RemoteMongoCollectionImpl.prototype.insertOne = function (doc) {\n        return this.proxy.insertOne(doc);\n    };\n    RemoteMongoCollectionImpl.prototype.insertMany = function (docs) {\n        return this.proxy.insertMany(docs);\n    };\n    RemoteMongoCollectionImpl.prototype.deleteOne = function (query) {\n        return this.proxy.deleteOne(query);\n    };\n    RemoteMongoCollectionImpl.prototype.deleteMany = function (query) {\n        return this.proxy.deleteMany(query);\n    };\n    RemoteMongoCollectionImpl.prototype.updateOne = function (query, update, updateOptions) {\n        return this.proxy.updateOne(query, update, updateOptions);\n    };\n    RemoteMongoCollectionImpl.prototype.updateMany = function (query, update, updateOptions) {\n        return this.proxy.updateMany(query, update, updateOptions);\n    };\n    RemoteMongoCollectionImpl.prototype.watch = function (arg) {\n        return this.proxy.watch(arg);\n    };\n    RemoteMongoCollectionImpl.prototype.watchCompact = function (ids) {\n        return this.proxy.watchCompact(ids);\n    };\n    return RemoteMongoCollectionImpl;\n}());\nexport default RemoteMongoCollectionImpl;\n//# sourceMappingURL=RemoteMongoCollectionImpl.js.map"]},"metadata":{},"sourceType":"module"}