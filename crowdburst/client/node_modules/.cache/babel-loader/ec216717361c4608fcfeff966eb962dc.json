{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar resolveReadPreference = require('../utils').resolveReadPreference;\n\nvar ReadConcern = require('../read_concern');\n\nvar WriteConcern = require('../write_concern');\n\nvar maxWireVersion = require('../core/utils').maxWireVersion;\n\nvar commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\n\nvar MongoError = require('../error').MongoError;\n\nvar SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\nvar CommandOperationV2 = /*#__PURE__*/function (_OperationBase) {\n  _inherits(CommandOperationV2, _OperationBase);\n\n  var _super = _createSuper(CommandOperationV2);\n\n  function CommandOperationV2(parent, options, operationOptions) {\n    var _this;\n\n    _classCallCheck(this, CommandOperationV2);\n\n    _this = _super.call(this, options);\n    _this.ns = parent.s.namespace.withCollection('$cmd');\n    _this.readPreference = resolveReadPreference(parent, _this.options);\n    _this.readConcern = resolveReadConcern(parent, _this.options);\n    _this.writeConcern = resolveWriteConcern(parent, _this.options);\n    _this.explain = false;\n\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\n      _this.fullResponse = true;\n    } // TODO: A lot of our code depends on having the read preference in the options. This should\n    //       go away, but also requires massive test rewrites.\n\n\n    _this.options.readPreference = _this.readPreference; // TODO(NODE-2056): make logger another \"inheritable\" property\n\n    if (parent.s.logger) {\n      _this.logger = parent.s.logger;\n    } else if (parent.s.db && parent.s.db.logger) {\n      _this.logger = parent.s.db.logger;\n    }\n\n    return _this;\n  }\n\n  _createClass(CommandOperationV2, [{\n    key: \"executeCommand\",\n    value: function executeCommand(server, cmd, callback) {\n      var _this2 = this;\n\n      // TODO: consider making this a non-enumerable property\n      this.server = server;\n      var options = this.options;\n      var serverWireVersion = maxWireVersion(server);\n      var inTransaction = this.session && this.session.inTransaction();\n\n      if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n        Object.assign(cmd, {\n          readConcern: this.readConcern\n        });\n      }\n\n      if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        callback(new MongoError(\"Server \".concat(server.name, \", which reports wire version \").concat(serverWireVersion, \", does not support collation\")));\n        return;\n      }\n\n      if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\n          Object.assign(cmd, {\n            writeConcern: this.writeConcern\n          });\n        }\n\n        if (options.collation && typeof options.collation === 'object') {\n          Object.assign(cmd, {\n            collation: options.collation\n          });\n        }\n      }\n\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      }\n\n      if (typeof options.comment === 'string') {\n        cmd.comment = options.comment;\n      }\n\n      if (this.logger && this.logger.isDebug()) {\n        this.logger.debug(\"executing command \".concat(JSON.stringify(cmd), \" against \").concat(this.ns));\n      }\n\n      server.command(this.ns.toString(), cmd, this.options, function (err, result) {\n        if (err) {\n          callback(err, null);\n          return;\n        }\n\n        if (_this2.fullResponse) {\n          callback(null, result);\n          return;\n        }\n\n        callback(null, result.result);\n      });\n    }\n  }]);\n\n  return CommandOperationV2;\n}(OperationBase);\n\nfunction resolveWriteConcern(parent, options) {\n  return WriteConcern.fromOptions(options) || parent.writeConcern;\n}\n\nfunction resolveReadConcern(parent, options) {\n  return ReadConcern.fromOptions(options) || parent.readConcern;\n}\n\nmodule.exports = CommandOperationV2;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/command_v2.js"],"names":["Aspect","require","OperationBase","resolveReadPreference","ReadConcern","WriteConcern","maxWireVersion","commandSupportsReadConcern","MongoError","SUPPORTS_WRITE_CONCERN_AND_COLLATION","CommandOperationV2","parent","options","operationOptions","ns","s","namespace","withCollection","readPreference","readConcern","resolveReadConcern","writeConcern","resolveWriteConcern","explain","fullResponse","logger","db","server","cmd","callback","serverWireVersion","inTransaction","session","Object","assign","collation","name","hasAspect","WRITE_OPERATION","maxTimeMS","comment","isDebug","debug","JSON","stringify","command","toString","err","result","fromOptions","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,IAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,IAAMC,qBAAqB,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,qBAAlD;;AACA,IAAMC,WAAW,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAMK,cAAc,GAAGL,OAAO,CAAC,eAAD,CAAP,CAAyBK,cAAhD;;AACA,IAAMC,0BAA0B,GAAGN,OAAO,CAAC,kBAAD,CAAP,CAA4BM,0BAA/D;;AACA,IAAMC,UAAU,GAAGP,OAAO,CAAC,UAAD,CAAP,CAAoBO,UAAvC;;AAEA,IAAMC,oCAAoC,GAAG,CAA7C;;IAEMC,kB;;;;;AACJ,8BAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,gBAA7B,EAA+C;AAAA;;AAAA;;AAC7C,8BAAMD,OAAN;AAEA,UAAKE,EAAL,GAAUH,MAAM,CAACI,CAAP,CAASC,SAAT,CAAmBC,cAAnB,CAAkC,MAAlC,CAAV;AACA,UAAKC,cAAL,GAAsBf,qBAAqB,CAACQ,MAAD,EAAS,MAAKC,OAAd,CAA3C;AACA,UAAKO,WAAL,GAAmBC,kBAAkB,CAACT,MAAD,EAAS,MAAKC,OAAd,CAArC;AACA,UAAKS,YAAL,GAAoBC,mBAAmB,CAACX,MAAD,EAAS,MAAKC,OAAd,CAAvC;AACA,UAAKW,OAAL,GAAe,KAAf;;AAEA,QAAIV,gBAAgB,IAAI,OAAOA,gBAAgB,CAACW,YAAxB,KAAyC,SAAjE,EAA4E;AAC1E,YAAKA,YAAL,GAAoB,IAApB;AACD,KAX4C,CAa7C;AACA;;;AACA,UAAKZ,OAAL,CAAaM,cAAb,GAA8B,MAAKA,cAAnC,CAf6C,CAiB7C;;AACA,QAAIP,MAAM,CAACI,CAAP,CAASU,MAAb,EAAqB;AACnB,YAAKA,MAAL,GAAcd,MAAM,CAACI,CAAP,CAASU,MAAvB;AACD,KAFD,MAEO,IAAId,MAAM,CAACI,CAAP,CAASW,EAAT,IAAef,MAAM,CAACI,CAAP,CAASW,EAAT,CAAYD,MAA/B,EAAuC;AAC5C,YAAKA,MAAL,GAAcd,MAAM,CAACI,CAAP,CAASW,EAAT,CAAYD,MAA1B;AACD;;AAtB4C;AAuB9C;;;;mCAEcE,M,EAAQC,G,EAAKC,Q,EAAU;AAAA;;AACpC;AACA,WAAKF,MAAL,GAAcA,MAAd;AAEA,UAAMf,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMkB,iBAAiB,GAAGxB,cAAc,CAACqB,MAAD,CAAxC;AACA,UAAMI,aAAa,GAAG,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaD,aAAb,EAAtC;;AAEA,UAAI,KAAKZ,WAAL,IAAoBZ,0BAA0B,CAACqB,GAAD,CAA9C,IAAuD,CAACG,aAA5D,EAA2E;AACzEE,QAAAA,MAAM,CAACC,MAAP,CAAcN,GAAd,EAAmB;AAAET,UAAAA,WAAW,EAAE,KAAKA;AAApB,SAAnB;AACD;;AAED,UAAIP,OAAO,CAACuB,SAAR,IAAqBL,iBAAiB,GAAGrB,oCAA7C,EAAmF;AACjFoB,QAAAA,QAAQ,CACN,IAAIrB,UAAJ,kBACYmB,MAAM,CAACS,IADnB,0CACuDN,iBADvD,kCADM,CAAR;AAKA;AACD;;AAED,UAAIA,iBAAiB,IAAIrB,oCAAzB,EAA+D;AAC7D,YAAI,KAAKY,YAAL,IAAqB,KAAKgB,SAAL,CAAerC,MAAM,CAACsC,eAAtB,CAAzB,EAAiE;AAC/DL,UAAAA,MAAM,CAACC,MAAP,CAAcN,GAAd,EAAmB;AAAEP,YAAAA,YAAY,EAAE,KAAKA;AAArB,WAAnB;AACD;;AAED,YAAIT,OAAO,CAACuB,SAAR,IAAqB,OAAOvB,OAAO,CAACuB,SAAf,KAA6B,QAAtD,EAAgE;AAC9DF,UAAAA,MAAM,CAACC,MAAP,CAAcN,GAAd,EAAmB;AAAEO,YAAAA,SAAS,EAAEvB,OAAO,CAACuB;AAArB,WAAnB;AACD;AACF;;AAED,UAAI,OAAOvB,OAAO,CAAC2B,SAAf,KAA6B,QAAjC,EAA2C;AACzCX,QAAAA,GAAG,CAACW,SAAJ,GAAgB3B,OAAO,CAAC2B,SAAxB;AACD;;AAED,UAAI,OAAO3B,OAAO,CAAC4B,OAAf,KAA2B,QAA/B,EAAyC;AACvCZ,QAAAA,GAAG,CAACY,OAAJ,GAAc5B,OAAO,CAAC4B,OAAtB;AACD;;AAED,UAAI,KAAKf,MAAL,IAAe,KAAKA,MAAL,CAAYgB,OAAZ,EAAnB,EAA0C;AACxC,aAAKhB,MAAL,CAAYiB,KAAZ,6BAAuCC,IAAI,CAACC,SAAL,CAAehB,GAAf,CAAvC,sBAAsE,KAAKd,EAA3E;AACD;;AAEDa,MAAAA,MAAM,CAACkB,OAAP,CAAe,KAAK/B,EAAL,CAAQgC,QAAR,EAAf,EAAmClB,GAAnC,EAAwC,KAAKhB,OAA7C,EAAsD,UAACmC,GAAD,EAAMC,MAAN,EAAiB;AACrE,YAAID,GAAJ,EAAS;AACPlB,UAAAA,QAAQ,CAACkB,GAAD,EAAM,IAAN,CAAR;AACA;AACD;;AAED,YAAI,MAAI,CAACvB,YAAT,EAAuB;AACrBK,UAAAA,QAAQ,CAAC,IAAD,EAAOmB,MAAP,CAAR;AACA;AACD;;AAEDnB,QAAAA,QAAQ,CAAC,IAAD,EAAOmB,MAAM,CAACA,MAAd,CAAR;AACD,OAZD;AAaD;;;;EAlF8B9C,a;;AAqFjC,SAASoB,mBAAT,CAA6BX,MAA7B,EAAqCC,OAArC,EAA8C;AAC5C,SAAOP,YAAY,CAAC4C,WAAb,CAAyBrC,OAAzB,KAAqCD,MAAM,CAACU,YAAnD;AACD;;AAED,SAASD,kBAAT,CAA4BT,MAA5B,EAAoCC,OAApC,EAA6C;AAC3C,SAAOR,WAAW,CAAC6C,WAAZ,CAAwBrC,OAAxB,KAAoCD,MAAM,CAACQ,WAAlD;AACD;;AAED+B,MAAM,CAACC,OAAP,GAAiBzC,kBAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst OperationBase = require('./operation').OperationBase;\nconst resolveReadPreference = require('../utils').resolveReadPreference;\nconst ReadConcern = require('../read_concern');\nconst WriteConcern = require('../write_concern');\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\nconst MongoError = require('../error').MongoError;\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\nclass CommandOperationV2 extends OperationBase {\n  constructor(parent, options, operationOptions) {\n    super(options);\n\n    this.ns = parent.s.namespace.withCollection('$cmd');\n    this.readPreference = resolveReadPreference(parent, this.options);\n    this.readConcern = resolveReadConcern(parent, this.options);\n    this.writeConcern = resolveWriteConcern(parent, this.options);\n    this.explain = false;\n\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\n      this.fullResponse = true;\n    }\n\n    // TODO: A lot of our code depends on having the read preference in the options. This should\n    //       go away, but also requires massive test rewrites.\n    this.options.readPreference = this.readPreference;\n\n    // TODO(NODE-2056): make logger another \"inheritable\" property\n    if (parent.s.logger) {\n      this.logger = parent.s.logger;\n    } else if (parent.s.db && parent.s.db.logger) {\n      this.logger = parent.s.db.logger;\n    }\n  }\n\n  executeCommand(server, cmd, callback) {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, { readConcern: this.readConcern });\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(\n        new MongoError(\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n        )\n      );\n      return;\n    }\n\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\n        Object.assign(cmd, { writeConcern: this.writeConcern });\n      }\n\n      if (options.collation && typeof options.collation === 'object') {\n        Object.assign(cmd, { collation: options.collation });\n      }\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.comment === 'string') {\n      cmd.comment = options.comment;\n    }\n\n    if (this.logger && this.logger.isDebug()) {\n      this.logger.debug(`executing command ${JSON.stringify(cmd)} against ${this.ns}`);\n    }\n\n    server.command(this.ns.toString(), cmd, this.options, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      if (this.fullResponse) {\n        callback(null, result);\n        return;\n      }\n\n      callback(null, result.result);\n    });\n  }\n}\n\nfunction resolveWriteConcern(parent, options) {\n  return WriteConcern.fromOptions(options) || parent.writeConcern;\n}\n\nfunction resolveReadConcern(parent, options) {\n  return ReadConcern.fromOptions(options) || parent.readConcern;\n}\n\nmodule.exports = CommandOperationV2;\n"]},"metadata":{},"sourceType":"script"}