{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport BSON from \"bson\";\nimport CoreRemoteMongoReadOperation from \"./CoreRemoteMongoReadOperation\";\nimport ResultDecoders from \"./ResultDecoders\";\n\nvar CoreRemoteMongoCollectionImpl = function () {\n  function CoreRemoteMongoCollectionImpl(name, databaseName, service, codec) {\n    var _this = this;\n\n    this.name = name;\n    this.databaseName = databaseName;\n    this.service = service;\n    this.codec = codec;\n    this.namespace = this.databaseName + \".\" + this.name;\n\n    this.baseOperationArgs = function () {\n      return {\n        collection: _this.name,\n        database: _this.databaseName\n      };\n    }();\n  }\n\n  CoreRemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {\n    return new CoreRemoteMongoCollectionImpl(this.name, this.databaseName, this.service, codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.find = function (filter, options) {\n    if (filter === void 0) {\n      filter = {};\n    }\n\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.query = filter;\n\n    if (options) {\n      if (options.limit) {\n        args.limit = options.limit;\n      }\n\n      if (options.projection) {\n        args.project = options.projection;\n      }\n\n      if (options.sort) {\n        args.sort = options.sort;\n      }\n    }\n\n    return new CoreRemoteMongoReadOperation(\"find\", args, this.service, this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.findOne = function (filter, options) {\n    if (filter === void 0) {\n      filter = {};\n    }\n\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.query = filter;\n\n    if (options) {\n      if (options.projection) {\n        args.project = options.projection;\n      }\n\n      if (options.sort) {\n        args.sort = options.sort;\n      }\n    }\n\n    return this.service.callFunction(\"findOne\", [args], this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.findOneAndUpdate = function (filter, update, options) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.filter = filter;\n    args.update = update;\n\n    if (options) {\n      if (options.projection) {\n        args.projection = options.projection;\n      }\n\n      if (options.sort) {\n        args.sort = options.sort;\n      }\n\n      if (options.upsert) {\n        args.upsert = true;\n      }\n\n      if (options.returnNewDocument) {\n        args.returnNewDocument = true;\n      }\n    }\n\n    return this.service.callFunction(\"findOneAndUpdate\", [args], this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.findOneAndReplace = function (filter, replacement, options) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.filter = filter;\n    args.update = replacement;\n\n    if (options) {\n      if (options.projection) {\n        args.projection = options.projection;\n      }\n\n      if (options.sort) {\n        args.sort = options.sort;\n      }\n\n      if (options.upsert) {\n        args.upsert = true;\n      }\n\n      if (options.returnNewDocument) {\n        args.returnNewDocument = true;\n      }\n    }\n\n    return this.service.callFunction(\"findOneAndReplace\", [args], this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.findOneAndDelete = function (filter, options) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.filter = filter;\n\n    if (options) {\n      if (options.projection) {\n        args.projection = options.projection;\n      }\n\n      if (options.sort) {\n        args.sort = options.sort;\n      }\n    }\n\n    return this.service.callFunction(\"findOneAndDelete\", [args], this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.pipeline = pipeline;\n    return new CoreRemoteMongoReadOperation(\"aggregate\", args, this.service, this.codec);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.count = function (query, options) {\n    if (query === void 0) {\n      query = {};\n    }\n\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.query = query;\n\n    if (options && options.limit) {\n      args.limit = options.limit;\n    }\n\n    return this.service.callFunction(\"count\", [args]);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.insertOne = function (value) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.document = this.generateObjectIdIfMissing(this.codec ? this.codec.encode(value) : value);\n    return this.service.callFunction(\"insertOne\", [args], ResultDecoders.remoteInsertOneResultDecoder);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.insertMany = function (docs) {\n    var _this = this;\n\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.documents = docs.map(function (doc) {\n      return _this.generateObjectIdIfMissing(_this.codec ? _this.codec.encode(doc) : doc);\n    });\n    return this.service.callFunction(\"insertMany\", [args], ResultDecoders.remoteInsertManyResultDecoder);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.deleteOne = function (query) {\n    return this.executeDelete(query, false);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.deleteMany = function (query) {\n    return this.executeDelete(query, true);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.updateOne = function (query, update, options) {\n    return this.executeUpdate(query, update, options, false);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.updateMany = function (query, update, options) {\n    return this.executeUpdate(query, update, options, true);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.watch = function (arg) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    if (arg !== undefined) {\n      if (arg instanceof Array) {\n        if (arg.length !== 0) {\n          args.ids = arg;\n        }\n      } else if (arg instanceof Object) {\n        args.filter = arg;\n      }\n    }\n\n    args.useCompactEvents = false;\n    return this.service.streamFunction(\"watch\", [args], new ResultDecoders.ChangeEventDecoder(this.codec));\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.watchCompact = function (ids) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.ids = ids;\n    args.useCompactEvents = true;\n    return this.service.streamFunction(\"watch\", [args], new ResultDecoders.CompactChangeEventDecoder(this.codec));\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.executeDelete = function (query, multi) {\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.query = query;\n    return this.service.callFunction(multi ? \"deleteMany\" : \"deleteOne\", [args], ResultDecoders.remoteDeleteResultDecoder);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.executeUpdate = function (query, update, options, multi) {\n    if (multi === void 0) {\n      multi = false;\n    }\n\n    var args = __assign({}, this.baseOperationArgs);\n\n    args.query = query;\n    args.update = update;\n\n    if (options && options.upsert) {\n      args.upsert = options.upsert;\n    }\n\n    return this.service.callFunction(multi ? \"updateMany\" : \"updateOne\", [args], ResultDecoders.remoteUpdateResultDecoder);\n  };\n\n  CoreRemoteMongoCollectionImpl.prototype.generateObjectIdIfMissing = function (doc) {\n    if (!doc._id) {\n      var newDoc = doc;\n      newDoc._id = new BSON.ObjectID();\n      return newDoc;\n    }\n\n    return doc;\n  };\n\n  return CoreRemoteMongoCollectionImpl;\n}();\n\nexport default CoreRemoteMongoCollectionImpl;","map":{"version":3,"sources":["../../../src/internal/CoreRemoteMongoCollectionImpl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport BSON from \"bson\";\nimport CoreRemoteMongoReadOperation from \"./CoreRemoteMongoReadOperation\";\nimport ResultDecoders from \"./ResultDecoders\";\nvar CoreRemoteMongoCollectionImpl = (function () {\n    function CoreRemoteMongoCollectionImpl(name, databaseName, service, codec) {\n        var _this = this;\n        this.name = name;\n        this.databaseName = databaseName;\n        this.service = service;\n        this.codec = codec;\n        this.namespace = this.databaseName + \".\" + this.name;\n        this.baseOperationArgs = (function () { return ({\n            collection: _this.name,\n            database: _this.databaseName\n        }); })();\n    }\n    CoreRemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {\n        return new CoreRemoteMongoCollectionImpl(this.name, this.databaseName, this.service, codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.find = function (filter, options) {\n        if (filter === void 0) { filter = {}; }\n        var args = __assign({}, this.baseOperationArgs);\n        args.query = filter;\n        if (options) {\n            if (options.limit) {\n                args.limit = options.limit;\n            }\n            if (options.projection) {\n                args.project = options.projection;\n            }\n            if (options.sort) {\n                args.sort = options.sort;\n            }\n        }\n        return new CoreRemoteMongoReadOperation(\"find\", args, this.service, this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.findOne = function (filter, options) {\n        if (filter === void 0) { filter = {}; }\n        var args = __assign({}, this.baseOperationArgs);\n        args.query = filter;\n        if (options) {\n            if (options.projection) {\n                args.project = options.projection;\n            }\n            if (options.sort) {\n                args.sort = options.sort;\n            }\n        }\n        return this.service.callFunction(\"findOne\", [args], this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.findOneAndUpdate = function (filter, update, options) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.filter = filter;\n        args.update = update;\n        if (options) {\n            if (options.projection) {\n                args.projection = options.projection;\n            }\n            if (options.sort) {\n                args.sort = options.sort;\n            }\n            if (options.upsert) {\n                args.upsert = true;\n            }\n            if (options.returnNewDocument) {\n                args.returnNewDocument = true;\n            }\n        }\n        return this.service.callFunction(\"findOneAndUpdate\", [args], this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.findOneAndReplace = function (filter, replacement, options) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.filter = filter;\n        args.update = replacement;\n        if (options) {\n            if (options.projection) {\n                args.projection = options.projection;\n            }\n            if (options.sort) {\n                args.sort = options.sort;\n            }\n            if (options.upsert) {\n                args.upsert = true;\n            }\n            if (options.returnNewDocument) {\n                args.returnNewDocument = true;\n            }\n        }\n        return this.service.callFunction(\"findOneAndReplace\", [args], this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.findOneAndDelete = function (filter, options) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.filter = filter;\n        if (options) {\n            if (options.projection) {\n                args.projection = options.projection;\n            }\n            if (options.sort) {\n                args.sort = options.sort;\n            }\n        }\n        return this.service.callFunction(\"findOneAndDelete\", [args], this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.pipeline = pipeline;\n        return new CoreRemoteMongoReadOperation(\"aggregate\", args, this.service, this.codec);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.count = function (query, options) {\n        if (query === void 0) { query = {}; }\n        var args = __assign({}, this.baseOperationArgs);\n        args.query = query;\n        if (options && options.limit) {\n            args.limit = options.limit;\n        }\n        return this.service.callFunction(\"count\", [args]);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.insertOne = function (value) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.document = this.generateObjectIdIfMissing(this.codec ? this.codec.encode(value) : value);\n        return this.service.callFunction(\"insertOne\", [args], ResultDecoders.remoteInsertOneResultDecoder);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.insertMany = function (docs) {\n        var _this = this;\n        var args = __assign({}, this.baseOperationArgs);\n        args.documents = docs.map(function (doc) {\n            return _this.generateObjectIdIfMissing(_this.codec ? _this.codec.encode(doc) : doc);\n        });\n        return this.service.callFunction(\"insertMany\", [args], ResultDecoders.remoteInsertManyResultDecoder);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.deleteOne = function (query) {\n        return this.executeDelete(query, false);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.deleteMany = function (query) {\n        return this.executeDelete(query, true);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.updateOne = function (query, update, options) {\n        return this.executeUpdate(query, update, options, false);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.updateMany = function (query, update, options) {\n        return this.executeUpdate(query, update, options, true);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.watch = function (arg) {\n        var args = __assign({}, this.baseOperationArgs);\n        if (arg !== undefined) {\n            if (arg instanceof Array) {\n                if (arg.length !== 0) {\n                    args.ids = arg;\n                }\n            }\n            else if (arg instanceof Object) {\n                args.filter = arg;\n            }\n        }\n        args.useCompactEvents = false;\n        return this.service.streamFunction(\"watch\", [args], new ResultDecoders.ChangeEventDecoder(this.codec));\n    };\n    CoreRemoteMongoCollectionImpl.prototype.watchCompact = function (ids) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.ids = ids;\n        args.useCompactEvents = true;\n        return this.service.streamFunction(\"watch\", [args], new ResultDecoders.CompactChangeEventDecoder(this.codec));\n    };\n    CoreRemoteMongoCollectionImpl.prototype.executeDelete = function (query, multi) {\n        var args = __assign({}, this.baseOperationArgs);\n        args.query = query;\n        return this.service.callFunction(multi ? \"deleteMany\" : \"deleteOne\", [args], ResultDecoders.remoteDeleteResultDecoder);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.executeUpdate = function (query, update, options, multi) {\n        if (multi === void 0) { multi = false; }\n        var args = __assign({}, this.baseOperationArgs);\n        args.query = query;\n        args.update = update;\n        if (options && options.upsert) {\n            args.upsert = options.upsert;\n        }\n        return this.service.callFunction(multi ? \"updateMany\" : \"updateOne\", [args], ResultDecoders.remoteUpdateResultDecoder);\n    };\n    CoreRemoteMongoCollectionImpl.prototype.generateObjectIdIfMissing = function (doc) {\n        if (!doc._id) {\n            var newDoc = doc;\n            newDoc._id = new BSON.ObjectID();\n            return newDoc;\n        }\n        return doc;\n    };\n    return CoreRemoteMongoCollectionImpl;\n}());\nexport default CoreRemoteMongoCollectionImpl;\n//# sourceMappingURL=CoreRemoteMongoCollectionImpl.js.map"]},"metadata":{},"sourceType":"module"}