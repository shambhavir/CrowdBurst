{"ast":null,"code":"var AuthInfo = function () {\n  function AuthInfo(userId, deviceId, accessToken, refreshToken, loggedInProviderType, loggedInProviderName, lastAuthActivity, userProfile) {\n    this.userId = userId;\n    this.deviceId = deviceId;\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    this.loggedInProviderType = loggedInProviderType;\n    this.loggedInProviderName = loggedInProviderName;\n    this.lastAuthActivity = lastAuthActivity;\n    this.userProfile = userProfile;\n  }\n\n  AuthInfo.empty = function () {\n    return new AuthInfo(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);\n  };\n\n  Object.defineProperty(AuthInfo.prototype, \"hasUser\", {\n    get: function () {\n      return this.userId !== undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AuthInfo.prototype, \"isEmpty\", {\n    get: function () {\n      return this.deviceId === undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AuthInfo.prototype.loggedOut = function () {\n    return new AuthInfo(this.userId, this.deviceId, undefined, undefined, this.loggedInProviderType, this.loggedInProviderName, new Date(), this.userProfile);\n  };\n\n  AuthInfo.prototype.withClearedUser = function () {\n    return new AuthInfo(undefined, this.deviceId, undefined, undefined, undefined, undefined, undefined, undefined);\n  };\n\n  AuthInfo.prototype.withAuthProvider = function (providerType, providerName) {\n    return new AuthInfo(this.userId, this.deviceId, this.accessToken, this.refreshToken, providerType, providerName, new Date(), this.userProfile);\n  };\n\n  AuthInfo.prototype.withNewAuthActivityTime = function () {\n    return new AuthInfo(this.userId, this.deviceId, this.accessToken, this.refreshToken, this.loggedInProviderType, this.loggedInProviderName, new Date(), this.userProfile);\n  };\n\n  Object.defineProperty(AuthInfo.prototype, \"isLoggedIn\", {\n    get: function () {\n      return this.accessToken !== undefined && this.refreshToken !== undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AuthInfo.prototype.merge = function (newInfo) {\n    return new AuthInfo(newInfo.userId === undefined ? this.userId : newInfo.userId, newInfo.deviceId === undefined ? this.deviceId : newInfo.deviceId, newInfo.accessToken === undefined ? this.accessToken : newInfo.accessToken, newInfo.refreshToken === undefined ? this.refreshToken : newInfo.refreshToken, newInfo.loggedInProviderType === undefined ? this.loggedInProviderType : newInfo.loggedInProviderType, newInfo.loggedInProviderName === undefined ? this.loggedInProviderName : newInfo.loggedInProviderName, newInfo.lastAuthActivity === undefined ? this.lastAuthActivity : newInfo.lastAuthActivity, newInfo.userProfile === undefined ? this.userProfile : newInfo.userProfile);\n  };\n\n  return AuthInfo;\n}();\n\nexport default AuthInfo;","map":{"version":3,"sources":["../../../../src/auth/internal/AuthInfo.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var AuthInfo = (function () {\n    function AuthInfo(userId, deviceId, accessToken, refreshToken, loggedInProviderType, loggedInProviderName, lastAuthActivity, userProfile) {\n        this.userId = userId;\n        this.deviceId = deviceId;\n        this.accessToken = accessToken;\n        this.refreshToken = refreshToken;\n        this.loggedInProviderType = loggedInProviderType;\n        this.loggedInProviderName = loggedInProviderName;\n        this.lastAuthActivity = lastAuthActivity;\n        this.userProfile = userProfile;\n    }\n    AuthInfo.empty = function () {\n        return new AuthInfo(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);\n    };\n    Object.defineProperty(AuthInfo.prototype, \"hasUser\", {\n        get: function () {\n            return this.userId !== undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AuthInfo.prototype, \"isEmpty\", {\n        get: function () {\n            return this.deviceId === undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AuthInfo.prototype.loggedOut = function () {\n        return new AuthInfo(this.userId, this.deviceId, undefined, undefined, this.loggedInProviderType, this.loggedInProviderName, new Date(), this.userProfile);\n    };\n    AuthInfo.prototype.withClearedUser = function () {\n        return new AuthInfo(undefined, this.deviceId, undefined, undefined, undefined, undefined, undefined, undefined);\n    };\n    AuthInfo.prototype.withAuthProvider = function (providerType, providerName) {\n        return new AuthInfo(this.userId, this.deviceId, this.accessToken, this.refreshToken, providerType, providerName, new Date(), this.userProfile);\n    };\n    AuthInfo.prototype.withNewAuthActivityTime = function () {\n        return new AuthInfo(this.userId, this.deviceId, this.accessToken, this.refreshToken, this.loggedInProviderType, this.loggedInProviderName, new Date(), this.userProfile);\n    };\n    Object.defineProperty(AuthInfo.prototype, \"isLoggedIn\", {\n        get: function () {\n            return this.accessToken !== undefined && this.refreshToken !== undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AuthInfo.prototype.merge = function (newInfo) {\n        return new AuthInfo(newInfo.userId === undefined ? this.userId : newInfo.userId, newInfo.deviceId === undefined ? this.deviceId : newInfo.deviceId, newInfo.accessToken === undefined\n            ? this.accessToken\n            : newInfo.accessToken, newInfo.refreshToken === undefined\n            ? this.refreshToken\n            : newInfo.refreshToken, newInfo.loggedInProviderType === undefined\n            ? this.loggedInProviderType\n            : newInfo.loggedInProviderType, newInfo.loggedInProviderName === undefined\n            ? this.loggedInProviderName\n            : newInfo.loggedInProviderName, newInfo.lastAuthActivity === undefined\n            ? this.lastAuthActivity\n            : newInfo.lastAuthActivity, newInfo.userProfile === undefined\n            ? this.userProfile\n            : newInfo.userProfile);\n    };\n    return AuthInfo;\n}());\nexport default AuthInfo;\n//# sourceMappingURL=AuthInfo.js.map"]},"metadata":{},"sourceType":"module"}