{"ast":null,"code":"import _classCallCheck from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var List2=/*#__PURE__*/function(_React$Component){_inherits(List2,_React$Component);var _super=_createSuper(List2);function List2(props){var _this;_classCallCheck(this,List2);_this=_super.call(this,props);_this.state={filtered:[]};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(List2,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({filtered:this.props.items});}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){this.setState({filtered:nextProps.items});}},{key:\"handleChange\",value:function handleChange(e){// Variable to hold the original version of the list\nvar currentList=[];// Variable to hold the filtered list before putting into state\nvar newList=[];// If the search bar isn't empty\nif(e.target.value!==\"\"){// Assign the original list to currentList\ncurrentList=this.props.items;// Use .filter() to determine which items should be displayed\n// based on the search terms\nnewList=currentList.filter(function(item){// change current item to lowercase\nvar lc=item.toLowerCase();//const lc = \"hello\"; \n// change search term to lowercase\nvar filter=e.target.value.toLowerCase();//const filter = e.target.value; \n// check to see if the current list item includes the search term\n// If it does, it will be added to newList. Using lowercase eliminates\n// issues with capitalization in search terms and search content\nreturn lc.includes(filter);//return lc; \n});}else{// If the search bar is empty, set newList to original task list\nnewList=this.props.items;}// Set the filtered state based on what our rules added to newList\nthis.setState({filtered:newList});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input\",onChange:this.handleChange,placeholder:\"Search..in customer added\"}),/*#__PURE__*/React.createElement(\"ul\",null,this.state.filtered.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item},item,\" \\xA0\",/*#__PURE__*/React.createElement(\"span\",{className:\"delete\",onClick:function onClick(){return _this2.props.delete(item);}}));})));}}]);return List2;}(React.Component);export default List2;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/Components/List2.js"],"names":["React","Component","List2","props","state","filtered","handleChange","bind","setState","items","nextProps","e","currentList","newList","target","value","filter","item","lc","toLowerCase","includes","map","delete"],"mappings":"8zBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,C,GAEMC,CAAAA,K,0GACL,eAAYC,KAAZ,CAAmB,uCAClB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACZC,QAAQ,CAAE,EADE,CAAb,CAGA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CALkB,aAMlB,C,+EAEmB,CACjB,KAAKC,QAAL,CAAc,CACZH,QAAQ,CAAE,KAAKF,KAAL,CAAWM,KADT,CAAd,EAGD,C,4EAEyBC,S,CAAW,CACnC,KAAKF,QAAL,CAAc,CACZH,QAAQ,CAAEK,SAAS,CAACD,KADR,CAAd,EAGD,C,kDAEWE,C,CAAG,CACf;AACE,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACF;AACE,GAAIC,CAAAA,OAAO,CAAG,EAAd,CAEF;AACE,GAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,GAAmB,EAAvB,CAA2B,CAC5B;AACGH,WAAW,CAAG,KAAKT,KAAL,CAAWM,KAAzB,CAEH;AACA;AACGI,OAAO,CAAGD,WAAW,CAACI,MAAZ,CAAmB,SAAAC,IAAI,CAAI,CACvC;AACF,GAAMC,CAAAA,EAAE,CAAGD,IAAI,CAACE,WAAL,EAAX,CACA;AACE;AACF,GAAMH,CAAAA,MAAM,CAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeI,WAAf,EAAf,CACA;AACE;AACA;AACA;AACF,MAAOD,CAAAA,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP,CACA;AACK,CAZS,CAAV,CAaD,CAnBD,IAmBO,CACR;AACGH,OAAO,CAAG,KAAKV,KAAL,CAAWM,KAArB,CACD,CACH;AACE,KAAKD,QAAL,CAAc,CACZH,QAAQ,CAAEQ,OADE,CAAd,EAGD,C,uCAEO,iBACR,mBACC,4CACC,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,OAA7B,CAAqC,QAAQ,CAAE,KAAKP,YAApD,CAAkE,WAAW,CAAC,2BAA9E,EADD,cAEE,8BACE,KAAKF,KAAL,CAAWC,QAAX,CAAoBgB,GAApB,CAAwB,SAAAJ,IAAI,qBAC5B,0BAAI,GAAG,CAAEA,IAAT,EACEA,IADF,sBAEC,4BACC,SAAS,CAAC,QADX,CAEC,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACd,KAAL,CAAWmB,MAAX,CAAkBL,IAAlB,CAAN,EAFV,EAFD,CAD4B,EAA5B,CADF,CAFF,CADD,CAgBA,C,mBA1EkBjB,KAAK,CAACC,S,EA6E1B,cAAeC,CAAAA,KAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass List2 extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfiltered: []\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\t\n\thandleChange(e) {\n\t\t// Variable to hold the original version of the list\n    let currentList = [];\n\t\t// Variable to hold the filtered list before putting into state\n    let newList = [];\n\t\t\n\t\t// If the search bar isn't empty\n    if (e.target.value !== \"\") {\n\t\t\t// Assign the original list to currentList\n      currentList = this.props.items;\n\t\t\t\n\t\t\t// Use .filter() to determine which items should be displayed\n\t\t\t// based on the search terms\n      newList = currentList.filter(item => {\n\t\t\t\t// change current item to lowercase\n\t\tconst lc = item.toLowerCase();\n\t\t//const lc = \"hello\"; \n\t\t\t\t// change search term to lowercase\n\t\tconst filter = e.target.value.toLowerCase();\n\t\t//const filter = e.target.value; \n\t\t\t\t// check to see if the current list item includes the search term\n\t\t\t\t// If it does, it will be added to newList. Using lowercase eliminates\n\t\t\t\t// issues with capitalization in search terms and search content\n\t\treturn lc.includes(filter);\n\t\t//return lc; \n      });\n    } else {\n\t\t\t// If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    }\n\t\t// Set the filtered state based on what our rules added to newList\n    this.setState({\n      filtered: newList\n    });\n  }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search..in customer added\" />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.filtered.map(item => (\n\t\t\t\t\t\t\t<li key={item}>\n\t\t\t\t\t\t\t\t{item} &nbsp;\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"delete\"\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.delete(item)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default List2"]},"metadata":{},"sourceType":"module"}