{"ast":null,"code":"import Event from \"./internal/net/Event\";\nimport StitchEvent from \"./internal/net/StitchEvent\";\n\nvar Stream = function () {\n  function Stream(eventStream, decoder) {\n    this.eventStream = eventStream;\n    this.decoder = decoder;\n    this.listeners = [];\n  }\n\n  Stream.prototype.next = function () {\n    var _this = this;\n\n    return this.eventStream.nextEvent().then(function (event) {\n      var se = StitchEvent.fromEvent(event, _this.decoder);\n\n      if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n        throw se.error;\n      }\n\n      if (se.eventName === Event.MESSAGE_EVENT) {\n        return se.data;\n      }\n\n      return _this.next();\n    });\n  };\n\n  Stream.prototype.onNext = function (callback) {\n    var _this = this;\n\n    var wrapper = {\n      onEvent: function (e) {\n        var se = StitchEvent.fromEvent(e, _this.decoder);\n\n        if (se.eventName !== Event.MESSAGE_EVENT) {\n          return;\n        }\n\n        callback(se.data);\n      }\n    };\n    this.eventStream.addListener(wrapper);\n  };\n\n  Stream.prototype.onError = function (callback) {\n    var _this = this;\n\n    var wrapper = {\n      onEvent: function (e) {\n        var se = StitchEvent.fromEvent(e, _this.decoder);\n\n        if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n          callback(se.error);\n        }\n      }\n    };\n    this.eventStream.addListener(wrapper);\n  };\n\n  Stream.prototype.addListener = function (listener) {\n    var _this = this;\n\n    var wrapper = {\n      onEvent: function (e) {\n        var se = StitchEvent.fromEvent(e, _this.decoder);\n\n        if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n          if (listener.onError) {\n            listener.onError(se.error);\n          }\n        } else {\n          if (listener.onNext) {\n            listener.onNext(se.data);\n          }\n        }\n      }\n    };\n    this.listeners.push([listener, wrapper]);\n    this.eventStream.addListener(wrapper);\n  };\n\n  Stream.prototype.removeListener = function (listener) {\n    var index = -1;\n\n    for (var i = 0; i < this.listeners.length; i++) {\n      if (this.listeners[i][0] === listener) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n\n    var wrapper = this.listeners[index][1];\n    this.listeners.splice(index, 1);\n    this.eventStream.removeListener(wrapper);\n  };\n\n  Stream.prototype.isOpen = function () {\n    return this.eventStream.isOpen();\n  };\n\n  Stream.prototype.close = function () {\n    this.eventStream.close();\n  };\n\n  return Stream;\n}();\n\nexport default Stream;","map":{"version":3,"sources":["../../src/Stream.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Event from \"./internal/net/Event\";\nimport StitchEvent from \"./internal/net/StitchEvent\";\nvar Stream = (function () {\n    function Stream(eventStream, decoder) {\n        this.eventStream = eventStream;\n        this.decoder = decoder;\n        this.listeners = [];\n    }\n    Stream.prototype.next = function () {\n        var _this = this;\n        return this.eventStream.nextEvent()\n            .then(function (event) {\n            var se = StitchEvent.fromEvent(event, _this.decoder);\n            if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n                throw se.error;\n            }\n            if (se.eventName === Event.MESSAGE_EVENT) {\n                return se.data;\n            }\n            return _this.next();\n        });\n    };\n    Stream.prototype.onNext = function (callback) {\n        var _this = this;\n        var wrapper = {\n            onEvent: function (e) {\n                var se = StitchEvent.fromEvent(e, _this.decoder);\n                if (se.eventName !== Event.MESSAGE_EVENT) {\n                    return;\n                }\n                callback(se.data);\n            }\n        };\n        this.eventStream.addListener(wrapper);\n    };\n    Stream.prototype.onError = function (callback) {\n        var _this = this;\n        var wrapper = {\n            onEvent: function (e) {\n                var se = StitchEvent.fromEvent(e, _this.decoder);\n                if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n                    callback(se.error);\n                }\n            }\n        };\n        this.eventStream.addListener(wrapper);\n    };\n    Stream.prototype.addListener = function (listener) {\n        var _this = this;\n        var wrapper = {\n            onEvent: function (e) {\n                var se = StitchEvent.fromEvent(e, _this.decoder);\n                if (se.eventName === StitchEvent.ERROR_EVENT_NAME) {\n                    if (listener.onError) {\n                        listener.onError(se.error);\n                    }\n                }\n                else {\n                    if (listener.onNext) {\n                        listener.onNext(se.data);\n                    }\n                }\n            }\n        };\n        this.listeners.push([listener, wrapper]);\n        this.eventStream.addListener(wrapper);\n    };\n    Stream.prototype.removeListener = function (listener) {\n        var index = -1;\n        for (var i = 0; i < this.listeners.length; i++) {\n            if (this.listeners[i][0] === listener) {\n                index = i;\n                break;\n            }\n        }\n        if (index === -1) {\n            return;\n        }\n        var wrapper = this.listeners[index][1];\n        this.listeners.splice(index, 1);\n        this.eventStream.removeListener(wrapper);\n    };\n    Stream.prototype.isOpen = function () {\n        return this.eventStream.isOpen();\n    };\n    Stream.prototype.close = function () {\n        this.eventStream.close();\n    };\n    return Stream;\n}());\nexport default Stream;\n//# sourceMappingURL=Stream.js.map"]},"metadata":{},"sourceType":"module"}