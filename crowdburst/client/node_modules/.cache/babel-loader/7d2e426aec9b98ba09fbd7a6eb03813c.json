{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/index.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport grocerystores from \"./Components/grocerystores\"; //import { render } from 'ejs';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://crowdburst.herokuapp.com/v1/graphql'\n  })\n});\n\nconst App = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"grocerystores\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}));\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 8\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/index.js"],"names":["React","render","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","serviceWorker","grocerystores","client","cache","link","uri","App","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAsD,gBAAtD,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CACb;AACEM,EAAAA,KAAK,EAAE,IAAIJ,aAAJ,EADT;AAEEK,EAAAA,IAAI,EAAE,IAAIN,QAAJ,CAAa;AACjBO,IAAAA,GAAG,EAAE;AADY,GAAb;AAFR,CADa,CAAf;;AASA,MAAMC,GAAG,GAAG,mBACV,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAIJ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF;;AASAP,MAAM,eAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAASY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAT,CAAN,C,CACA;AACA;AACA;;AACAR,aAAa,CAACS,UAAd","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport './index.css';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'; \n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport grocerystores from \"./Components/grocerystores\"; \n//import { render } from 'ejs';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nconst client = new ApolloClient(\n  {\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n      uri: 'https://crowdburst.herokuapp.com/v1/graphql',\n    })\n  }\n); \n\nconst App = () => (\n  <ApolloProvider client = {client}>\n    {/* <div>\n      <h2>My first React App</h2>\n    </div> */}\n    <grocerystores />\n  </ApolloProvider>\n); \n\nrender(<App/>, document.getElementById('root')); \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}