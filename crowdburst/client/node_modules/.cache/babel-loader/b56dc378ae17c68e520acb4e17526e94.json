{"ast":null,"code":"import { StitchAppClientConfiguration } from \"mongodb-stitch-core-sdk\";\nimport LocalStorage from \"./internal/common/LocalStorage\";\nimport BrowserFetchStreamTransport from \"./internal/net/BrowserFetchStreamTransport\";\nimport BrowserFetchTransport from \"./internal/net/BrowserFetchTransport\";\nimport StitchAppClientImpl from \"./internal/StitchAppClientImpl\";\nvar DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\nvar appClients = {};\n\nvar Stitch = function () {\n  function Stitch() {}\n\n  Object.defineProperty(Stitch, \"defaultAppClient\", {\n    get: function () {\n      if (Stitch.defaultClientAppId === undefined) {\n        throw new Error(\"default app client has not yet been initialized/set\");\n      }\n\n      return appClients[Stitch.defaultClientAppId];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Stitch.getAppClient = function (clientAppId) {\n    if (appClients[clientAppId] === undefined) {\n      throw new Error(\"client for app '\" + clientAppId + \"' has not yet been initialized\");\n    }\n\n    return appClients[clientAppId];\n  };\n\n  Stitch.hasAppClient = function (clientAppId) {\n    return appClients[clientAppId] !== undefined;\n  };\n\n  Stitch.initializeDefaultAppClient = function (clientAppId, config) {\n    if (config === void 0) {\n      config = new StitchAppClientConfiguration.Builder().build();\n    }\n\n    if (clientAppId === undefined || clientAppId === \"\") {\n      throw new Error(\"clientAppId must be set to a non-empty string\");\n    }\n\n    if (Stitch.defaultClientAppId !== undefined) {\n      throw new Error(\"default app can only be set once; currently set to '\" + Stitch.defaultClientAppId + \"'\");\n    }\n\n    var client = Stitch.initializeAppClient(clientAppId, config);\n    Stitch.defaultClientAppId = clientAppId;\n    return client;\n  };\n\n  Stitch.initializeAppClient = function (clientAppId, config) {\n    if (config === void 0) {\n      config = new StitchAppClientConfiguration.Builder().build();\n    }\n\n    if (clientAppId === undefined || clientAppId === \"\") {\n      throw new Error(\"clientAppId must be set to a non-empty string\");\n    }\n\n    if (appClients[clientAppId] !== undefined) {\n      throw new Error(\"client for app '\" + clientAppId + \"' has already been initialized\");\n    }\n\n    var builder = config.builder ? config.builder() : new StitchAppClientConfiguration.Builder(config);\n\n    if (builder.storage === undefined) {\n      builder.withStorage(new LocalStorage(clientAppId));\n    }\n\n    if (builder.transport === undefined) {\n      if (window[\"EventSource\"]) {\n        builder.withTransport(new BrowserFetchStreamTransport());\n      } else {\n        builder.withTransport(new BrowserFetchTransport());\n      }\n    }\n\n    if (builder.baseUrl === undefined || builder.baseUrl === \"\") {\n      builder.withBaseUrl(DEFAULT_BASE_URL);\n    }\n\n    if (builder.localAppName === undefined || builder.localAppName === \"\") {\n      builder.withLocalAppName(Stitch.localAppName);\n    }\n\n    if (builder.localAppVersion === undefined || builder.localAppVersion === \"\") {\n      builder.withLocalAppVersion(Stitch.localAppVersion);\n    }\n\n    var client = new StitchAppClientImpl(clientAppId, builder.build());\n    appClients[clientAppId] = client;\n    return client;\n  };\n\n  Stitch.clearApps = function () {\n    appClients = {};\n  };\n\n  return Stitch;\n}();\n\nexport default Stitch;","map":{"version":3,"sources":["../../../src/core/Stitch.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { StitchAppClientConfiguration } from \"mongodb-stitch-core-sdk\";\nimport LocalStorage from \"./internal/common/LocalStorage\";\nimport BrowserFetchStreamTransport from \"./internal/net/BrowserFetchStreamTransport\";\nimport BrowserFetchTransport from \"./internal/net/BrowserFetchTransport\";\nimport StitchAppClientImpl from \"./internal/StitchAppClientImpl\";\nvar DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\nvar appClients = {};\nvar Stitch = (function () {\n    function Stitch() {\n    }\n    Object.defineProperty(Stitch, \"defaultAppClient\", {\n        get: function () {\n            if (Stitch.defaultClientAppId === undefined) {\n                throw new Error(\"default app client has not yet been initialized/set\");\n            }\n            return appClients[Stitch.defaultClientAppId];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stitch.getAppClient = function (clientAppId) {\n        if (appClients[clientAppId] === undefined) {\n            throw new Error(\"client for app '\" + clientAppId + \"' has not yet been initialized\");\n        }\n        return appClients[clientAppId];\n    };\n    Stitch.hasAppClient = function (clientAppId) {\n        return appClients[clientAppId] !== undefined;\n    };\n    Stitch.initializeDefaultAppClient = function (clientAppId, config) {\n        if (config === void 0) { config = new StitchAppClientConfiguration.Builder().build(); }\n        if (clientAppId === undefined || clientAppId === \"\") {\n            throw new Error(\"clientAppId must be set to a non-empty string\");\n        }\n        if (Stitch.defaultClientAppId !== undefined) {\n            throw new Error(\"default app can only be set once; currently set to '\" + Stitch.defaultClientAppId + \"'\");\n        }\n        var client = Stitch.initializeAppClient(clientAppId, config);\n        Stitch.defaultClientAppId = clientAppId;\n        return client;\n    };\n    Stitch.initializeAppClient = function (clientAppId, config) {\n        if (config === void 0) { config = new StitchAppClientConfiguration.Builder().build(); }\n        if (clientAppId === undefined || clientAppId === \"\") {\n            throw new Error(\"clientAppId must be set to a non-empty string\");\n        }\n        if (appClients[clientAppId] !== undefined) {\n            throw new Error(\"client for app '\" + clientAppId + \"' has already been initialized\");\n        }\n        var builder = config.builder ? config.builder() : new StitchAppClientConfiguration.Builder(config);\n        if (builder.storage === undefined) {\n            builder.withStorage(new LocalStorage(clientAppId));\n        }\n        if (builder.transport === undefined) {\n            if (window[\"EventSource\"]) {\n                builder.withTransport(new BrowserFetchStreamTransport());\n            }\n            else {\n                builder.withTransport(new BrowserFetchTransport());\n            }\n        }\n        if (builder.baseUrl === undefined || builder.baseUrl === \"\") {\n            builder.withBaseUrl(DEFAULT_BASE_URL);\n        }\n        if (builder.localAppName === undefined || builder.localAppName === \"\") {\n            builder.withLocalAppName(Stitch.localAppName);\n        }\n        if (builder.localAppVersion === undefined ||\n            builder.localAppVersion === \"\") {\n            builder.withLocalAppVersion(Stitch.localAppVersion);\n        }\n        var client = new StitchAppClientImpl(clientAppId, builder.build());\n        appClients[clientAppId] = client;\n        return client;\n    };\n    Stitch.clearApps = function () {\n        appClients = {};\n    };\n    return Stitch;\n}());\nexport default Stitch;\n//# sourceMappingURL=Stitch.js.map"]},"metadata":{},"sourceType":"module"}