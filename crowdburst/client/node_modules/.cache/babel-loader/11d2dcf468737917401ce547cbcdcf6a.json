{"ast":null,"code":"import StitchError from \"../../StitchError\";\nimport StitchRequestError from \"../../StitchRequestError\";\nimport { StitchRequestErrorCode } from \"../../StitchRequestErrorCode\";\nimport StitchServiceError from \"../../StitchServiceError\";\nimport { StitchServiceErrorCode, stitchServiceErrorCodeFromApi } from \"../../StitchServiceErrorCode\";\nimport ContentTypes from \"../net/ContentTypes\";\nimport Headers from \"../net/Headers\";\nvar Fields;\n\n(function (Fields) {\n  Fields[\"ERROR\"] = \"error\";\n  Fields[\"ERROR_CODE\"] = \"error_code\";\n})(Fields || (Fields = {}));\n\nexport function wrapDecodingError(err) {\n  if (err instanceof StitchError) {\n    return err;\n  }\n\n  return new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n}\nexport function handleRequestError(response) {\n  if (response.body === undefined) {\n    throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n  }\n\n  var body;\n\n  try {\n    body = response.body;\n  } catch (e) {\n    throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n  }\n\n  var errorMsg = handleRichError(response, body);\n  throw new StitchServiceError(errorMsg, StitchServiceErrorCode.Unknown);\n}\n\nfunction handleRichError(response, body) {\n  if (response.headers[Headers.CONTENT_TYPE] === undefined || response.headers[Headers.CONTENT_TYPE] !== undefined && response.headers[Headers.CONTENT_TYPE] !== ContentTypes.APPLICATION_JSON) {\n    return body;\n  }\n\n  var bsonObj = JSON.parse(body);\n\n  if (!(bsonObj instanceof Object)) {\n    return body;\n  }\n\n  var doc = bsonObj;\n\n  if (doc[Fields.ERROR] === undefined) {\n    return body;\n  }\n\n  var errorMsg = doc[Fields.ERROR];\n\n  if (doc[Fields.ERROR_CODE] === undefined) {\n    return errorMsg;\n  }\n\n  var errorCode = doc[Fields.ERROR_CODE];\n  throw new StitchServiceError(errorMsg, stitchServiceErrorCodeFromApi(errorCode));\n}","map":{"version":3,"sources":["../../../../src/internal/common/StitchErrorUtils.ts"],"names":[],"mappings":"AAgBA,OAAO,WAAP,MAAwB,mBAAxB;AACA,OAAO,kBAAP,MAA+B,0BAA/B;AACA,SAAS,sBAAT,QAAuC,8BAAvC;AACA,OAAO,kBAAP,MAA+B,0BAA/B;AACA,SACE,sBADF,EAEE,6BAFF,QAGO,8BAHP;AAIA,OAAO,YAAP,MAAyB,qBAAzB;AACA,OAAO,OAAP,MAAoB,gBAApB;AAGA,IAAK,MAAL;;AAAA,CAAA,UAAK,MAAL,EAAW;AACT,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,MAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAHD,EAAK,MAAM,KAAN,MAAM,GAAA,EAAA,CAAX;;AAaA,OAAM,SAAA,iBAAA,CAA4B,GAA5B,EAAoC;AACxC,MAAI,GAAG,YAAY,WAAnB,EAAgC;AAC9B,WAAO,GAAP;AACD;;AAED,SAAO,IAAI,kBAAJ,CAAuB,GAAvB,EAA4B,sBAAsB,CAAC,cAAnD,CAAP;AACD;AAUD,OAAM,SAAA,kBAAA,CAA6B,QAA7B,EAA+C;AACnD,MAAI,QAAQ,CAAC,IAAT,KAAkB,SAAtB,EAAiC;AAC/B,UAAM,IAAI,kBAAJ,CACJ,qCAAmC,QAAQ,CAAC,UADxC,EAEJ,sBAAsB,CAAC,OAFnB,CAAN;AAID;;AAED,MAAI,IAAJ;;AAEA,MAAI;AACF,IAAA,IAAI,GAAG,QAAQ,CAAC,IAAhB;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,UAAM,IAAI,kBAAJ,CACJ,qCAAmC,QAAQ,CAAC,UADxC,EAEJ,sBAAsB,CAAC,OAFnB,CAAN;AAID;;AAED,MAAM,QAAQ,GAAW,eAAe,CAAC,QAAD,EAAW,IAAX,CAAxC;AAGA,QAAM,IAAI,kBAAJ,CAAuB,QAAvB,EAAiC,sBAAsB,CAAC,OAAxD,CAAN;AACD;;AASD,SAAA,eAAA,CAAyB,QAAzB,EAA6C,IAA7C,EAAyD;AACvD,MACE,QAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,YAAzB,MAA2C,SAA3C,IACC,QAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,YAAzB,MAA2C,SAA3C,IACC,QAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,YAAzB,MAA2C,YAAY,CAAC,gBAH5D,EAIE;AACA,WAAO,IAAP;AACD;;AAED,MAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAhB;;AAEA,MAAI,EAAE,OAAO,YAAY,MAArB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAM,GAAG,GAAG,OAAZ;;AACA,MAAI,GAAG,CAAC,MAAM,CAAC,KAAR,CAAH,KAAsB,SAA1B,EAAqC;AACnC,WAAO,IAAP;AACD;;AACD,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,KAAR,CAApB;;AACA,MAAI,GAAG,CAAC,MAAM,CAAC,UAAR,CAAH,KAA2B,SAA/B,EAA0C;AACxC,WAAO,QAAP;AACD;;AAED,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,UAAR,CAArB;AAEA,QAAM,IAAI,kBAAJ,CACJ,QADI,EAEJ,6BAA6B,CAAC,SAAD,CAFzB,CAAN;AAID","sourceRoot":"","sourcesContent":["import StitchError from \"../../StitchError\";\nimport StitchRequestError from \"../../StitchRequestError\";\nimport { StitchRequestErrorCode } from \"../../StitchRequestErrorCode\";\nimport StitchServiceError from \"../../StitchServiceError\";\nimport { StitchServiceErrorCode, stitchServiceErrorCodeFromApi } from \"../../StitchServiceErrorCode\";\nimport ContentTypes from \"../net/ContentTypes\";\nimport Headers from \"../net/Headers\";\nvar Fields;\n(function (Fields) {\n    Fields[\"ERROR\"] = \"error\";\n    Fields[\"ERROR_CODE\"] = \"error_code\";\n})(Fields || (Fields = {}));\nexport function wrapDecodingError(err) {\n    if (err instanceof StitchError) {\n        return err;\n    }\n    return new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n}\nexport function handleRequestError(response) {\n    if (response.body === undefined) {\n        throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n    }\n    var body;\n    try {\n        body = response.body;\n    }\n    catch (e) {\n        throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n    }\n    var errorMsg = handleRichError(response, body);\n    throw new StitchServiceError(errorMsg, StitchServiceErrorCode.Unknown);\n}\nfunction handleRichError(response, body) {\n    if (response.headers[Headers.CONTENT_TYPE] === undefined ||\n        (response.headers[Headers.CONTENT_TYPE] !== undefined &&\n            response.headers[Headers.CONTENT_TYPE] !== ContentTypes.APPLICATION_JSON)) {\n        return body;\n    }\n    var bsonObj = JSON.parse(body);\n    if (!(bsonObj instanceof Object)) {\n        return body;\n    }\n    var doc = bsonObj;\n    if (doc[Fields.ERROR] === undefined) {\n        return body;\n    }\n    var errorMsg = doc[Fields.ERROR];\n    if (doc[Fields.ERROR_CODE] === undefined) {\n        return errorMsg;\n    }\n    var errorCode = doc[Fields.ERROR_CODE];\n    throw new StitchServiceError(errorMsg, stitchServiceErrorCodeFromApi(errorCode));\n}\n//# sourceMappingURL=StitchErrorUtils.js.map"]},"metadata":{},"sourceType":"module"}