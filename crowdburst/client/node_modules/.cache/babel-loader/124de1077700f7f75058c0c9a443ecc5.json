{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar CommandOperationV2 = require('./command_v2');\n\nvar decorateWithCollation = require('../utils').decorateWithCollation;\n\nvar decorateWithReadConcern = require('../utils').decorateWithReadConcern;\n/**\n * Return a list of distinct values for the given key across a collection.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {string} key Field of the document to find distinct values for.\n * @property {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @property {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n */\n\n\nvar DistinctOperation = /*#__PURE__*/function (_CommandOperationV) {\n  _inherits(DistinctOperation, _CommandOperationV);\n\n  var _super = _createSuper(DistinctOperation);\n\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {string} key Field of the document to find distinct values for.\n   * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n   * @param {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  function DistinctOperation(collection, key, query, options) {\n    var _this;\n\n    _classCallCheck(this, DistinctOperation);\n\n    _this = _super.call(this, collection, options);\n    _this.collection = collection;\n    _this.key = key;\n    _this.query = query;\n    return _this;\n  }\n  /**\n   * Execute the operation.\n   *\n   * @param {Collection~resultCallback} [callback] The command result callback\n   */\n\n\n  _createClass(DistinctOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      var _this2 = this;\n\n      var coll = this.collection;\n      var key = this.key;\n      var query = this.query;\n      var options = this.options; // Distinct command\n\n      var cmd = {\n        distinct: coll.collectionName,\n        key: key,\n        query: query\n      }; // Add maxTimeMS if defined\n\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      } // Do we have a readConcern specified\n\n\n      decorateWithReadConcern(cmd, coll, options); // Have we specified collation\n\n      try {\n        decorateWithCollation(cmd, coll, options);\n      } catch (err) {\n        return callback(err, null);\n      }\n\n      _get(_getPrototypeOf(DistinctOperation.prototype), \"executeCommand\", this).call(this, server, cmd, function (err, result) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        callback(null, _this2.options.full ? result : result.values);\n      });\n    }\n  }]);\n\n  return DistinctOperation;\n}(CommandOperationV2);\n\ndefineAspects(DistinctOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = DistinctOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/distinct.js"],"names":["Aspect","require","defineAspects","CommandOperationV2","decorateWithCollation","decorateWithReadConcern","DistinctOperation","collection","key","query","options","server","callback","coll","cmd","distinct","collectionName","maxTimeMS","err","result","full","values","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,IAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,IAAMC,kBAAkB,GAAGF,OAAO,CAAC,cAAD,CAAlC;;AACA,IAAMG,qBAAqB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,qBAAlD;;AACA,IAAMC,uBAAuB,GAAGJ,OAAO,CAAC,UAAD,CAAP,CAAoBI,uBAApD;AAEA;;;;;;;;;;;IASMC,iB;;;;;AACJ;;;;;;;;AAQA,6BAAYC,UAAZ,EAAwBC,GAAxB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;AAAA;;AAAA;;AAC3C,8BAAMH,UAAN,EAAkBG,OAAlB;AAEA,UAAKH,UAAL,GAAkBA,UAAlB;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAKC,KAAL,GAAaA,KAAb;AAL2C;AAM5C;AAED;;;;;;;;;4BAKQE,M,EAAQC,Q,EAAU;AAAA;;AACxB,UAAMC,IAAI,GAAG,KAAKN,UAAlB;AACA,UAAMC,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB,CAJwB,CAMxB;;AACA,UAAMI,GAAG,GAAG;AACVC,QAAAA,QAAQ,EAAEF,IAAI,CAACG,cADL;AAEVR,QAAAA,GAAG,EAAEA,GAFK;AAGVC,QAAAA,KAAK,EAAEA;AAHG,OAAZ,CAPwB,CAaxB;;AACA,UAAI,OAAOC,OAAO,CAACO,SAAf,KAA6B,QAAjC,EAA2C;AACzCH,QAAAA,GAAG,CAACG,SAAJ,GAAgBP,OAAO,CAACO,SAAxB;AACD,OAhBuB,CAkBxB;;;AACAZ,MAAAA,uBAAuB,CAACS,GAAD,EAAMD,IAAN,EAAYH,OAAZ,CAAvB,CAnBwB,CAqBxB;;AACA,UAAI;AACFN,QAAAA,qBAAqB,CAACU,GAAD,EAAMD,IAAN,EAAYH,OAAZ,CAArB;AACD,OAFD,CAEE,OAAOQ,GAAP,EAAY;AACZ,eAAON,QAAQ,CAACM,GAAD,EAAM,IAAN,CAAf;AACD;;AAED,4FAAqBP,MAArB,EAA6BG,GAA7B,EAAkC,UAACI,GAAD,EAAMC,MAAN,EAAiB;AACjD,YAAID,GAAJ,EAAS;AACPN,UAAAA,QAAQ,CAACM,GAAD,CAAR;AACA;AACD;;AAEDN,QAAAA,QAAQ,CAAC,IAAD,EAAO,MAAI,CAACF,OAAL,CAAaU,IAAb,GAAoBD,MAApB,GAA6BA,MAAM,CAACE,MAA3C,CAAR;AACD,OAPD;AAQD;;;;EA1D6BlB,kB;;AA6DhCD,aAAa,CAACI,iBAAD,EAAoB,CAC/BN,MAAM,CAACsB,cADwB,EAE/BtB,MAAM,CAACuB,SAFwB,EAG/BvB,MAAM,CAACwB,sBAHwB,CAApB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBpB,iBAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {string} key Field of the document to find distinct values for.\n * @property {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @property {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n */\nclass DistinctOperation extends CommandOperationV2 {\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {string} key Field of the document to find distinct values for.\n   * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n   * @param {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection, key, query, options) {\n    super(collection, options);\n\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  /**\n   * Execute the operation.\n   *\n   * @param {Collection~resultCallback} [callback] The command result callback\n   */\n  execute(server, callback) {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    super.executeCommand(server, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, this.options.full ? result : result.values);\n    });\n  }\n}\n\ndefineAspects(DistinctOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = DistinctOperation;\n"]},"metadata":{},"sourceType":"script"}