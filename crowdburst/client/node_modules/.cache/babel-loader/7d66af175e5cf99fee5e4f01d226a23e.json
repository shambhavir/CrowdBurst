{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar indexInformation = require('./common_functions').indexInformation;\n\nvar IndexesOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(IndexesOperation, _OperationBase);\n\n  var _super = _createSuper(IndexesOperation);\n\n  function IndexesOperation(collection, options) {\n    var _this;\n\n    _classCallCheck(this, IndexesOperation);\n\n    _this = _super.call(this, options);\n    _this.collection = collection;\n    return _this;\n  }\n\n  _createClass(IndexesOperation, [{\n    key: \"execute\",\n    value: function execute(callback) {\n      var coll = this.collection;\n      var options = this.options;\n      options = Object.assign({}, {\n        full: true\n      }, options);\n      indexInformation(coll.s.db, coll.collectionName, options, callback);\n    }\n  }]);\n\n  return IndexesOperation;\n}(OperationBase);\n\nmodule.exports = IndexesOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/indexes.js"],"names":["OperationBase","require","indexInformation","IndexesOperation","collection","options","callback","coll","Object","assign","full","s","db","collectionName","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,aAA7C;;AACA,IAAME,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BC,gBAAvD;;IAEMC,gB;;;;;AACJ,4BAAYC,UAAZ,EAAwBC,OAAxB,EAAiC;AAAA;;AAAA;;AAC/B,8BAAMA,OAAN;AAEA,UAAKD,UAAL,GAAkBA,UAAlB;AAH+B;AAIhC;;;;4BAEOE,Q,EAAU;AAChB,UAAMC,IAAI,GAAG,KAAKH,UAAlB;AACA,UAAIC,OAAO,GAAG,KAAKA,OAAnB;AAEAA,MAAAA,OAAO,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlB,EAAkCL,OAAlC,CAAV;AACAH,MAAAA,gBAAgB,CAACK,IAAI,CAACI,CAAL,CAAOC,EAAR,EAAYL,IAAI,CAACM,cAAjB,EAAiCR,OAAjC,EAA0CC,QAA1C,CAAhB;AACD;;;;EAb4BN,a;;AAgB/Bc,MAAM,CAACC,OAAP,GAAiBZ,gBAAjB","sourcesContent":["'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst indexInformation = require('./common_functions').indexInformation;\n\nclass IndexesOperation extends OperationBase {\n  constructor(collection, options) {\n    super(options);\n\n    this.collection = collection;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    let options = this.options;\n\n    options = Object.assign({}, { full: true }, options);\n    indexInformation(coll.s.db, coll.collectionName, options, callback);\n  }\n}\n\nmodule.exports = IndexesOperation;\n"]},"metadata":{},"sourceType":"script"}