{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar MongoError = require('../core/error').MongoError;\n/**\n * An error indicating a connection pool is closed\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\n\n\nvar PoolClosedError = /*#__PURE__*/function (_MongoError) {\n  _inherits(PoolClosedError, _MongoError);\n\n  var _super = _createSuper(PoolClosedError);\n\n  function PoolClosedError(pool) {\n    var _this;\n\n    _classCallCheck(this, PoolClosedError);\n\n    _this = _super.call(this, 'Attempted to check out a connection from closed connection pool');\n    _this.name = 'MongoPoolClosedError';\n    _this.address = pool.address;\n    return _this;\n  }\n\n  return PoolClosedError;\n}(MongoError);\n/**\n * An error thrown when a request to check out a connection times out\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\n\n\nvar WaitQueueTimeoutError = /*#__PURE__*/function (_MongoError2) {\n  _inherits(WaitQueueTimeoutError, _MongoError2);\n\n  var _super2 = _createSuper(WaitQueueTimeoutError);\n\n  function WaitQueueTimeoutError(pool) {\n    var _this2;\n\n    _classCallCheck(this, WaitQueueTimeoutError);\n\n    _this2 = _super2.call(this, 'Timed out while checking out a connection from connection pool');\n    _this2.name = 'MongoWaitQueueTimeoutError';\n    _this2.address = pool.address;\n    return _this2;\n  }\n\n  return WaitQueueTimeoutError;\n}(MongoError);\n\nmodule.exports = {\n  PoolClosedError: PoolClosedError,\n  WaitQueueTimeoutError: WaitQueueTimeoutError\n};","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/cmap/errors.js"],"names":["MongoError","require","PoolClosedError","pool","name","address","WaitQueueTimeoutError","module","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,UAA5C;AAEA;;;;;;;;IAMME,e;;;;;AACJ,2BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAM,iEAAN;AACA,UAAKC,IAAL,GAAY,sBAAZ;AACA,UAAKC,OAAL,GAAeF,IAAI,CAACE,OAApB;AAHgB;AAIjB;;;EAL2BL,U;AAQ9B;;;;;;;;IAMMM,qB;;;;;AACJ,iCAAYH,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,gCAAM,gEAAN;AACA,WAAKC,IAAL,GAAY,4BAAZ;AACA,WAAKC,OAAL,GAAeF,IAAI,CAACE,OAApB;AAHgB;AAIjB;;;EALiCL,U;;AAQpCO,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,eAAe,EAAfA,eADe;AAEfI,EAAAA,qBAAqB,EAArBA;AAFe,CAAjB","sourcesContent":["'use strict';\nconst MongoError = require('../core/error').MongoError;\n\n/**\n * An error indicating a connection pool is closed\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\nclass PoolClosedError extends MongoError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.name = 'MongoPoolClosedError';\n    this.address = pool.address;\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\nclass WaitQueueTimeoutError extends MongoError {\n  constructor(pool) {\n    super('Timed out while checking out a connection from connection pool');\n    this.name = 'MongoWaitQueueTimeoutError';\n    this.address = pool.address;\n  }\n}\n\nmodule.exports = {\n  PoolClosedError,\n  WaitQueueTimeoutError\n};\n"]},"metadata":{},"sourceType":"script"}