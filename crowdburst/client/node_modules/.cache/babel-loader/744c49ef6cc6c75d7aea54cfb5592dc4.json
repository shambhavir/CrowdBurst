{"ast":null,"code":"import _slicedToArray from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nquery MyQuery($id: String!) {\\n  grocery_by_pk(id: $id) {\\n    address\\n    name\\n    id\\n    finrevs {\\n      body\\n      grid\\n    }\\n  }\\n}\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from\"react\";import{useLazyQuery,gql,useSubscription}from\"@apollo/client\";//import Search from \"./Search\";\nimport Grocery from\"./Components/Grocery\";import Search2 from\"./Components/Search2\";import Form2 from'./Components/Form2';var SEARCH=gql(_templateObject());// const SEARCH = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// `; \n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\nvar GrocerySearch=function GrocerySearch(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputVal=_useState2[0],setInputVal=_useState2[1];var _useLazyQuery=useLazyQuery(SEARCH),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),search=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],loading=_useLazyQuery2$.loading,error=_useLazyQuery2$.error,data=_useLazyQuery2$.data;if(loading)return/*#__PURE__*/React.createElement(\"p\",null,\"Loading ...\");if(error)return/*#__PURE__*/React.createElement(\"p\",null,\"Error :(\");return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"addReview\",null),/*#__PURE__*/React.createElement(Search2,{inputVal:inputVal,onChange:function onChange(e){return setInputVal(e.target.value);},onSubmit:function onSubmit(){return search({variables:{match:\"%\".concat(inputVal,\"%\")}});}}),/*#__PURE__*/React.createElement(Grocery,{newGrocery:data?data.grocery:null}));};export default GrocerySearch;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch2.js"],"names":["React","useState","useLazyQuery","gql","useSubscription","Grocery","Search2","Form2","SEARCH","GrocerySearch","inputVal","setInputVal","search","loading","error","data","e","target","value","variables","match","grocery"],"mappings":"unBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,CAAuBC,GAAvB,CAA4BC,eAA5B,KAAmD,gBAAnD,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CAIA,GAAMC,CAAAA,MAAM,CAAGL,GAAH,mBAAZ,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,eAEMR,QAAQ,CAAC,EAAD,CAFd,wCAEnBS,QAFmB,eAETC,WAFS,iCAGiBT,YAAY,CAACM,MAAD,CAH7B,gDAGnBI,MAHmB,qDAGTC,OAHS,iBAGTA,OAHS,CAGAC,KAHA,iBAGAA,KAHA,CAGOC,IAHP,iBAGOA,IAHP,CAI1B,GAAIF,OAAJ,CAAa,mBAAO,2CAAP,CACb,GAAIC,KAAJ,CAAW,mBAAO,wCAAP,CAET,mBACE,4CAEE,qCAFF,cAGE,oBAAC,OAAD,EACE,QAAQ,CAAEJ,QADZ,CAEE,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAFZ,CAGE,QAAQ,CAAE,0BAAMN,CAAAA,MAAM,CAAC,CAAEO,SAAS,CAAE,CAAEC,KAAK,YAAMV,QAAN,KAAP,CAAb,CAAD,CAAZ,EAHZ,EAHF,cAQE,oBAAC,OAAD,EAAS,UAAU,CAAEK,IAAI,CAAGA,IAAI,CAACM,OAAR,CAAkB,IAA3C,EARF,CADF,CAYD,CAnBH,CAqBA,cAAeZ,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useLazyQuery, gql, useSubscription } from \"@apollo/client\";\n//import Search from \"./Search\";\nimport Grocery from \"./Components/Grocery\"; \nimport Search2 from \"./Components/Search2\";\nimport Form2 from './Components/Form2';\n\n\n\nconst SEARCH = gql`\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n\n`;\n\n// const SEARCH = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// `; \n\n//   query Search($match: String) {\n//     grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n//       name\n//       alias\n//       id\n//     }\n//   }\n\nconst GrocerySearch = () => {\n  \n  const [inputVal, setInputVal] = useState(\"\");\n  const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n  if (loading) return <p>Loading ...</p>;\n  if (error) return <p>Error :(</p>;\n\n    return (\n      <div>\n        {/* <Form2></Form2> */}\n        <addReview></addReview>\n        <Search2\n          inputVal={inputVal}\n          onChange={(e) => setInputVal(e.target.value)}\n          onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n        />\n        <Grocery newGrocery={data ? data.grocery : null} />\n      </div>\n    );\n  };\n\nexport default GrocerySearch;\n\n"]},"metadata":{},"sourceType":"module"}