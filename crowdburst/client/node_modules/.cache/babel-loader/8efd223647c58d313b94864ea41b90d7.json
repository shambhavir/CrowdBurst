{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/client/src/Stitch2.js\";\nimport React, { Component } from 'react'; // import {View, Text, SafeAreaView} from 'react-native';\n\nimport { Stitch, RemoteMongoClient, AnonymousCredential } from \"mongodb-stitch-browser-sdk\";\n\nclass Stitch2 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      value: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.displayTodos = this.displayTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    // Initialize the App Client\n    this.client = Stitch.initializeDefaultAppClient(\"crowdburst-dlnyx\"); // Get a MongoDB Service Client, used for logging in and communicating with Stitch\n\n    const mongodb = this.client.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\"); // Get a reference to the todo database\n\n    this.db = mongodb.db(\"reviews\");\n    this.displayTodosOnLoad();\n  }\n\n  displayTodos() {\n    this.db.collection(\"items\").find({}, {\n      limit: 1000\n    }).asArray().then(reviews => {\n      this.setState({\n        reviews\n      });\n    });\n  }\n\n  displayTodosOnLoad() {\n    this.client.auth.loginWithCredential(new AnonymousCredential()).then(this.displayTodos).catch(console.error);\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n    const {\n      value\n    } = this.state;\n    this.db.collection(\"items\").insertOne({\n      owner_id: this.client.auth.user.id,\n      list2: value\n    }).then(this.displayTodos);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"This is a todo app\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Add a Todo Item:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, this.state.reviews.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 22\n        }\n      }, item.list2);\n    })));\n  }\n\n}\n\nexport default Stitch2;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/Stitch2.js"],"names":["React","Component","Stitch","RemoteMongoClient","AnonymousCredential","Stitch2","constructor","state","todos","value","handleChange","bind","displayTodos","addTodo","componentDidMount","client","initializeDefaultAppClient","mongodb","getServiceClient","factory","db","displayTodosOnLoad","collection","find","limit","asArray","then","reviews","setState","auth","loginWithCredential","catch","console","error","event","preventDefault","insertOne","owner_id","user","id","list2","target","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import {View, Text, SafeAreaView} from 'react-native';\nimport { \n    Stitch,\n    RemoteMongoClient,\n    AnonymousCredential\n  } from \"mongodb-stitch-browser-sdk\";\n\n\n\nclass Stitch2 extends Component {\n    constructor() {\n      super();\n      this.state = {\n        todos: [],\n        value: \"\"\n      };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.displayTodos = this.displayTodos.bind(this);\n      this.addTodo = this.addTodo.bind(this);\n    }\n  \n    componentDidMount() {\n      // Initialize the App Client\n      this.client = Stitch.initializeDefaultAppClient(\"crowdburst-dlnyx\");\n      // Get a MongoDB Service Client, used for logging in and communicating with Stitch\n      const mongodb = this.client.getServiceClient(\n        RemoteMongoClient.factory,\n        \"mongodb-atlas\"\n      );\n      // Get a reference to the todo database\n      this.db = mongodb.db(\"reviews\");\n  \n      this.displayTodosOnLoad();\n    }\n  \n    displayTodos() {\n      this.db\n        .collection(\"items\")\n        .find({}, { limit: 1000 })\n        .asArray()\n        .then(reviews => {\n          this.setState({\n            reviews\n          });\n        });\n    }\n  \n    displayTodosOnLoad() {\n      this.client.auth\n        .loginWithCredential(new AnonymousCredential())\n        .then(this.displayTodos)\n        .catch(console.error);\n    }\n  \n    addTodo(event) {\n      event.preventDefault();\n      const { value } = this.state;\n  \n      this.db\n        .collection(\"items\")\n        .insertOne({\n        owner_id: this.client.auth.user.id,\n          list2: value\n        })\n        .then(this.displayTodos);\n    }\n  \n    handleChange(event) {\n      this.setState({ value: event.target.value });\n    }\n  \n    render() {\n      return (\n        <div className=\"App\">\n          <h3>This is a todo app</h3>\n          <hr />\n          <p>Add a Todo Item:</p>\n          <form onSubmit={this.addTodo}>\n            <label>\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          <ul>\n            {this.state.reviews.map(item => {\n              return <li>{item.list2}</li>;\n            })}\n          </ul>\n        </div>\n      );\n    }\n\n}\n\n\n  \n  export default Stitch2;"]},"metadata":{},"sourceType":"module"}