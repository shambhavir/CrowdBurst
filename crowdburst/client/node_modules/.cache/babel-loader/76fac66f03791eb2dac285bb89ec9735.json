{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/client/src/Stitch2.js\";\nimport React, { Component } from \"react\";\nimport { Stitch, AnonymousCredential, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport { Badge } from './shared/Badge'; // const itemss = this.mongodb.db('todo').collection('item')\n\nclass Stitch2 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      value: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.displayTodos = this.displayTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    // Initialize the App Client\n    this.client = Stitch.initializeDefaultAppClient(\"crowdburst-ffpqc\"); // Get a MongoDB Service Client, used for logging in and communicating with Stitch\n\n    const mongodb = this.client.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\"); // Get a reference to the todo database\n\n    this.db = mongodb.db(\"todo\");\n    this.displayTodosOnLoad();\n  }\n\n  displayTodos() {\n    this.db.collection(\"item\").find({}, {\n      limit: 1000\n    }).asArray().then(todos => {\n      this.setState({\n        todos\n      });\n    });\n  }\n\n  displayTodosOnLoad() {\n    this.client.auth.loginWithCredential(new AnonymousCredential()).then(this.displayTodos).catch(console.error);\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n    const {\n      value\n    } = this.state;\n    this.db.collection(\"item\").insertOne({\n      owner_id: this.client.auth.user.id,\n      item: value\n    }) // itemss.insertOne({\n    //   owner_id: this.client.auth.user.id,\n    //   item: value\n    // })\n    .then(this.displayTodos);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"CROWDBURST BETA\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Add a Business/CrowdNote:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.state.todos.map(todo => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }\n      }, todo.item);\n    })));\n  }\n\n}\n\nexport default Stitch2;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/Stitch2.js"],"names":["React","Component","Stitch","AnonymousCredential","RemoteMongoClient","Badge","Stitch2","constructor","state","todos","value","handleChange","bind","displayTodos","addTodo","componentDidMount","client","initializeDefaultAppClient","mongodb","getServiceClient","factory","db","displayTodosOnLoad","collection","find","limit","asArray","then","setState","auth","loginWithCredential","catch","console","error","event","preventDefault","insertOne","owner_id","user","id","item","target","render","map","todo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport {Badge} from './shared/Badge';\n// const itemss = this.mongodb.db('todo').collection('item')\nclass Stitch2 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      value: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.displayTodos = this.displayTodos.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    // Initialize the App Client\n    this.client = Stitch.initializeDefaultAppClient(\"crowdburst-ffpqc\");\n    // Get a MongoDB Service Client, used for logging in and communicating with Stitch\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    // Get a reference to the todo database\n    this.db = mongodb.db(\"todo\");\n   \n    this.displayTodosOnLoad();\n  }\n\n  displayTodos() {\n    this.db\n      .collection(\"item\")\n      .find({}, { limit: 1000 })\n      .asArray()\n      .then(todos => {\n        this.setState({\n          todos\n        });\n      });\n  }\n\n  displayTodosOnLoad() {\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(this.displayTodos)\n      .catch(console.error);\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n    const { value } = this.state;\n\n    this.db\n      .collection(\"item\")\n      .insertOne({\n        owner_id: this.client.auth.user.id,\n        item: value\n      })\n\n      // itemss.insertOne({\n      //   owner_id: this.client.auth.user.id,\n      //   item: value\n      // })\n      \n      .then(this.displayTodos);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3><Badge>CROWDBURST BETA</Badge></h3>\n        <hr />\n        <p>Add a Business/CrowdNote:</p>\n        <form onSubmit={this.addTodo}>\n          <label>\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <ul>\n          {this.state.todos.map(todo => {\n            return <li>{todo.item}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Stitch2;"]},"metadata":{},"sourceType":"module"}