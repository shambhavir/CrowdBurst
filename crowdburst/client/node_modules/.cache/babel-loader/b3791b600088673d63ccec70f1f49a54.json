{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js\";\nimport React, { useState } from 'react';\nimport { useMutation, gql, useSubscription, useLazyQuery } from '@apollo/client';\nimport { useQuery } from '@apollo/client'; // import {useSubscription} from '@apollo/client'; \n\nimport { List, ListItem } from './shared/List';\nimport Search2 from './Search2';\nimport Form2 from './Form2';\nconst IHATECODE = gql`\n\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n   `;\nconst data = new Array(); // const GRO = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n// `\n\naxios.post('http://localhost:3001/api/putData', {\n  id: idToBeAdded,\n  message: message\n});\naxios.post('http://localhost:3001/api/updateData', {\n  id: objIdToUpdate,\n  update: {\n    message: updateToApply\n  }\n});\n\nconst Groceries = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(IHATECODE, {\n    variables: {\n      id\n    }\n  }); // const {loading, error, data} = useSubscription(GRO, {variables: {id}}); \n  // const {loading, error, data} = useSubscription(GRO); \n\n  const [inputVal, setInputVal] = useState(\"\");\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  const {\n    name,\n    address,\n    finrevs\n  } = data.grocery_by_pk;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, name, \" \", address), /*#__PURE__*/React.createElement(\"addReview\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Search2, {\n    inputVal: inputVal,\n    onChange: e => setInputVal(e.target.value),\n    onSubmit: () => {},\n    buttonText: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, finrevs.map(finrevs => /*#__PURE__*/React.createElement(ListItem, {\n    key: finrevs.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, finrevs.body))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, data.length <= 0 ? 'NO DB ENTRIES YET' : data.map(dat => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      padding: '10px'\n    },\n    key: data.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, \" id: \"), \" \", dat.id, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 73\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \" data: \"), dat.message))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => this.setState({\n      message: e.target.value\n    }),\n    placeholder: \"add something in the database\",\n    style: {\n      width: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.putDataToDB(this.state.message),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      width: '200px'\n    },\n    onChange: e => this.setState({\n      idToDelete: e.target.value\n    }),\n    placeholder: \"put id of item to delete here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.deleteFromDB(this.state.idToDelete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"DELETE\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      width: '200px'\n    },\n    onChange: e => this.setState({\n      idToUpdate: e.target.value\n    }),\n    placeholder: \"id of item to update here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      width: '200px'\n    },\n    onChange: e => this.setState({\n      updateToApply: e.target.value\n    }),\n    placeholder: \"put new value of the item here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => this.updateDB(this.state.idToUpdate, this.state.updateToApply),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"UPDATE\"))));\n};\n\nexport default Groceries;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js"],"names":["React","useState","useMutation","gql","useSubscription","useLazyQuery","useQuery","List","ListItem","Search2","Form2","IHATECODE","data","Array","axios","post","id","idToBeAdded","message","objIdToUpdate","update","updateToApply","Groceries","match","params","loading","error","variables","inputVal","setInputVal","name","address","finrevs","grocery_by_pk","e","target","value","map","body","length","dat","padding","color","setState","width","putDataToDB","state","idToDelete","deleteFromDB","idToUpdate","updateDB"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,GAArB,EAA0BC,eAA1B,EAA2CC,YAA3C,QAA8D,gBAA9D;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CACA;;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAKA,MAAMC,SAAS,GAAGR,GACjB;;;;;;;;;;;;;IADD;AAgBG,MAAMS,IAAI,GAAI,IAAIC,KAAJ,EAAd,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,KAAK,CAACC,IAAN,CAAW,mCAAX,EAAgD;AAC9CC,EAAAA,EAAE,EAAEC,WAD0C;AAE9CC,EAAAA,OAAO,EAAEA;AAFqC,CAAhD;AAKCJ,KAAK,CAACC,IAAN,CAAW,sCAAX,EAAmD;AAClDC,EAAAA,EAAE,EAAEG,aAD8C;AAElDC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,OAAO,EAAEG;AAAX;AAF0C,CAAnD;;AAQD,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAER,MAAAA;AAAF;AADH;AADQ,CAAD,KAIV;AACJ,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBd,IAAAA;AAAjB,MAAyBN,QAAQ,CAACK,SAAD,EAAY;AAACgB,IAAAA,SAAS,EAAE;AAACX,MAAAA;AAAD;AAAZ,GAAZ,CAAvC,CADI,CAEJ;AACA;;AAIA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIwB,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGX,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BpB,IAAI,CAACqB,aAAxC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IADH,OACUC,OADV,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAIH,QADd;AAEE,IAAA,QAAQ,EAAKM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAGE,IAAA,QAAQ,EAAI,MAAM,CAAE,CAHtB;AAIE,IAAA,UAAU,EAAG,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACK,GAAR,CAAaL,OAAD,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAAChB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BgB,OAAO,CAACM,IAApC,CADD,CADH,CAbF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,IAAI,CAAC2B,MAAL,IAAe,CAAf,GACG,mBADH,GAEG3B,IAAI,CAACyB,GAAL,CAAUG,GAAD,iBACP;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAgC,IAAA,GAAG,EAAE7B,IAAI,CAACM,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,OACgDF,GAAG,CAACxB,EADpD,oBACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxD,eAEE;AAAM,IAAA,KAAK,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGGF,GAAG,CAACtB,OAHP,CADF,CAHN,CADE,eAYF;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAGP,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEzB,MAAAA,OAAO,EAAEgB,CAAC,CAACC,MAAF,CAASC;AAApB,KAAd,CAFnB;AAGE,IAAA,WAAW,EAAC,+BAHd;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiB,KAAKC,KAAL,CAAW5B,OAA5B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CAZE,eAuBF;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,QAAQ,EAAGV,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEI,MAAAA,UAAU,EAAEb,CAAC,CAACC,MAAF,CAASC;AAAvB,KAAd,CAHnB;AAIE,IAAA,WAAW,EAAC,+BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAM,KAAKY,YAAL,CAAkB,KAAKF,KAAL,CAAWC,UAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAvBE,eAkCF;AAAK,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,QAAQ,EAAGV,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEM,MAAAA,UAAU,EAAEf,CAAC,CAACC,MAAF,CAASC;AAAvB,KAAd,CAHnB;AAIE,IAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,QAAQ,EAAGV,CAAD,IAAO,KAAKS,QAAL,CAAc;AAAEtB,MAAAA,aAAa,EAAEa,CAAC,CAACC,MAAF,CAASC;AAA1B,KAAd,CAHnB;AAIE,IAAA,WAAW,EAAC,gCAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE;AACE,IAAA,OAAO,EAAE,MACP,KAAKc,QAAL,CAAc,KAAKJ,KAAL,CAAWG,UAAzB,EAAqC,KAAKH,KAAL,CAAWzB,aAAhD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CAlCE,CApBF,CADJ;AA+EC,CAjGL;;AAmGA,eAAeC,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useMutation, gql, useSubscription, useLazyQuery} from '@apollo/client';\nimport {useQuery} from '@apollo/client'; \n// import {useSubscription} from '@apollo/client'; \nimport {List, ListItem} from './shared/List';\nimport Search2 from './Search2'; \nimport Form2 from './Form2';\n\n\n\n\nconst IHATECODE = gql \n`\n\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n   `;\n\n   const data =  new Array()\n\n// const GRO = gql `\n// subscription MySubscription($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     alias\n//     display_phone\n//     id\n//     name\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n// `\n\naxios.post('http://localhost:3001/api/putData', {\n  id: idToBeAdded,\n  message: message,\n });\n\n axios.post('http://localhost:3001/api/updateData', {\n  id: objIdToUpdate,\n  update: { message: updateToApply },\n});\n\n\n\n\nconst Groceries = ({\n    match: {\n      params: { id },\n    },\n  }) => {\n    const {loading, error, data} = useQuery(IHATECODE, {variables: {id}}); \n    // const {loading, error, data} = useSubscription(GRO, {variables: {id}}); \n    // const {loading, error, data} = useSubscription(GRO); \n\n\n\n    const [inputVal, setInputVal] = useState(\"\"); \n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error :(</p>;\n\n\n    const { name, address, finrevs } = data.grocery_by_pk;\n\n    return (\n        <div>\n          <h3>\n            {name} {address}\n          </h3>\n          {/* <Form2></Form2> */}\n          <addReview></addReview>\n\n          <Search2\n            inputVal = {inputVal}\n            onChange = {(e) => setInputVal(e.target.value)}\n            onSubmit = {() => {}}\n            buttonText = \"Submit\"\n            />\n          <List>\n            {finrevs.map((finrevs) => (\n              <ListItem key={finrevs.id}>{finrevs.body}</ListItem>\n            ))}\n          </List>\n\n\n          <div>\n        <ul>\n          {data.length <= 0\n            ? 'NO DB ENTRIES YET'\n            : data.map((dat) => (\n                <li style={{ padding: '10px' }} key={data.message}>\n                  <span style={{ color: 'gray' }}> id: </span> {dat.id} <br />\n                  <span style={{ color: 'gray' }}> data: </span>\n                  {dat.message}\n                </li>\n              ))}\n        </ul>\n        <div style={{ padding: '10px' }}>\n          <input\n            type=\"text\"\n            onChange={(e) => this.setState({ message: e.target.value })}\n            placeholder=\"add something in the database\"\n            style={{ width: '200px' }}\n          />\n          <button onClick={() => this.putDataToDB(this.state.message)}>\n            ADD\n          </button>\n        </div>\n        <div style={{ padding: '10px' }}>\n          <input\n            type=\"text\"\n            style={{ width: '200px' }}\n            onChange={(e) => this.setState({ idToDelete: e.target.value })}\n            placeholder=\"put id of item to delete here\"\n          />\n          <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\n            DELETE\n          </button>\n        </div>\n        <div style={{ padding: '10px' }}>\n          <input\n            type=\"text\"\n            style={{ width: '200px' }}\n            onChange={(e) => this.setState({ idToUpdate: e.target.value })}\n            placeholder=\"id of item to update here\"\n          />\n          <input\n            type=\"text\"\n            style={{ width: '200px' }}\n            onChange={(e) => this.setState({ updateToApply: e.target.value })}\n            placeholder=\"put new value of the item here\"\n          />\n          <button\n            onClick={() =>\n              this.updateDB(this.state.idToUpdate, this.state.updateToApply)\n            }\n          >\n            UPDATE\n          </button>\n        </div>\n      </div>\n        </div>\n      );\n    };\n\nexport default Groceries;"]},"metadata":{},"sourceType":"module"}