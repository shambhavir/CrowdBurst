{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/client/src/App.js\";\nimport React, { Component } from 'react';\n\nconst MongoClient = require('mongodb').MongoClient; // const uri = 'mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true'; \n//  MongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {useUnifiedTopology: true})\n// // MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n// //   if (err) {\n// //         //error\n// //   } else {\n// //         var collection = client.db('test').collection('devices');\n// //         collection.update(); \n// //         //client.close() should be called after you are done performing actions such as collection.update, etc.\n// //   }\n// // });\n// class MyForm extends React.Component {\n//   // constructor() {\n//   //   super();\n//   //   this.handleSubmit = this.handleSubmit.bind(this);\n//   // }\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       review: reviewArray\n//     };\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     const\n//     { review } = this.state,\n//     reviews = this.refs.reviews.value;\n//     this.setState({\n//       review: [...review, {\n//         reviews,\n//       }]\n//     }, () => {\n//       this.refs.reviews.value = '';\n//     });\n//   }\n//         // const data = new FormData(event.target);\n//         // MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n//         //   var collection = client.db('test').collection('devices');\n//         //   collection.update(); \n//         // }); \n//         // const db = data.db('reviews'); \n//         // fetch('/api/form-submit-url', {\n//         //   method: 'POST',\n//         //   body: data,\n//         // });\n// }\n//   // render() {\n//   //   return (\n//   //     <form onSubmit={this.handleSubmit}>\n//   //       <label htmlFor=\"username\">Enter username</label>\n//   //       <input id=\"username\" name=\"username\" type=\"text\" />\n//   //       {/* <label htmlFor=\"email\">Enter your email</label>\n//   //       <input id=\"email\" name=\"email\" type=\"email\" /> */}\n//   //       <label htmlFor=\"birthdate\">Enter your birth date</label>\n//   //       <input id=\"birthdate\" name=\"birthdate\" type=\"text\" />\n//   //       <button>Send data!</button>\n//   //     </form>\n//   //   );\n//   // }\n//   render() {\n//     const { contacts } = this.state;\n//     console.log('message',this.state.contacts);\n//       <div>\n//         <h2>Add Someone</h2>\n//         <form onSubmit={this.handleSubmit}>\n//           <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n//           <input type=\"text\" ref=\"email\" placeholder=\"email\" />\n//           <input type=\"text\" ref=\"phone\" placeholder=\"phone\" />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <h2>Exsiting contacts:</h2>\n//         <ul>\n//           {contacts.map((contact) => \n//            <li>{`Name: ${contact.name} Email: ${contact.email} Phone: ${contact.phone}`}</li>\n//           )}\n//         </ul>\n//       </div>\n//   }; \n// export default MyForm; \n\n\nconst contactArray = [];\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: contactArray\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      contacts\n    } = this.state,\n          name = this.refs.name.value,\n          email = this.refs.email.value,\n          phone = this.refs.phone.value;\n    this.setState({\n      contacts: [...contacts, {\n        name,\n        email,\n        phone\n      }]\n    }, () => {\n      this.refs.name.value = '';\n      this.refs.email.value = '';\n      this.refs.phone.value = '';\n    });\n  }\n\n  render() {\n    const {\n      contacts\n    } = this.state;\n    console.log('message', this.state.contacts);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Add Someone\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"name\",\n      placeholder: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"email\",\n      placeholder: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"phone\",\n      placeholder: \"phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"Exsiting contacts:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, contacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 14\n      }\n    }, `Name: ${contact.name} Email: ${contact.email} Phone: ${contact.phone}`))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/App.js"],"names":["React","Component","MongoClient","require","contactArray","Form","constructor","state","contacts","handleSubmit","bind","e","preventDefault","name","refs","value","email","phone","setState","render","console","log","map","contact"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \n const MongoClient = require('mongodb').MongoClient;\n// const uri = 'mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true'; \n//  MongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {useUnifiedTopology: true})\n\n\n// // MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n\n// //   if (err) {\n\n// //         //error\n\n// //   } else {\n\n// //         var collection = client.db('test').collection('devices');\n// //         collection.update(); \n// //         //client.close() should be called after you are done performing actions such as collection.update, etc.\n\n// //   }\n// // });\n\n\n// class MyForm extends React.Component {\n//   // constructor() {\n//   //   super();\n//   //   this.handleSubmit = this.handleSubmit.bind(this);\n//   // }\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       review: reviewArray\n//     };\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n\n  \n  \n//   handleSubmit(e) {\n//     e.preventDefault();\n//     const\n//     { review } = this.state,\n//     reviews = this.refs.reviews.value;\n//     this.setState({\n//       review: [...review, {\n//         reviews,\n//       }]\n//     }, () => {\n//       this.refs.reviews.value = '';\n//     });\n//   }\n\n//         // const data = new FormData(event.target);\n\n\n//         // MongoClient.connect(uri, { useNewUrlParser: true }, function(err, client) {\n//         //   var collection = client.db('test').collection('devices');\n//         //   collection.update(); \n//         // }); \n      \n//         // const db = data.db('reviews'); \n//         // fetch('/api/form-submit-url', {\n//         //   method: 'POST',\n//         //   body: data,\n         \n//         // });\n// }\n      \n\n\n  \n\n//   // render() {\n//   //   return (\n//   //     <form onSubmit={this.handleSubmit}>\n//   //       <label htmlFor=\"username\">Enter username</label>\n//   //       <input id=\"username\" name=\"username\" type=\"text\" />\n\n//   //       {/* <label htmlFor=\"email\">Enter your email</label>\n//   //       <input id=\"email\" name=\"email\" type=\"email\" /> */}\n\n//   //       <label htmlFor=\"birthdate\">Enter your birth date</label>\n//   //       <input id=\"birthdate\" name=\"birthdate\" type=\"text\" />\n\n//   //       <button>Send data!</button>\n//   //     </form>\n//   //   );\n//   // }\n\n\n//   render() {\n//     const { contacts } = this.state;\n//     console.log('message',this.state.contacts);\n  \n//       <div>\n//         <h2>Add Someone</h2>\n//         <form onSubmit={this.handleSubmit}>\n//           <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n//           <input type=\"text\" ref=\"email\" placeholder=\"email\" />\n//           <input type=\"text\" ref=\"phone\" placeholder=\"phone\" />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         <h2>Exsiting contacts:</h2>\n//         <ul>\n//           {contacts.map((contact) => \n//            <li>{`Name: ${contact.name} Email: ${contact.email} Phone: ${contact.phone}`}</li>\n//           )}\n//         </ul>\n//       </div>\n//   }; \n// export default MyForm; \n\n\n\nconst contactArray = [\n  \n  ];\n  \n  class Form extends React.Component {\n  \n    constructor() {\n      super();\n      this.state = {\n        contacts: contactArray\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleSubmit(e) {\n      e.preventDefault();\n      const\n      { contacts } = this.state,\n      name = this.refs.name.value,\n      email = this.refs.email.value,\n      phone = this.refs.phone.value;\n      this.setState({\n        contacts: [...contacts, {\n          name,\n          email,\n          phone\n        }]\n      }, () => {\n        this.refs.name.value = '';\n        this.refs.email.value = '';\n        this.refs.phone.value = '';\n      });\n    }\n  \n    render() {\n      const { contacts } = this.state;\n      console.log('message',this.state.contacts);\n      return (   \n        <div>\n          <h2>Add Someone</h2>\n          <form onSubmit={this.handleSubmit}>\n            <input type=\"text\" ref=\"name\" placeholder=\"name\" />\n            <input type=\"text\" ref=\"email\" placeholder=\"email\" />\n            <input type=\"text\" ref=\"phone\" placeholder=\"phone\" />\n            <button type=\"submit\">Submit</button>\n          </form>\n          <h2>Exsiting contacts:</h2>\n          <ul>\n            {contacts.map((contact) => \n             <li>{`Name: ${contact.name} Email: ${contact.email} Phone: ${contact.phone}`}</li>\n            )}\n          </ul>\n        </div>\n      ) \n    }\n  }\n\n  export default Form; "]},"metadata":{},"sourceType":"module"}