{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js\";\nimport React, { useState } from 'react';\nimport { useSubscription, useMutation, gql, useLazyQuery } from '@apollo/client';\nimport { List, ListItem } from './shared/List';\nimport { Badge } from './shared/Badge'; //import InputForm from \"./shared/InputForm\";\n\nconst GROCERY = gql`\n\n    subscription Grocery($id: String!)\n    {\n        grocery_by_pk(id: $id)\n        {\n            address\n            alias\n            display_phone\n            id\n            name\n            finrevs {\n                body\n                grid\n                    }\n        }\n    }\n\n`;\nconst ADD_REVIEW = gql`\n  mutation($body: String!, $id: uuid!) {\n    AddFearlessReview(body: $body, id: $id) {\n      affected_rows\n    }\n  }\n`;\n\nconst Groceries = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(PLANET, {\n    variables: {\n      id\n    }\n  });\n  const [addReview] = useMutation(ADD_REVIEW);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  const {\n    name,\n    address,\n    finrev\n  } = data.grocery_by_pk;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, name, \" \", /*#__PURE__*/React.createElement(Badge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }, address)), /*#__PURE__*/React.createElement(InputForm, {\n    inputVal: inputVal,\n    onChange: e => setInputVal(e.target.value),\n    onSubmit: () => {\n      addReview({\n        variables: {\n          id,\n          body: inputVal\n        }\n      }).then(() => setInputVal(\"\")).catch(e => {\n        setInputVal(e.message);\n      });\n    },\n    buttonText: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, finrev.map(finrev => /*#__PURE__*/React.createElement(ListItem, {\n    key: finrev.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, finrev.body))));\n};\n\nexport default Groceries;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js"],"names":["React","useState","useSubscription","useMutation","gql","useLazyQuery","List","ListItem","Badge","GROCERY","ADD_REVIEW","Groceries","match","params","id","inputVal","setInputVal","loading","error","data","PLANET","variables","addReview","name","address","finrev","grocery_by_pk","e","target","value","body","then","catch","message","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,GAAtC,EAA2CC,YAA3C,QAA8D,gBAA9D;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,eAA7B;AACA,SAAQC,KAAR,QAAoB,gBAApB,C,CACA;;AAGA,MAAMC,OAAO,GAAGL,GACf;;;;;;;;;;;;;;;;;;CADD;AAqBA,MAAMM,UAAU,GAAGN,GAAI;;;;;;CAAvB;;AAQA,MAAMO,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADQ,CAAD,KAIV;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACF,QAAM;AAAEgB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,eAAe,CAACkB,MAAD,EAAS;AACvDC,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAD4C,GAAT,CAAhD;AAGA,QAAM,CAACQ,SAAD,IAAcnB,WAAW,CAACO,UAAD,CAA/B;AAEE,MAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACf,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGT,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BN,IAAI,CAACO,aAAvC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IADH,oBACS,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,OAAR,CADT,CADF,eAIE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,IAAA,QAAQ,EAAE,MAAM;AACdP,MAAAA,SAAS,CAAC;AAAED,QAAAA,SAAS,EAAE;AAAEP,UAAAA,EAAF;AAAMgB,UAAAA,IAAI,EAAEf;AAAZ;AAAb,OAAD,CAAT,CACGgB,IADH,CACQ,MAAMf,WAAW,CAAC,EAAD,CADzB,EAEGgB,KAFH,CAEUL,CAAD,IAAO;AACZX,QAAAA,WAAW,CAACW,CAAC,CAACM,OAAH,CAAX;AACD,OAJH;AAKD,KATH;AAUE,IAAA,UAAU,EAAC,QAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACS,GAAP,CAAYT,MAAD,iBACV,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAACX,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BW,MAAM,CAACK,IAAlC,CADD,CADH,CAhBF,CADJ;AAwBC,CAzCL;;AA2CA,eAAenB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useSubscription, useMutation, gql, useLazyQuery} from '@apollo/client';\nimport {List, ListItem} from './shared/List';\nimport {Badge} from './shared/Badge';\n//import InputForm from \"./shared/InputForm\";\n\n\nconst GROCERY = gql \n`\n\n    subscription Grocery($id: String!)\n    {\n        grocery_by_pk(id: $id)\n        {\n            address\n            alias\n            display_phone\n            id\n            name\n            finrevs {\n                body\n                grid\n                    }\n        }\n    }\n\n`;\n\nconst ADD_REVIEW = gql`\n  mutation($body: String!, $id: uuid!) {\n    AddFearlessReview(body: $body, id: $id) {\n      affected_rows\n    }\n  }\n`;\n\nconst Groceries = ({\n    match: {\n      params: { id },\n    },\n  }) => {\n    const [inputVal, setInputVal] = useState(\"\");\n  const { loading, error, data } = useSubscription(PLANET, {\n    variables: { id },\n  });\n  const [addReview] = useMutation(ADD_REVIEW);\n\n    if (loading) return <p>Loading ...</p>;\n  if (error) return <p>Error :(</p>;\n\n\n    const { name, address, finrev } = data.grocery_by_pk;\n\n    return (\n        <div>\n          <h3>\n            {name} <Badge>{address}</Badge>\n          </h3>\n          <InputForm\n            inputVal={inputVal}\n            onChange={(e) => setInputVal(e.target.value)}\n            onSubmit={() => {\n              addReview({ variables: { id, body: inputVal } })\n                .then(() => setInputVal(\"\"))\n                .catch((e) => {\n                  setInputVal(e.message);\n                });\n            }}\n            buttonText=\"Submit\"\n          />\n          <List>\n            {finrev.map((finrev) => (\n              <ListItem key={finrev.id}>{finrev.body}</ListItem>\n            ))}\n          </List>\n        </div>\n      );\n    };\n\nexport default Groceries;"]},"metadata":{},"sourceType":"module"}