{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport { ContentTypes, handleRequestError, Headers, Response } from \"mongodb-stitch-core-sdk\";\nimport { fetch } from 'whatwg-fetch';\nimport BrowserFetchTransport from \"./BrowserFetchTransport\";\nimport EventSourceEventStream from \"./EventSourceEventStream\";\n\nvar BrowserFetchStreamTransport = function (_super) {\n  __extends(BrowserFetchStreamTransport, _super);\n\n  function BrowserFetchStreamTransport() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BrowserFetchStreamTransport.prototype.stream = function (request, open, retryRequest) {\n    if (open === void 0) {\n      open = true;\n    }\n\n    var reqHeaders = __assign({}, request.headers);\n\n    reqHeaders[Headers.ACCEPT] = ContentTypes.TEXT_EVENT_STREAM;\n    reqHeaders[Headers.CONTENT_TYPE] = ContentTypes.TEXT_EVENT_STREAM;\n    return fetch(request.url + \"&stitch_validate=true\", {\n      body: request.body,\n      headers: reqHeaders,\n      method: request.method,\n      mode: 'cors'\n    }).then(function (response) {\n      var respHeaders = {};\n      response.headers.forEach(function (value, key) {\n        respHeaders[key] = value;\n      });\n\n      if (response.status < 200 || response.status >= 300) {\n        return response.text().then(function (body) {\n          return handleRequestError(new Response(respHeaders, response.status, body));\n        });\n      }\n\n      return new Promise(function (resolve, reject) {\n        return new EventSourceEventStream(new EventSource(request.url), function (stream) {\n          return resolve(stream);\n        }, function (error) {\n          return reject(error);\n        }, retryRequest ? function () {\n          return retryRequest().then(function (es) {\n            return es;\n          });\n        } : undefined);\n      });\n    });\n  };\n\n  return BrowserFetchStreamTransport;\n}(BrowserFetchTransport);\n\nexport default BrowserFetchStreamTransport;","map":{"version":3,"sources":["../../../../../src/core/internal/net/BrowserFetchStreamTransport.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,SAEE,YAFF,EAIE,kBAJF,EAKE,OALF,EAME,QANF,QAQO,yBARP;AASA,SAAQ,KAAR,QAA6B,cAA7B;AACA,OAAO,qBAAP,MAAkC,yBAAlC;AACA,OAAO,sBAAP,MAAmC,0BAAnC;;AAGA,IAAA,2BAAA,GAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,SAAA,CAAA,2BAAA,EAAA,MAAA,CAAA;;AAAzD,WAAA,2BAAA,GAAA;;AAoCC;;AAlCQ,EAAA,2BAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,OAAd,EAAqC,IAArC,EAAkD,YAAlD,EAA2F;AAAtD,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,IAAA;AAAW;;AAC9C,QAAM,UAAU,GAAA,QAAA,CAAA,EAAA,EAAQ,OAAO,CAAC,OAAhB,CAAhB;;AACA,IAAA,UAAU,CAAC,OAAO,CAAC,MAAT,CAAV,GAA6B,YAAY,CAAC,iBAA1C;AACA,IAAA,UAAU,CAAC,OAAO,CAAC,YAAT,CAAV,GAAmC,YAAY,CAAC,iBAAhD;AAIA,WAAO,KAAK,CAAC,OAAO,CAAC,GAAR,GAAc,uBAAf,EAAwC;AAClD,MAAA,IAAI,EAAE,OAAO,CAAC,IADoC;AAElD,MAAA,OAAO,EAAE,UAFyC;AAGlD,MAAA,MAAM,EAAE,OAAO,CAAC,MAHkC;AAIlD,MAAA,IAAI,EAAE;AAJ4C,KAAxC,CAAL,CAKJ,IALI,CAKC,UAAA,QAAA,EAAQ;AACd,UAAM,WAAW,GAA8B,EAA/C;AACA,MAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,UAAC,KAAD,EAAQ,GAAR,EAAW;AAClC,QAAA,WAAW,CAAC,GAAD,CAAX,GAAmB,KAAnB;AACD,OAFD;;AAGA,UAAI,QAAQ,CAAC,MAAT,GAAkB,GAAlB,IAAyB,QAAQ,CAAC,MAAT,IAAmB,GAAhD,EAAqD;AACnD,eAAO,QAAQ,CAAC,IAAT,GACN,IADM,CACD,UAAA,IAAA,EAAI;AAAI,iBAAA,kBAAkB,CAAC,IAAI,QAAJ,CAAa,WAAb,EAA0B,QAAQ,CAAC,MAAnC,EAAnB,IAAmB,CAAD,CAAlB;AAAoE,SAD3E,CAAP;AAED;;AAED,aAAO,IAAI,OAAJ,CAAyB,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC9C,eAAA,IAAI,sBAAJ,CACE,IAAI,WAAJ,CAAgB,OAAO,CAAC,GAAxB,CADF,EAEE,UAAA,MAAA,EAAM;AAAI,iBAAA,OAAO,CAAP,MAAO,CAAP;AAAe,SAF3B,EAGE,UAAA,KAAA,EAAK;AAAI,iBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,SAHxB,EAIE,YAAY,GACV,YAAA;AAAM,iBAAA,YAAY,GAAG,IAAf,CAAoB,UAAA,EAAA,EAAE;AAAI,mBAAA,EAAA;AAA1B,WAAA,CAAA;AAAuD,SADnD,GAER,SANN,CAAA;AAOG,OARE,CAAP;AAUD,KAzBM,CAAP;AA0BD,GAjCM;;AAkCT,SAAA,2BAAA;AAAC,CApCD,CAAyD,qBAAzD,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ContentTypes, handleRequestError, Headers, Response } from \"mongodb-stitch-core-sdk\";\nimport { fetch as fetch } from 'whatwg-fetch';\nimport BrowserFetchTransport from \"./BrowserFetchTransport\";\nimport EventSourceEventStream from \"./EventSourceEventStream\";\nvar BrowserFetchStreamTransport = (function (_super) {\n    __extends(BrowserFetchStreamTransport, _super);\n    function BrowserFetchStreamTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrowserFetchStreamTransport.prototype.stream = function (request, open, retryRequest) {\n        if (open === void 0) { open = true; }\n        var reqHeaders = __assign({}, request.headers);\n        reqHeaders[Headers.ACCEPT] = ContentTypes.TEXT_EVENT_STREAM;\n        reqHeaders[Headers.CONTENT_TYPE] = ContentTypes.TEXT_EVENT_STREAM;\n        return fetch(request.url + \"&stitch_validate=true\", {\n            body: request.body,\n            headers: reqHeaders,\n            method: request.method,\n            mode: 'cors'\n        }).then(function (response) {\n            var respHeaders = {};\n            response.headers.forEach(function (value, key) {\n                respHeaders[key] = value;\n            });\n            if (response.status < 200 || response.status >= 300) {\n                return response.text()\n                    .then(function (body) { return handleRequestError(new Response(respHeaders, response.status, body)); });\n            }\n            return new Promise(function (resolve, reject) {\n                return new EventSourceEventStream(new EventSource(request.url), function (stream) { return resolve(stream); }, function (error) { return reject(error); }, retryRequest ?\n                    function () { return retryRequest().then(function (es) { return es; }); }\n                    : undefined);\n            });\n        });\n    };\n    return BrowserFetchStreamTransport;\n}(BrowserFetchTransport));\nexport default BrowserFetchStreamTransport;\n//# sourceMappingURL=BrowserFetchStreamTransport.js.map"]},"metadata":{},"sourceType":"module"}