{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar retrieveBSON = require('../connection/utils').retrieveBSON;\n\nvar AuthProvider = require('./auth_provider').AuthProvider; // TODO: can we get the Binary type from this.bson instead?\n\n\nvar BSON = retrieveBSON();\nvar Binary = BSON.Binary;\n/**\n * Creates a new Plain authentication mechanism\n *\n * @extends AuthProvider\n */\n\nvar Plain = /*#__PURE__*/function (_AuthProvider) {\n  _inherits(Plain, _AuthProvider);\n\n  var _super = _createSuper(Plain);\n\n  function Plain() {\n    _classCallCheck(this, Plain);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Plain, [{\n    key: \"_authenticateSingleConnection\",\n\n    /**\n     * Implementation of authentication for a single connection\n     * @override\n     */\n    value: function _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n      var username = credentials.username;\n      var password = credentials.password;\n      var payload = new Binary(\"\\0\".concat(username, \"\\0\").concat(password));\n      var command = {\n        saslStart: 1,\n        mechanism: 'PLAIN',\n        payload: payload,\n        autoAuthorize: 1\n      };\n      sendAuthCommand(connection, '$external.$cmd', command, callback);\n    }\n  }]);\n\n  return Plain;\n}(AuthProvider);\n\nmodule.exports = Plain;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/core/auth/plain.js"],"names":["retrieveBSON","require","AuthProvider","BSON","Binary","Plain","sendAuthCommand","connection","credentials","callback","username","password","payload","command","saslStart","mechanism","autoAuthorize","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,YAApD;;AACA,IAAME,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,YAAhD,C,CAEA;;;AACA,IAAMC,IAAI,GAAGH,YAAY,EAAzB;AACA,IAAMI,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA;;;;;;IAKMC,K;;;;;;;;;;;;;;AACJ;;;;kDAI8BC,e,EAAiBC,U,EAAYC,W,EAAaC,Q,EAAU;AAChF,UAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;AACA,UAAMC,QAAQ,GAAGH,WAAW,CAACG,QAA7B;AACA,UAAMC,OAAO,GAAG,IAAIR,MAAJ,aAAkBM,QAAlB,eAAiCC,QAAjC,EAAhB;AACA,UAAME,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAE,CADG;AAEdC,QAAAA,SAAS,EAAE,OAFG;AAGdH,QAAAA,OAAO,EAAEA,OAHK;AAIdI,QAAAA,aAAa,EAAE;AAJD,OAAhB;AAOAV,MAAAA,eAAe,CAACC,UAAD,EAAa,gBAAb,EAA+BM,OAA/B,EAAwCJ,QAAxC,CAAf;AACD;;;;EAjBiBP,Y;;AAoBpBe,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["'use strict';\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n// TODO: can we get the Binary type from this.bson instead?\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\n/**\n * Creates a new Plain authentication mechanism\n *\n * @extends AuthProvider\n */\nclass Plain extends AuthProvider {\n  /**\n   * Implementation of authentication for a single connection\n   * @override\n   */\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = Plain;\n"]},"metadata":{},"sourceType":"script"}