{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { EJSON } from \"bson\";\nimport { wrapDecodingError } from \"../../internal/common/StitchErrorUtils\";\nimport Headers from \"../../internal/net/Headers\";\nimport Method from \"../../internal/net/Method\";\nimport { StitchAuthDocRequest } from \"../../internal/net/StitchAuthDocRequest\";\nimport { StitchAuthRequest } from \"../../internal/net/StitchAuthRequest\";\nimport { StitchDocRequest } from \"../../internal/net/StitchDocRequest\";\nimport StitchClientError from \"../../StitchClientError\";\nimport { StitchClientErrorCode } from \"../../StitchClientErrorCode\";\nimport StitchError from \"../../StitchError\";\nimport StitchRequestError from \"../../StitchRequestError\";\nimport { StitchRequestErrorCode } from \"../../StitchRequestErrorCode\";\nimport StitchServiceError from \"../../StitchServiceError\";\nimport { StitchServiceErrorCode } from \"../../StitchServiceErrorCode\";\nimport Stream from \"../../Stream\";\nimport CoreStitchUserImpl from \"../internal/CoreStitchUserImpl\";\nimport AnonymousAuthProvider from \"../providers/anonymous/AnonymousAuthProvider\";\nimport StitchAuthResponseCredential from \"../providers/internal/StitchAuthResponseCredential\";\nimport AccessTokenRefresher from \"./AccessTokenRefresher\";\nimport { AuthEventKind } from \"./AuthEvent\";\nimport AuthInfo from \"./AuthInfo\";\nimport JWT from \"./JWT\";\nimport ApiAuthInfo from \"./models/ApiAuthInfo\";\nimport ApiCoreUserProfile from \"./models/ApiCoreUserProfile\";\nimport { readActiveUserFromStorage, readCurrentUsersFromStorage, writeActiveUserAuthInfoToStorage, writeAllUsersAuthInfoToStorage } from \"./models/StoreAuthInfo\";\nvar OPTIONS = \"options\";\nvar DEVICE = \"device\";\n\nvar CoreStitchAuth = function () {\n  function CoreStitchAuth(requestClient, authRoutes, storage, useTokenRefresher) {\n    if (useTokenRefresher === void 0) {\n      useTokenRefresher = true;\n    }\n\n    this.requestClient = requestClient;\n    this.authRoutes = authRoutes;\n    this.storage = storage;\n    var allUsersAuthInfo;\n\n    try {\n      allUsersAuthInfo = readCurrentUsersFromStorage(storage);\n    } catch (e) {\n      throw new StitchClientError(StitchClientErrorCode.CouldNotLoadPersistedAuthInfo);\n    }\n\n    this.allUsersAuthInfo = allUsersAuthInfo;\n    var activeUserAuthInfo;\n\n    try {\n      activeUserAuthInfo = readActiveUserFromStorage(storage);\n    } catch (e) {\n      throw new StitchClientError(StitchClientErrorCode.CouldNotLoadPersistedAuthInfo);\n    }\n\n    this.activeUserAuthInfo = activeUserAuthInfo === undefined ? AuthInfo.empty() : activeUserAuthInfo;\n\n    if (this.activeUserAuthInfo.hasUser) {\n      this.currentUser = this.prepUser(this.activeUserAuthInfo);\n    }\n\n    if (useTokenRefresher) {\n      this.accessTokenRefresher = new AccessTokenRefresher(this);\n      this.accessTokenRefresher.run();\n    }\n  }\n\n  Object.defineProperty(CoreStitchAuth.prototype, \"authInfo\", {\n    get: function () {\n      return this.activeUserAuthInfo;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CoreStitchAuth.prototype, \"isLoggedIn\", {\n    get: function () {\n      return this.currentUser !== undefined && this.currentUser.isLoggedIn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CoreStitchAuth.prototype, \"user\", {\n    get: function () {\n      return this.currentUser;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CoreStitchAuth.prototype, \"hasDeviceId\", {\n    get: function () {\n      return this.activeUserAuthInfo.deviceId !== undefined && this.activeUserAuthInfo.deviceId !== \"\" && this.activeUserAuthInfo.deviceId !== \"000000000000000000000000\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CoreStitchAuth.prototype, \"deviceId\", {\n    get: function () {\n      if (!this.hasDeviceId) {\n        return undefined;\n      }\n\n      return this.activeUserAuthInfo.deviceId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CoreStitchAuth.prototype.listUsers = function () {\n    var _this = this;\n\n    var list = [];\n    this.allUsersAuthInfo.forEach(function (authInfo) {\n      list.push(_this.prepUser(authInfo));\n    });\n    return list;\n  };\n\n  CoreStitchAuth.prototype.doAuthenticatedRequest = function (stitchReq, authInfo) {\n    var _this = this;\n\n    try {\n      return this.requestClient.doRequest(this.prepareAuthRequest(stitchReq, authInfo || this.activeUserAuthInfo)).catch(function (err) {\n        return _this.handleAuthFailure(err, stitchReq);\n      });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n  CoreStitchAuth.prototype.doAuthenticatedRequestWithDecoder = function (stitchReq, decoder) {\n    return this.doAuthenticatedRequest(stitchReq).then(function (response) {\n      var obj = EJSON.parse(response.body, {\n        strict: false\n      });\n\n      if (decoder) {\n        return decoder.decode(obj);\n      }\n\n      return obj;\n    }).catch(function (err) {\n      throw wrapDecodingError(err);\n    });\n  };\n\n  CoreStitchAuth.prototype.openAuthenticatedEventStream = function (stitchReq, open) {\n    var _this = this;\n\n    if (open === void 0) {\n      open = true;\n    }\n\n    if (!this.isLoggedIn) {\n      throw new StitchClientError(StitchClientErrorCode.MustAuthenticateFirst);\n    }\n\n    var authToken = stitchReq.useRefreshToken ? this.activeUserAuthInfo.refreshToken : this.activeUserAuthInfo.accessToken;\n    return this.requestClient.doStreamRequest(stitchReq.builder.withPath(stitchReq.path + \"&stitch_at=\" + authToken).build(), open, function () {\n      return _this.openAuthenticatedEventStream(stitchReq, false);\n    }).catch(function (err) {\n      return _this.handleAuthFailureForEventStream(err, stitchReq, open);\n    });\n  };\n\n  CoreStitchAuth.prototype.openAuthenticatedStreamWithDecoder = function (stitchReq, decoder) {\n    return this.openAuthenticatedEventStream(stitchReq).then(function (eventStream) {\n      return new Stream(eventStream, decoder);\n    });\n  };\n\n  CoreStitchAuth.prototype.refreshAccessToken = function () {\n    var _this = this;\n\n    var reqBuilder = new StitchAuthRequest.Builder().withRefreshToken().withPath(this.authRoutes.sessionRoute).withMethod(Method.POST);\n    return this.doAuthenticatedRequest(reqBuilder.build()).then(function (response) {\n      try {\n        var partialInfo = ApiAuthInfo.fromJSON(JSON.parse(response.body));\n        _this.activeUserAuthInfo = _this.activeUserAuthInfo.merge(partialInfo);\n\n        if (partialInfo.accessToken && _this.user instanceof CoreStitchUserImpl) {\n          var userData = JWT.fromEncoded(partialInfo.accessToken).userData;\n          _this.user.customData = userData === undefined ? {} : userData;\n        }\n      } catch (err) {\n        throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n      }\n\n      try {\n        writeActiveUserAuthInfoToStorage(_this.activeUserAuthInfo, _this.storage);\n\n        _this.allUsersAuthInfo.set(_this.activeUserAuthInfo.userId, _this.activeUserAuthInfo);\n\n        writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n      } catch (err) {\n        throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n      }\n    });\n  };\n\n  CoreStitchAuth.prototype.switchToUserWithId = function (userId) {\n    var authInfo = this.allUsersAuthInfo.get(userId);\n\n    if (authInfo === undefined) {\n      throw new StitchClientError(StitchClientErrorCode.UserNotFound);\n    }\n\n    if (!authInfo.isLoggedIn) {\n      throw new StitchClientError(StitchClientErrorCode.UserNotLoggedIn);\n    }\n\n    if (this.activeUserAuthInfo.hasUser) {\n      this.allUsersAuthInfo.set(this.activeUserAuthInfo.userId, this.activeUserAuthInfo.withNewAuthActivityTime());\n    }\n\n    var newAuthInfo = authInfo.withNewAuthActivityTime();\n    this.allUsersAuthInfo.set(userId, newAuthInfo);\n    writeActiveUserAuthInfoToStorage(newAuthInfo, this.storage);\n    this.activeUserAuthInfo = newAuthInfo;\n    var previousUser = this.currentUser;\n    this.currentUser = this.prepUser(newAuthInfo);\n    this.onAuthEvent();\n    this.dispatchAuthEvent({\n      currentActiveUser: this.currentUser,\n      kind: AuthEventKind.ActiveUserChanged,\n      previousActiveUser: previousUser\n    });\n    return this.currentUser;\n  };\n\n  CoreStitchAuth.prototype.loginWithCredentialInternal = function (credential) {\n    var _this = this;\n\n    var e_1, _a;\n\n    if (credential instanceof StitchAuthResponseCredential) {\n      return this.processLogin(credential, credential.authInfo, credential.asLink).then(function (user) {\n        _this.dispatchAuthEvent({\n          kind: AuthEventKind.UserLoggedIn,\n          loggedInUser: user\n        });\n\n        return user;\n      });\n    }\n\n    if (credential.providerCapabilities.reusesExistingSession) {\n      try {\n        for (var _b = __values(this.allUsersAuthInfo), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              userId = _d[0],\n              authInfo = _d[1];\n\n          if (authInfo.loggedInProviderType === credential.providerType) {\n            if (authInfo.isLoggedIn) {\n              try {\n                return Promise.resolve(this.switchToUserWithId(userId));\n              } catch (error) {\n                return Promise.reject(error);\n              }\n            }\n\n            if (authInfo.userId !== undefined) {\n              this.removeUserWithIdInternal(authInfo.userId);\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return this.doLogin(credential, false);\n  };\n\n  CoreStitchAuth.prototype.linkUserWithCredentialInternal = function (user, credential) {\n    if (this.currentUser !== undefined && user.id !== this.currentUser.id) {\n      return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNoLongerValid));\n    }\n\n    return this.doLogin(credential, true);\n  };\n\n  CoreStitchAuth.prototype.logoutInternal = function () {\n    if (!this.isLoggedIn || !this.currentUser) {\n      return Promise.resolve();\n    }\n\n    return this.logoutUserWithIdInternal(this.currentUser.id);\n  };\n\n  CoreStitchAuth.prototype.logoutUserWithIdInternal = function (userId) {\n    var _this = this;\n\n    var authInfo = this.allUsersAuthInfo.get(userId);\n\n    if (authInfo === undefined) {\n      return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNotFound));\n    }\n\n    if (!authInfo.isLoggedIn) {\n      return Promise.resolve();\n    }\n\n    var clearAuthBlock = function () {\n      _this.clearUserAuthTokens(authInfo.userId);\n\n      if (authInfo.loggedInProviderType === AnonymousAuthProvider.TYPE) {\n        _this.removeUserWithIdInternal(authInfo.userId);\n      }\n    };\n\n    return this.doLogout(authInfo).then(function () {\n      clearAuthBlock();\n    }).catch(function () {\n      clearAuthBlock();\n    });\n  };\n\n  CoreStitchAuth.prototype.removeUserInternal = function () {\n    if (!this.isLoggedIn || this.currentUser === undefined) {\n      return Promise.resolve();\n    }\n\n    return this.removeUserWithIdInternal(this.currentUser.id);\n  };\n\n  CoreStitchAuth.prototype.removeUserWithIdInternal = function (userId) {\n    var _this = this;\n\n    var authInfo = this.allUsersAuthInfo.get(userId);\n\n    if (authInfo === undefined) {\n      return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNotFound));\n    }\n\n    var removeBlock = function () {\n      _this.clearUserAuthTokens(authInfo.userId);\n\n      _this.allUsersAuthInfo.delete(userId);\n\n      writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n\n      var removedUser = _this.prepUser(authInfo.loggedOut());\n\n      _this.onAuthEvent();\n\n      _this.dispatchAuthEvent({\n        kind: AuthEventKind.UserRemoved,\n        removedUser: removedUser\n      });\n    };\n\n    if (authInfo.isLoggedIn) {\n      return this.doLogout(authInfo).then(function () {\n        removeBlock();\n      }).catch(function (err) {\n        removeBlock();\n      });\n    }\n\n    removeBlock();\n    return Promise.resolve();\n  };\n\n  CoreStitchAuth.prototype.close = function () {\n    if (this.accessTokenRefresher) {\n      this.accessTokenRefresher.stop();\n    }\n  };\n\n  CoreStitchAuth.prototype.prepareAuthRequest = function (stitchReq, authInfo) {\n    if (!authInfo.isLoggedIn) {\n      throw new StitchClientError(StitchClientErrorCode.MustAuthenticateFirst);\n    }\n\n    var newReq = stitchReq.builder;\n    var newHeaders = newReq.headers || {};\n\n    if (stitchReq.useRefreshToken) {\n      newHeaders[Headers.AUTHORIZATION] = Headers.getAuthorizationBearer(authInfo.refreshToken);\n    } else {\n      newHeaders[Headers.AUTHORIZATION] = Headers.getAuthorizationBearer(authInfo.accessToken);\n    }\n\n    newReq.withHeaders(newHeaders);\n    return newReq.build();\n  };\n\n  CoreStitchAuth.prototype.handleAuthFailureForEventStream = function (ex, req, open) {\n    var _this = this;\n\n    if (open === void 0) {\n      open = true;\n    }\n\n    if (!(ex instanceof StitchServiceError) || ex.errorCode !== StitchServiceErrorCode.InvalidSession) {\n      throw ex;\n    }\n\n    if (req.useRefreshToken || !req.shouldRefreshOnFailure) {\n      this.clearActiveUserAuth();\n      throw ex;\n    }\n\n    return this.tryRefreshAccessToken(req.startedAt).then(function () {\n      return _this.openAuthenticatedEventStream(req.builder.withShouldRefreshOnFailure(false).build(), open);\n    });\n  };\n\n  CoreStitchAuth.prototype.handleAuthFailure = function (ex, req) {\n    var _this = this;\n\n    if (!(ex instanceof StitchServiceError) || ex.errorCode !== StitchServiceErrorCode.InvalidSession) {\n      throw ex;\n    }\n\n    if (req.useRefreshToken || !req.shouldRefreshOnFailure) {\n      this.clearActiveUserAuth();\n      throw ex;\n    }\n\n    return this.tryRefreshAccessToken(req.startedAt).then(function () {\n      return _this.doAuthenticatedRequest(req.builder.withShouldRefreshOnFailure(false).build());\n    });\n  };\n\n  CoreStitchAuth.prototype.tryRefreshAccessToken = function (reqStartedAt) {\n    if (!this.isLoggedIn) {\n      throw new StitchClientError(StitchClientErrorCode.LoggedOutDuringRequest);\n    }\n\n    try {\n      var jwt = JWT.fromEncoded(this.activeUserAuthInfo.accessToken);\n\n      if (jwt.issuedAt >= reqStartedAt) {\n        return Promise.resolve();\n      }\n    } catch (e) {}\n\n    return this.refreshAccessToken();\n  };\n\n  CoreStitchAuth.prototype.prepUser = function (authInfo) {\n    return this.userFactory.makeUser(authInfo.userId, authInfo.loggedInProviderType, authInfo.loggedInProviderName, authInfo.isLoggedIn, authInfo.lastAuthActivity, authInfo.userProfile);\n  };\n\n  CoreStitchAuth.prototype.attachAuthOptions = function (authBody) {\n    var options = {};\n    options[DEVICE] = this.deviceInfo;\n    authBody[OPTIONS] = options;\n  };\n\n  CoreStitchAuth.prototype.doLogin = function (credential, asLinkRequest) {\n    var _this = this;\n\n    var previousActiveUser = this.currentUser;\n    return this.doLoginRequest(credential, asLinkRequest).then(function (response) {\n      return _this.processLoginResponse(credential, response, asLinkRequest);\n    }).then(function (user) {\n      _this.onAuthEvent();\n\n      if (asLinkRequest) {\n        _this.dispatchAuthEvent({\n          kind: AuthEventKind.UserLinked,\n          linkedUser: user\n        });\n      } else {\n        _this.dispatchAuthEvent({\n          kind: AuthEventKind.UserLoggedIn,\n          loggedInUser: user\n        });\n\n        _this.dispatchAuthEvent({\n          currentActiveUser: user,\n          kind: AuthEventKind.ActiveUserChanged,\n          previousActiveUser: previousActiveUser\n        });\n      }\n\n      return user;\n    });\n  };\n\n  CoreStitchAuth.prototype.doLoginRequest = function (credential, asLinkRequest) {\n    var reqBuilder = new StitchDocRequest.Builder();\n    reqBuilder.withMethod(Method.POST);\n\n    if (asLinkRequest) {\n      reqBuilder.withPath(this.authRoutes.getAuthProviderLinkRoute(credential.providerName));\n    } else {\n      reqBuilder.withPath(this.authRoutes.getAuthProviderLoginRoute(credential.providerName));\n    }\n\n    var material = credential.material;\n    this.attachAuthOptions(material);\n    reqBuilder.withDocument(material);\n\n    if (!asLinkRequest) {\n      return this.requestClient.doRequest(reqBuilder.build());\n    }\n\n    var linkRequest = new StitchAuthDocRequest(reqBuilder.build(), reqBuilder.document);\n    return this.doAuthenticatedRequest(linkRequest);\n  };\n\n  CoreStitchAuth.prototype.processLogin = function (credential, newAuthInfo, asLinkRequest) {\n    var _this = this;\n\n    var oldActiveUserInfo = this.activeUserAuthInfo;\n    var oldActiveUser = this.currentUser;\n    newAuthInfo = this.activeUserAuthInfo.merge(new AuthInfo(newAuthInfo.userId, newAuthInfo.deviceId, newAuthInfo.accessToken, newAuthInfo.refreshToken, credential.providerType, credential.providerName, undefined, undefined));\n    this.activeUserAuthInfo = newAuthInfo;\n    this.currentUser = this.userFactory.makeUser(this.activeUserAuthInfo.userId, credential.providerType, credential.providerName, this.activeUserAuthInfo.isLoggedIn, new Date(), undefined, JWT.fromEncoded(newAuthInfo.accessToken).userData);\n    return this.doGetUserProfile().then(function (profile) {\n      if (oldActiveUserInfo.hasUser) {\n        _this.allUsersAuthInfo.set(oldActiveUserInfo.userId, oldActiveUserInfo.withNewAuthActivityTime());\n      }\n\n      newAuthInfo = newAuthInfo.merge(new AuthInfo(newAuthInfo.userId, newAuthInfo.deviceId, newAuthInfo.accessToken, newAuthInfo.refreshToken, credential.providerType, credential.providerName, new Date(), profile));\n      var newUserAdded = !_this.allUsersAuthInfo.has(newAuthInfo.userId);\n\n      try {\n        writeActiveUserAuthInfoToStorage(newAuthInfo, _this.storage);\n\n        _this.allUsersAuthInfo.set(newAuthInfo.userId, newAuthInfo);\n\n        writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n      } catch (err) {\n        _this.activeUserAuthInfo = oldActiveUserInfo;\n        _this.currentUser = oldActiveUser;\n\n        if (newAuthInfo.userId !== oldActiveUserInfo.userId && newAuthInfo.userId) {\n          _this.allUsersAuthInfo.delete(newAuthInfo.userId);\n        }\n\n        throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n      }\n\n      _this.activeUserAuthInfo = newAuthInfo;\n      _this.currentUser = _this.userFactory.makeUser(_this.activeUserAuthInfo.userId, credential.providerType, credential.providerName, _this.activeUserAuthInfo.isLoggedIn, _this.activeUserAuthInfo.lastAuthActivity, profile, JWT.fromEncoded(newAuthInfo.accessToken).userData);\n\n      if (newUserAdded) {\n        _this.onAuthEvent();\n\n        _this.dispatchAuthEvent({\n          addedUser: _this.currentUser,\n          kind: AuthEventKind.UserAdded\n        });\n      }\n\n      return _this.currentUser;\n    }).catch(function (err) {\n      if (err instanceof StitchClientError) {\n        throw err;\n      }\n\n      if (asLinkRequest || oldActiveUserInfo.hasUser) {\n        var linkedAuthInfo = _this.activeUserAuthInfo;\n        _this.activeUserAuthInfo = oldActiveUserInfo;\n        _this.currentUser = oldActiveUser;\n\n        if (asLinkRequest) {\n          _this.activeUserAuthInfo = _this.activeUserAuthInfo.withAuthProvider(linkedAuthInfo.loggedInProviderType, linkedAuthInfo.loggedInProviderName);\n        }\n      } else {\n        _this.clearActiveUserAuth();\n      }\n\n      throw err;\n    });\n  };\n\n  CoreStitchAuth.prototype.processLoginResponse = function (credential, response, asLinkRequest) {\n    try {\n      if (!response) {\n        throw new StitchServiceError(\"the login response could not be processed for credential: \" + credential + \";\" + \"response was undefined\");\n      }\n\n      if (!response.body) {\n        throw new StitchServiceError(\"response with status code \" + response.statusCode + \" has empty body\");\n      }\n\n      return this.processLogin(credential, ApiAuthInfo.fromJSON(JSON.parse(response.body)), asLinkRequest);\n    } catch (err) {\n      throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n    }\n  };\n\n  CoreStitchAuth.prototype.doGetUserProfile = function () {\n    var reqBuilder = new StitchAuthRequest.Builder();\n    reqBuilder.withMethod(Method.GET).withPath(this.authRoutes.profileRoute);\n    return this.doAuthenticatedRequest(reqBuilder.build()).then(function (response) {\n      return ApiCoreUserProfile.fromJSON(JSON.parse(response.body));\n    }).catch(function (err) {\n      if (err instanceof StitchError) {\n        throw err;\n      } else {\n        throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n      }\n    });\n  };\n\n  CoreStitchAuth.prototype.doLogout = function (authInfo) {\n    var reqBuilder = new StitchAuthRequest.Builder();\n    reqBuilder.withRefreshToken().withPath(this.authRoutes.sessionRoute).withMethod(Method.DELETE);\n    return this.doAuthenticatedRequest(reqBuilder.build(), authInfo).then(function () {\n      return;\n    });\n  };\n\n  CoreStitchAuth.prototype.clearActiveUserAuth = function () {\n    if (!this.isLoggedIn) {\n      return;\n    }\n\n    this.clearUserAuthTokens(this.activeUserAuthInfo.userId);\n  };\n\n  CoreStitchAuth.prototype.clearUserAuthTokens = function (userId) {\n    var unclearedAuthInfo = this.allUsersAuthInfo.get(userId);\n\n    if (unclearedAuthInfo === undefined) {\n      if (this.activeUserAuthInfo.userId !== userId) {\n        throw new StitchClientError(StitchClientErrorCode.UserNotFound);\n      }\n    } else if (!unclearedAuthInfo.isLoggedIn) {\n      return;\n    }\n\n    try {\n      var loggedOutUser = void 0;\n\n      if (unclearedAuthInfo) {\n        var loggedOutAuthInfo = unclearedAuthInfo.loggedOut();\n        this.allUsersAuthInfo.set(userId, loggedOutAuthInfo);\n        writeAllUsersAuthInfoToStorage(this.allUsersAuthInfo, this.storage);\n        loggedOutUser = this.userFactory.makeUser(loggedOutAuthInfo.userId, loggedOutAuthInfo.loggedInProviderType, loggedOutAuthInfo.loggedInProviderName, loggedOutAuthInfo.isLoggedIn, loggedOutAuthInfo.lastAuthActivity, loggedOutAuthInfo.userProfile);\n      }\n\n      var wasActiveUser = false;\n\n      if (this.activeUserAuthInfo.hasUser && this.activeUserAuthInfo.userId === userId) {\n        wasActiveUser = true;\n        this.activeUserAuthInfo = this.activeUserAuthInfo.withClearedUser();\n        this.currentUser = undefined;\n        writeActiveUserAuthInfoToStorage(this.activeUserAuthInfo, this.storage);\n      }\n\n      if (loggedOutUser) {\n        this.onAuthEvent();\n        this.dispatchAuthEvent({\n          kind: AuthEventKind.UserLoggedOut,\n          loggedOutUser: loggedOutUser\n        });\n\n        if (wasActiveUser) {\n          this.dispatchAuthEvent({\n            currentActiveUser: undefined,\n            kind: AuthEventKind.ActiveUserChanged,\n            previousActiveUser: loggedOutUser\n          });\n        }\n      }\n    } catch (err) {\n      throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n    }\n  };\n\n  return CoreStitchAuth;\n}();\n\nexport default CoreStitchAuth;","map":{"version":3,"sources":["../../../../src/auth/internal/CoreStitchAuth.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { EJSON } from \"bson\";\nimport { wrapDecodingError } from \"../../internal/common/StitchErrorUtils\";\nimport Headers from \"../../internal/net/Headers\";\nimport Method from \"../../internal/net/Method\";\nimport { StitchAuthDocRequest } from \"../../internal/net/StitchAuthDocRequest\";\nimport { StitchAuthRequest } from \"../../internal/net/StitchAuthRequest\";\nimport { StitchDocRequest } from \"../../internal/net/StitchDocRequest\";\nimport StitchClientError from \"../../StitchClientError\";\nimport { StitchClientErrorCode } from \"../../StitchClientErrorCode\";\nimport StitchError from \"../../StitchError\";\nimport StitchRequestError from \"../../StitchRequestError\";\nimport { StitchRequestErrorCode } from \"../../StitchRequestErrorCode\";\nimport StitchServiceError from \"../../StitchServiceError\";\nimport { StitchServiceErrorCode } from \"../../StitchServiceErrorCode\";\nimport Stream from \"../../Stream\";\nimport CoreStitchUserImpl from \"../internal/CoreStitchUserImpl\";\nimport AnonymousAuthProvider from \"../providers/anonymous/AnonymousAuthProvider\";\nimport StitchAuthResponseCredential from \"../providers/internal/StitchAuthResponseCredential\";\nimport AccessTokenRefresher from \"./AccessTokenRefresher\";\nimport { AuthEventKind } from \"./AuthEvent\";\nimport AuthInfo from \"./AuthInfo\";\nimport JWT from \"./JWT\";\nimport ApiAuthInfo from \"./models/ApiAuthInfo\";\nimport ApiCoreUserProfile from \"./models/ApiCoreUserProfile\";\nimport { readActiveUserFromStorage, readCurrentUsersFromStorage, writeActiveUserAuthInfoToStorage, writeAllUsersAuthInfoToStorage } from \"./models/StoreAuthInfo\";\nvar OPTIONS = \"options\";\nvar DEVICE = \"device\";\nvar CoreStitchAuth = (function () {\n    function CoreStitchAuth(requestClient, authRoutes, storage, useTokenRefresher) {\n        if (useTokenRefresher === void 0) { useTokenRefresher = true; }\n        this.requestClient = requestClient;\n        this.authRoutes = authRoutes;\n        this.storage = storage;\n        var allUsersAuthInfo;\n        try {\n            allUsersAuthInfo = readCurrentUsersFromStorage(storage);\n        }\n        catch (e) {\n            throw new StitchClientError(StitchClientErrorCode.CouldNotLoadPersistedAuthInfo);\n        }\n        this.allUsersAuthInfo = allUsersAuthInfo;\n        var activeUserAuthInfo;\n        try {\n            activeUserAuthInfo = readActiveUserFromStorage(storage);\n        }\n        catch (e) {\n            throw new StitchClientError(StitchClientErrorCode.CouldNotLoadPersistedAuthInfo);\n        }\n        this.activeUserAuthInfo =\n            activeUserAuthInfo === undefined ? AuthInfo.empty() : activeUserAuthInfo;\n        if (this.activeUserAuthInfo.hasUser) {\n            this.currentUser = this.prepUser(this.activeUserAuthInfo);\n        }\n        if (useTokenRefresher) {\n            this.accessTokenRefresher = new AccessTokenRefresher(this);\n            this.accessTokenRefresher.run();\n        }\n    }\n    Object.defineProperty(CoreStitchAuth.prototype, \"authInfo\", {\n        get: function () {\n            return this.activeUserAuthInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CoreStitchAuth.prototype, \"isLoggedIn\", {\n        get: function () {\n            return this.currentUser !== undefined && this.currentUser.isLoggedIn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CoreStitchAuth.prototype, \"user\", {\n        get: function () {\n            return this.currentUser;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CoreStitchAuth.prototype, \"hasDeviceId\", {\n        get: function () {\n            return (this.activeUserAuthInfo.deviceId !== undefined &&\n                this.activeUserAuthInfo.deviceId !== \"\" &&\n                this.activeUserAuthInfo.deviceId !== \"000000000000000000000000\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CoreStitchAuth.prototype, \"deviceId\", {\n        get: function () {\n            if (!this.hasDeviceId) {\n                return undefined;\n            }\n            return this.activeUserAuthInfo.deviceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CoreStitchAuth.prototype.listUsers = function () {\n        var _this = this;\n        var list = [];\n        this.allUsersAuthInfo.forEach(function (authInfo) {\n            list.push(_this.prepUser(authInfo));\n        });\n        return list;\n    };\n    CoreStitchAuth.prototype.doAuthenticatedRequest = function (stitchReq, authInfo) {\n        var _this = this;\n        try {\n            return this.requestClient\n                .doRequest(this.prepareAuthRequest(stitchReq, authInfo || this.activeUserAuthInfo))\n                .catch(function (err) {\n                return _this.handleAuthFailure(err, stitchReq);\n            });\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    };\n    CoreStitchAuth.prototype.doAuthenticatedRequestWithDecoder = function (stitchReq, decoder) {\n        return this.doAuthenticatedRequest(stitchReq)\n            .then(function (response) {\n            var obj = EJSON.parse(response.body, { strict: false });\n            if (decoder) {\n                return decoder.decode(obj);\n            }\n            return obj;\n        })\n            .catch(function (err) {\n            throw wrapDecodingError(err);\n        });\n    };\n    CoreStitchAuth.prototype.openAuthenticatedEventStream = function (stitchReq, open) {\n        var _this = this;\n        if (open === void 0) { open = true; }\n        if (!this.isLoggedIn) {\n            throw new StitchClientError(StitchClientErrorCode.MustAuthenticateFirst);\n        }\n        var authToken = stitchReq.useRefreshToken ?\n            this.activeUserAuthInfo.refreshToken : this.activeUserAuthInfo.accessToken;\n        return this.requestClient.doStreamRequest(stitchReq.builder\n            .withPath(stitchReq.path + \"&stitch_at=\" + authToken)\n            .build(), open, function () { return _this.openAuthenticatedEventStream(stitchReq, false); })\n            .catch(function (err) {\n            return _this.handleAuthFailureForEventStream(err, stitchReq, open);\n        });\n    };\n    CoreStitchAuth.prototype.openAuthenticatedStreamWithDecoder = function (stitchReq, decoder) {\n        return this.openAuthenticatedEventStream(stitchReq)\n            .then(function (eventStream) {\n            return new Stream(eventStream, decoder);\n        });\n    };\n    CoreStitchAuth.prototype.refreshAccessToken = function () {\n        var _this = this;\n        var reqBuilder = new StitchAuthRequest.Builder()\n            .withRefreshToken()\n            .withPath(this.authRoutes.sessionRoute)\n            .withMethod(Method.POST);\n        return this.doAuthenticatedRequest(reqBuilder.build()).then(function (response) {\n            try {\n                var partialInfo = ApiAuthInfo.fromJSON(JSON.parse(response.body));\n                _this.activeUserAuthInfo = _this.activeUserAuthInfo.merge(partialInfo);\n                if (partialInfo.accessToken && _this.user instanceof CoreStitchUserImpl) {\n                    var userData = JWT.fromEncoded(partialInfo.accessToken).userData;\n                    _this.user.customData = userData === undefined ? {} : userData;\n                }\n            }\n            catch (err) {\n                throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n            }\n            try {\n                writeActiveUserAuthInfoToStorage(_this.activeUserAuthInfo, _this.storage);\n                _this.allUsersAuthInfo.set(_this.activeUserAuthInfo.userId, _this.activeUserAuthInfo);\n                writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n            }\n            catch (err) {\n                throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n            }\n        });\n    };\n    CoreStitchAuth.prototype.switchToUserWithId = function (userId) {\n        var authInfo = this.allUsersAuthInfo.get(userId);\n        if (authInfo === undefined) {\n            throw new StitchClientError(StitchClientErrorCode.UserNotFound);\n        }\n        if (!authInfo.isLoggedIn) {\n            throw new StitchClientError(StitchClientErrorCode.UserNotLoggedIn);\n        }\n        if (this.activeUserAuthInfo.hasUser) {\n            this.allUsersAuthInfo.set(this.activeUserAuthInfo.userId, this.activeUserAuthInfo.withNewAuthActivityTime());\n        }\n        var newAuthInfo = authInfo.withNewAuthActivityTime();\n        this.allUsersAuthInfo.set(userId, newAuthInfo);\n        writeActiveUserAuthInfoToStorage(newAuthInfo, this.storage);\n        this.activeUserAuthInfo = newAuthInfo;\n        var previousUser = this.currentUser;\n        this.currentUser = this.prepUser(newAuthInfo);\n        this.onAuthEvent();\n        this.dispatchAuthEvent({\n            currentActiveUser: this.currentUser,\n            kind: AuthEventKind.ActiveUserChanged,\n            previousActiveUser: previousUser\n        });\n        return this.currentUser;\n    };\n    CoreStitchAuth.prototype.loginWithCredentialInternal = function (credential) {\n        var _this = this;\n        var e_1, _a;\n        if (credential instanceof StitchAuthResponseCredential) {\n            return this.processLogin(credential, credential.authInfo, credential.asLink).then(function (user) {\n                _this.dispatchAuthEvent({\n                    kind: AuthEventKind.UserLoggedIn,\n                    loggedInUser: user\n                });\n                return user;\n            });\n        }\n        if (credential.providerCapabilities.reusesExistingSession) {\n            try {\n                for (var _b = __values(this.allUsersAuthInfo), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var _d = __read(_c.value, 2), userId = _d[0], authInfo = _d[1];\n                    if (authInfo.loggedInProviderType === credential.providerType) {\n                        if (authInfo.isLoggedIn) {\n                            try {\n                                return Promise.resolve(this.switchToUserWithId(userId));\n                            }\n                            catch (error) {\n                                return Promise.reject(error);\n                            }\n                        }\n                        if (authInfo.userId !== undefined) {\n                            this.removeUserWithIdInternal(authInfo.userId);\n                        }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        return this.doLogin(credential, false);\n    };\n    CoreStitchAuth.prototype.linkUserWithCredentialInternal = function (user, credential) {\n        if (this.currentUser !== undefined && user.id !== this.currentUser.id) {\n            return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNoLongerValid));\n        }\n        return this.doLogin(credential, true);\n    };\n    CoreStitchAuth.prototype.logoutInternal = function () {\n        if (!this.isLoggedIn || !this.currentUser) {\n            return Promise.resolve();\n        }\n        return this.logoutUserWithIdInternal(this.currentUser.id);\n    };\n    CoreStitchAuth.prototype.logoutUserWithIdInternal = function (userId) {\n        var _this = this;\n        var authInfo = this.allUsersAuthInfo.get(userId);\n        if (authInfo === undefined) {\n            return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNotFound));\n        }\n        if (!authInfo.isLoggedIn) {\n            return Promise.resolve();\n        }\n        var clearAuthBlock = function () {\n            _this.clearUserAuthTokens(authInfo.userId);\n            if (authInfo.loggedInProviderType === AnonymousAuthProvider.TYPE) {\n                _this.removeUserWithIdInternal(authInfo.userId);\n            }\n        };\n        return this.doLogout(authInfo)\n            .then(function () {\n            clearAuthBlock();\n        })\n            .catch(function () {\n            clearAuthBlock();\n        });\n    };\n    CoreStitchAuth.prototype.removeUserInternal = function () {\n        if (!this.isLoggedIn || this.currentUser === undefined) {\n            return Promise.resolve();\n        }\n        return this.removeUserWithIdInternal(this.currentUser.id);\n    };\n    CoreStitchAuth.prototype.removeUserWithIdInternal = function (userId) {\n        var _this = this;\n        var authInfo = this.allUsersAuthInfo.get(userId);\n        if (authInfo === undefined) {\n            return Promise.reject(new StitchClientError(StitchClientErrorCode.UserNotFound));\n        }\n        var removeBlock = function () {\n            _this.clearUserAuthTokens(authInfo.userId);\n            _this.allUsersAuthInfo.delete(userId);\n            writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n            var removedUser = _this.prepUser(authInfo.loggedOut());\n            _this.onAuthEvent();\n            _this.dispatchAuthEvent({\n                kind: AuthEventKind.UserRemoved,\n                removedUser: removedUser\n            });\n        };\n        if (authInfo.isLoggedIn) {\n            return this.doLogout(authInfo).then(function () {\n                removeBlock();\n            }).catch(function (err) {\n                removeBlock();\n            });\n        }\n        removeBlock();\n        return Promise.resolve();\n    };\n    CoreStitchAuth.prototype.close = function () {\n        if (this.accessTokenRefresher) {\n            this.accessTokenRefresher.stop();\n        }\n    };\n    CoreStitchAuth.prototype.prepareAuthRequest = function (stitchReq, authInfo) {\n        if (!authInfo.isLoggedIn) {\n            throw new StitchClientError(StitchClientErrorCode.MustAuthenticateFirst);\n        }\n        var newReq = stitchReq.builder;\n        var newHeaders = newReq.headers || {};\n        if (stitchReq.useRefreshToken) {\n            newHeaders[Headers.AUTHORIZATION] = Headers.getAuthorizationBearer(authInfo.refreshToken);\n        }\n        else {\n            newHeaders[Headers.AUTHORIZATION] = Headers.getAuthorizationBearer(authInfo.accessToken);\n        }\n        newReq.withHeaders(newHeaders);\n        return newReq.build();\n    };\n    CoreStitchAuth.prototype.handleAuthFailureForEventStream = function (ex, req, open) {\n        var _this = this;\n        if (open === void 0) { open = true; }\n        if (!(ex instanceof StitchServiceError) ||\n            ex.errorCode !== StitchServiceErrorCode.InvalidSession) {\n            throw ex;\n        }\n        if (req.useRefreshToken || !req.shouldRefreshOnFailure) {\n            this.clearActiveUserAuth();\n            throw ex;\n        }\n        return this.tryRefreshAccessToken(req.startedAt).then(function () {\n            return _this.openAuthenticatedEventStream(req.builder.withShouldRefreshOnFailure(false).build(), open);\n        });\n    };\n    CoreStitchAuth.prototype.handleAuthFailure = function (ex, req) {\n        var _this = this;\n        if (!(ex instanceof StitchServiceError) ||\n            ex.errorCode !== StitchServiceErrorCode.InvalidSession) {\n            throw ex;\n        }\n        if (req.useRefreshToken || !req.shouldRefreshOnFailure) {\n            this.clearActiveUserAuth();\n            throw ex;\n        }\n        return this.tryRefreshAccessToken(req.startedAt).then(function () {\n            return _this.doAuthenticatedRequest(req.builder.withShouldRefreshOnFailure(false).build());\n        });\n    };\n    CoreStitchAuth.prototype.tryRefreshAccessToken = function (reqStartedAt) {\n        if (!this.isLoggedIn) {\n            throw new StitchClientError(StitchClientErrorCode.LoggedOutDuringRequest);\n        }\n        try {\n            var jwt = JWT.fromEncoded(this.activeUserAuthInfo.accessToken);\n            if (jwt.issuedAt >= reqStartedAt) {\n                return Promise.resolve();\n            }\n        }\n        catch (e) {\n        }\n        return this.refreshAccessToken();\n    };\n    CoreStitchAuth.prototype.prepUser = function (authInfo) {\n        return this.userFactory.makeUser(authInfo.userId, authInfo.loggedInProviderType, authInfo.loggedInProviderName, authInfo.isLoggedIn, authInfo.lastAuthActivity, authInfo.userProfile);\n    };\n    CoreStitchAuth.prototype.attachAuthOptions = function (authBody) {\n        var options = {};\n        options[DEVICE] = this.deviceInfo;\n        authBody[OPTIONS] = options;\n    };\n    CoreStitchAuth.prototype.doLogin = function (credential, asLinkRequest) {\n        var _this = this;\n        var previousActiveUser = this.currentUser;\n        return this.doLoginRequest(credential, asLinkRequest)\n            .then(function (response) { return _this.processLoginResponse(credential, response, asLinkRequest); })\n            .then(function (user) {\n            _this.onAuthEvent();\n            if (asLinkRequest) {\n                _this.dispatchAuthEvent({\n                    kind: AuthEventKind.UserLinked,\n                    linkedUser: user\n                });\n            }\n            else {\n                _this.dispatchAuthEvent({\n                    kind: AuthEventKind.UserLoggedIn,\n                    loggedInUser: user,\n                });\n                _this.dispatchAuthEvent({\n                    currentActiveUser: user,\n                    kind: AuthEventKind.ActiveUserChanged,\n                    previousActiveUser: previousActiveUser\n                });\n            }\n            return user;\n        });\n    };\n    CoreStitchAuth.prototype.doLoginRequest = function (credential, asLinkRequest) {\n        var reqBuilder = new StitchDocRequest.Builder();\n        reqBuilder.withMethod(Method.POST);\n        if (asLinkRequest) {\n            reqBuilder.withPath(this.authRoutes.getAuthProviderLinkRoute(credential.providerName));\n        }\n        else {\n            reqBuilder.withPath(this.authRoutes.getAuthProviderLoginRoute(credential.providerName));\n        }\n        var material = credential.material;\n        this.attachAuthOptions(material);\n        reqBuilder.withDocument(material);\n        if (!asLinkRequest) {\n            return this.requestClient.doRequest(reqBuilder.build());\n        }\n        var linkRequest = new StitchAuthDocRequest(reqBuilder.build(), reqBuilder.document);\n        return this.doAuthenticatedRequest(linkRequest);\n    };\n    CoreStitchAuth.prototype.processLogin = function (credential, newAuthInfo, asLinkRequest) {\n        var _this = this;\n        var oldActiveUserInfo = this.activeUserAuthInfo;\n        var oldActiveUser = this.currentUser;\n        newAuthInfo = this.activeUserAuthInfo.merge(new AuthInfo(newAuthInfo.userId, newAuthInfo.deviceId, newAuthInfo.accessToken, newAuthInfo.refreshToken, credential.providerType, credential.providerName, undefined, undefined));\n        this.activeUserAuthInfo = newAuthInfo;\n        this.currentUser = this.userFactory.makeUser(this.activeUserAuthInfo.userId, credential.providerType, credential.providerName, this.activeUserAuthInfo.isLoggedIn, new Date(), undefined, JWT.fromEncoded(newAuthInfo.accessToken).userData);\n        return this.doGetUserProfile()\n            .then(function (profile) {\n            if (oldActiveUserInfo.hasUser) {\n                _this.allUsersAuthInfo.set(oldActiveUserInfo.userId, oldActiveUserInfo.withNewAuthActivityTime());\n            }\n            newAuthInfo = newAuthInfo.merge(new AuthInfo(newAuthInfo.userId, newAuthInfo.deviceId, newAuthInfo.accessToken, newAuthInfo.refreshToken, credential.providerType, credential.providerName, new Date(), profile));\n            var newUserAdded = !_this.allUsersAuthInfo.has(newAuthInfo.userId);\n            try {\n                writeActiveUserAuthInfoToStorage(newAuthInfo, _this.storage);\n                _this.allUsersAuthInfo.set(newAuthInfo.userId, newAuthInfo);\n                writeAllUsersAuthInfoToStorage(_this.allUsersAuthInfo, _this.storage);\n            }\n            catch (err) {\n                _this.activeUserAuthInfo = oldActiveUserInfo;\n                _this.currentUser = oldActiveUser;\n                if (newAuthInfo.userId !== oldActiveUserInfo.userId && newAuthInfo.userId) {\n                    _this.allUsersAuthInfo.delete(newAuthInfo.userId);\n                }\n                throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n            }\n            _this.activeUserAuthInfo = newAuthInfo;\n            _this.currentUser = _this.userFactory.makeUser(_this.activeUserAuthInfo.userId, credential.providerType, credential.providerName, _this.activeUserAuthInfo.isLoggedIn, _this.activeUserAuthInfo.lastAuthActivity, profile, JWT.fromEncoded(newAuthInfo.accessToken).userData);\n            if (newUserAdded) {\n                _this.onAuthEvent();\n                _this.dispatchAuthEvent({\n                    addedUser: _this.currentUser,\n                    kind: AuthEventKind.UserAdded\n                });\n            }\n            return _this.currentUser;\n        })\n            .catch(function (err) {\n            if (err instanceof StitchClientError) {\n                throw err;\n            }\n            if (asLinkRequest || oldActiveUserInfo.hasUser) {\n                var linkedAuthInfo = _this.activeUserAuthInfo;\n                _this.activeUserAuthInfo = oldActiveUserInfo;\n                _this.currentUser = oldActiveUser;\n                if (asLinkRequest) {\n                    _this.activeUserAuthInfo = _this.activeUserAuthInfo.withAuthProvider(linkedAuthInfo.loggedInProviderType, linkedAuthInfo.loggedInProviderName);\n                }\n            }\n            else {\n                _this.clearActiveUserAuth();\n            }\n            throw err;\n        });\n    };\n    CoreStitchAuth.prototype.processLoginResponse = function (credential, response, asLinkRequest) {\n        try {\n            if (!response) {\n                throw new StitchServiceError(\"the login response could not be processed for credential: \" + credential + \";\" +\n                    \"response was undefined\");\n            }\n            if (!response.body) {\n                throw new StitchServiceError(\"response with status code \" + response.statusCode + \" has empty body\");\n            }\n            return this.processLogin(credential, ApiAuthInfo.fromJSON(JSON.parse(response.body)), asLinkRequest);\n        }\n        catch (err) {\n            throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n        }\n    };\n    CoreStitchAuth.prototype.doGetUserProfile = function () {\n        var reqBuilder = new StitchAuthRequest.Builder();\n        reqBuilder.withMethod(Method.GET).withPath(this.authRoutes.profileRoute);\n        return this.doAuthenticatedRequest(reqBuilder.build())\n            .then(function (response) { return ApiCoreUserProfile.fromJSON(JSON.parse(response.body)); })\n            .catch(function (err) {\n            if (err instanceof StitchError) {\n                throw err;\n            }\n            else {\n                throw new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n            }\n        });\n    };\n    CoreStitchAuth.prototype.doLogout = function (authInfo) {\n        var reqBuilder = new StitchAuthRequest.Builder();\n        reqBuilder\n            .withRefreshToken()\n            .withPath(this.authRoutes.sessionRoute)\n            .withMethod(Method.DELETE);\n        return this.doAuthenticatedRequest(reqBuilder.build(), authInfo).then(function () {\n            return;\n        });\n    };\n    CoreStitchAuth.prototype.clearActiveUserAuth = function () {\n        if (!this.isLoggedIn) {\n            return;\n        }\n        this.clearUserAuthTokens(this.activeUserAuthInfo.userId);\n    };\n    CoreStitchAuth.prototype.clearUserAuthTokens = function (userId) {\n        var unclearedAuthInfo = this.allUsersAuthInfo.get(userId);\n        if (unclearedAuthInfo === undefined) {\n            if (this.activeUserAuthInfo.userId !== userId) {\n                throw new StitchClientError(StitchClientErrorCode.UserNotFound);\n            }\n        }\n        else if (!unclearedAuthInfo.isLoggedIn) {\n            return;\n        }\n        try {\n            var loggedOutUser = void 0;\n            if (unclearedAuthInfo) {\n                var loggedOutAuthInfo = unclearedAuthInfo.loggedOut();\n                this.allUsersAuthInfo.set(userId, loggedOutAuthInfo);\n                writeAllUsersAuthInfoToStorage(this.allUsersAuthInfo, this.storage);\n                loggedOutUser = this.userFactory.makeUser(loggedOutAuthInfo.userId, loggedOutAuthInfo.loggedInProviderType, loggedOutAuthInfo.loggedInProviderName, loggedOutAuthInfo.isLoggedIn, loggedOutAuthInfo.lastAuthActivity, loggedOutAuthInfo.userProfile);\n            }\n            var wasActiveUser = false;\n            if (this.activeUserAuthInfo.hasUser && this.activeUserAuthInfo.userId === userId) {\n                wasActiveUser = true;\n                this.activeUserAuthInfo = this.activeUserAuthInfo.withClearedUser();\n                this.currentUser = undefined;\n                writeActiveUserAuthInfoToStorage(this.activeUserAuthInfo, this.storage);\n            }\n            if (loggedOutUser) {\n                this.onAuthEvent();\n                this.dispatchAuthEvent({\n                    kind: AuthEventKind.UserLoggedOut,\n                    loggedOutUser: loggedOutUser,\n                });\n                if (wasActiveUser) {\n                    this.dispatchAuthEvent({\n                        currentActiveUser: undefined,\n                        kind: AuthEventKind.ActiveUserChanged,\n                        previousActiveUser: loggedOutUser\n                    });\n                }\n            }\n        }\n        catch (err) {\n            throw new StitchClientError(StitchClientErrorCode.CouldNotPersistAuthInfo);\n        }\n    };\n    return CoreStitchAuth;\n}());\nexport default CoreStitchAuth;\n//# sourceMappingURL=CoreStitchAuth.js.map"]},"metadata":{},"sourceType":"module"}