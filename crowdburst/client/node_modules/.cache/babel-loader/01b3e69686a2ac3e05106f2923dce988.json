{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Form2.js\";\nimport React, { Component } from 'react';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport List2 from './List2'; //import { render } from 'react-dom';\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://crowdburst.herokuapp.com/v1/graphql'\n  })\n}); // const app = require('express'); \n\nclass Form2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem(e) {\n    // Prevent button click from submitting form\n    e.preventDefault(); // Create variables for our list, the item to add, and our form\n\n    let list = this.state.list; // If our input has a value\n\n    if (newItem.value != \"\") {\n      // Add the new item to the end of our list array\n      list.push(newItem.value); // Then we use that to set the state for list\n\n      this.setState({\n        list: list\n      }); // Finally, we need to reset the form\n\n      newItem.classList.remove(\"is-danger\");\n      form.reset();\n    } else {\n      // If the input doesn't have a value, make the border red since it's required\n      newItem.classList.add(\"is-danger\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List2, {\n      items: this.state.list,\n      delete: this.removeItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      id: \"addItemForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      id: \"addInput\",\n      placeholder: \"Grocery Store\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-info\",\n      onClick: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Add Item\")), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      id: \"addItemForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      id: \"addInput\",\n      placeholder: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-info\",\n      onClick: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Add Address\")))));\n  }\n\n}\n\nexport default Form2;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Form2.js"],"names":["React","Component","ApolloClient","HttpLink","InMemoryCache","List2","client","cache","link","uri","Form2","constructor","props","state","list","addItem","bind","e","preventDefault","newItem","value","push","setState","classList","remove","form","reset","add","render","removeItem"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'; \nimport List2 from './List2'; \n\n//import { render } from 'react-dom';\n\n\nconst client = new ApolloClient(\n    {\n      cache: new InMemoryCache(),\n      link: new HttpLink({\n        uri: 'https://crowdburst.herokuapp.com/v1/graphql',\n      })\n    }\n  ); \n\n// const app = require('express'); \n\nclass Form2 extends React.Component {\n    \n\nconstructor(props)\n{\n    super(props)\n    this.state = \n    {\n        list: \n        [\n        ]\n    }\n\n    \n\n    this.addItem = this.addItem.bind(this)\n\n}\n\naddItem(e) {\n  // Prevent button click from submitting form\n  e.preventDefault();\n\n  // Create variables for our list, the item to add, and our form\n  let list = this.state.list;\n  \n\n\n\n  // If our input has a value\n  if (newItem.value != \"\") {\n    // Add the new item to the end of our list array\n    list.push(newItem.value);\n    // Then we use that to set the state for list\n    this.setState({\n      list: list\n    });\n    // Finally, we need to reset the form\n    newItem.classList.remove(\"is-danger\");\n    form.reset();\n  } else {\n    // If the input doesn't have a value, make the border red since it's required\n    newItem.classList.add(\"is-danger\");\n  }\n}\n\n\n\n\n\n\nrender() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <section className=\"section\">\n          <List2 items={this.state.list} delete={this.removeItem} />\n          </section>\n          <hr />\n    <section className=\"section\">\n      <form className=\"form\" id=\"addItemForm\">\n        <input type=\"text\" className=\"input\" id=\"addInput\" placeholder=\"Grocery Store\" />\n        <button className=\"button is-info\" onClick={this.addItem}>\n          Add Item\n        </button>\n      </form>\n      <form className = \"form\" id = \"addItemForm\">\n        <input type = \"text\" className = \"input\" id=\"addInput\" placeholder=\"Address\"/>\n        <button className=\"button is-info\" onClick={this.addItem}>\n          Add Address\n        </button>\n      </form>\n    </section>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Form2\n\n"]},"metadata":{},"sourceType":"module"}