{"ast":null,"code":"//console.log('May Node be with you');\nconst {\n  Client,\n  Status\n} = require(\"@googlemaps/google-maps-services-js\");\n\nconst express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst app = express(); //const app2 = express()\n\nconst MongoClient = require('mongodb').MongoClient; //const {Client, Status} = require(\"@googlemaps/google-maps-services-js\");\n// const axios = require(\"axios\")\n// const cheerio = require(\"cheerio\")\n// const Nightmare = require('nightmare');\n// const cheerio = require('cheerio');\n// const nightmare = Nightmare({show: true})\n// const url = 'https://nextdoor.com/search/?query=popular%20grocery%20stores&ccid=9441276D-736F-CC13-A629-78CB8E223879&ssid=cb148907-88b9-4fe1-b723-c1c94422b12f'\n// nightmare\n//     .goto(url)\n//     .wait('body')\n//     //.click('button._2AkmmA._29YdH8')\n//     //.type('input.LM6RPg', 'popular stores')\n//     //.click('button.vh79eN')\n//     //.wait('div.bhgxx2')\n//     .evaluate(() => document.querySelector('body').innerHTML)\n//     .end()\n//     .then(response => {\n//         console.log(getData(response));\n//     })\n//     .catch(err => {\n//         console.log(err); \n//     })\n//     let getData = html => {\n//         data = [];\n//         const $ = cheerio.load(html); \n//         $('div._1HmYoV._35HD7C:nth-child(2) div.bhgxx2.col-12-12').each((row,raw_element) =>\n//         {\n//             $(raw_element).find('div div div').each((i,elem) =>\n//             {\n//                 let title = $(elem).find('div div a:nth-child(2)').text();\n//                 let link = $(elem).find('div div a:nth-child(2)').attr('href');\n//                 if(title)\n//                 {\n//                     data.push({\n//                         title: title,\n//                         link: link\n//                     });\n//                 }\n//             });\n//         }\n//         );\n//         return data; \n//     }\n// const rp = require('request-promise');\n// const otcsv = require('objects-to-csv');\n// const cheerio = require('cheerio');\n// // const baseURL = 'https://nextdoor.com/news_feed/';\n// // const searchURL = '/search/?query=food&ccid=CE43D663-0CDC-3817-9A96-B10F0B09B5ED&ssid=a8980ced-dffe-455f-b5e1-8252bdaf8f42';\n// const baseURL = 'https://www.yellowpages.com/';\n// const searchURL = '/arlington-va/mip/whole-foods-market-11882672';\n// const getCompanies = async () => {\n//     const html = await rp(baseURL + searchURL);\n//     const businessMap = cheerio('a.email-business', html).map(async (i, e) => {\n//       const link = baseURL + e.attribs.href;\n//       const innerHtml = await rp(link);\n//       const emailAddress = cheerio('h2.address', innerHtml).prop('href');\n//       const name = e.children[0].data;\n//       const phone = cheerio('p.phone', innerHtml).text();\n//       return {\n//        emailAddress,\n//         link,\n//         name,\n//         phone,\n//       }\n//     }).get();\n//     return Promise.all(businessMap);\n//   }; \n//   //then(() => console.log(phone)); \n//   getCompanies()\n//   .then(result => {\n//     const transformed = new otcsv(result);\n//     return transformed.toDisk('./output.csv');\n//   })\n//   .then(() => console.log('SUCCESSFULLY COMPLETED THE WEB SCRAPING SAMPLE'));\n\n\nMongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {\n  useUnifiedTopology: true\n}).then(client => {\n  console.log('Connected to databse');\n  const db = client.db('star-wars-quotes');\n  const quotesCollection = db.collection('test'); //const quotesCollection2 = db.collection('test')\n  //const quotesCollection3 = db.collection('park')\n\n  app.set('view engine', 'ejs');\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(bodyParser.json());\n  app.use(express.static('public')); // app2.set('view engine', 'ejs')\n  // app2.use(bodyParser.urlencoded({extended: true}))\n  // app2.use(bodyParser.json())\n  // app2.use(express.static('public'))\n\n  app.get('/', (req, res) => {\n    db.collection('test').find().toArray().then(test => {\n      res.render({\n        test: test\n      }); //console.log(results)\n    }).catch(error => console.error(error));\n  }); // app2.get('/', (req, res) =>\n  // {\n  //     db.collection('cafe').find().toArray()\n  //     .then(cafe => {\n  //        res.render('index.ejs', {cafe: cafe})\n  //         //console.log(results)\n  //     })\n  //     .catch()\n  //    // res.render('index.ejs', {}); \n  //     //res.render(view, locals)\n  // })\n\n  app.post('/test', (req, res) => {\n    quotesCollection.insertOne(req.body).then(result => {\n      res.redirect('/');\n    }).catch(error => console.error(error));\n  }); // app2.post('/cafe', (req, res) =>\n  // {\n  //     quotesCollection2.insertOne(req.body)\n  //     .then(result => {\n  //         res.redirect('/')\n  //     })\n  // .catch(error => console.error(error))\n  // })\n  // app.put('/grocery', (req, res) => {\n  //     quotesCollection.findOneAndUpdate(\n  //         { name: 'Yoda' },\n  //         {\n  //           $set: {\n  //             name: req.body.name,\n  //             quote: req.body.quote\n  //           }\n  //         },\n  //         {\n  //           upsert: true\n  //         }\n  //       )\n  //         .then(result => {res.json('Success')})\n  //         .catch(error => console.error(error))\n  //   })\n\n  app.listen(9700, function () {\n    console.log('listening on 9700');\n  }); // app2.listen(4600, function()\n  // {\n  //   console.log('listening on 4600')\n  // })\n  // app.delete('/grocery', (req, res) => {\n  //     // Handle delete event here\n  //         Collection.deleteOne(\n  //           { name: req.body.name }\n  //         )\n  //           .then(result => {\n  //             if (result.deletedCount === 0) {\n  //                 return res.json('No quote to delete')\n  //               }\n  //             res.json(`Deleted Darth Vadar's quote`)\n  //           })\n  //           .catch(error => console.error(error))\n  //   })\n});\nexport default server;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/server.js"],"names":["Client","Status","require","express","bodyParser","app","MongoClient","connect","useUnifiedTopology","then","client","console","log","db","quotesCollection","collection","set","use","urlencoded","extended","json","static","get","req","res","find","toArray","test","render","catch","error","post","insertOne","body","result","redirect","listen","server"],"mappings":"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","sourcesContent":["//console.log('May Node be with you');\nconst {Client, Status} = require(\"@googlemaps/google-maps-services-js\");\nconst express = require('express');\nconst bodyParser = require('body-parser'); \nconst app = express()\n//const app2 = express()\nconst MongoClient = require('mongodb').MongoClient\n//const {Client, Status} = require(\"@googlemaps/google-maps-services-js\");\n// const axios = require(\"axios\")\n// const cheerio = require(\"cheerio\")\n\n\n\n// const Nightmare = require('nightmare');\n// const cheerio = require('cheerio');\n\n// const nightmare = Nightmare({show: true})\n// const url = 'https://nextdoor.com/search/?query=popular%20grocery%20stores&ccid=9441276D-736F-CC13-A629-78CB8E223879&ssid=cb148907-88b9-4fe1-b723-c1c94422b12f'\n\n// nightmare\n//     .goto(url)\n//     .wait('body')\n//     //.click('button._2AkmmA._29YdH8')\n//     //.type('input.LM6RPg', 'popular stores')\n//     //.click('button.vh79eN')\n//     //.wait('div.bhgxx2')\n//     .evaluate(() => document.querySelector('body').innerHTML)\n//     .end()\n//     .then(response => {\n//         console.log(getData(response));\n//     })\n//     .catch(err => {\n//         console.log(err); \n//     })\n\n\n//     let getData = html => {\n//         data = [];\n//         const $ = cheerio.load(html); \n//         $('div._1HmYoV._35HD7C:nth-child(2) div.bhgxx2.col-12-12').each((row,raw_element) =>\n//         {\n//             $(raw_element).find('div div div').each((i,elem) =>\n//             {\n//                 let title = $(elem).find('div div a:nth-child(2)').text();\n//                 let link = $(elem).find('div div a:nth-child(2)').attr('href');\n//                 if(title)\n//                 {\n//                     data.push({\n//                         title: title,\n//                         link: link\n//                     });\n//                 }\n//             });\n//         }\n//         );\n//         return data; \n//     }\n\n// const rp = require('request-promise');\n// const otcsv = require('objects-to-csv');\n// const cheerio = require('cheerio');\n\n// // const baseURL = 'https://nextdoor.com/news_feed/';\n// // const searchURL = '/search/?query=food&ccid=CE43D663-0CDC-3817-9A96-B10F0B09B5ED&ssid=a8980ced-dffe-455f-b5e1-8252bdaf8f42';\n\n// const baseURL = 'https://www.yellowpages.com/';\n// const searchURL = '/arlington-va/mip/whole-foods-market-11882672';\n\n// const getCompanies = async () => {\n//     const html = await rp(baseURL + searchURL);\n//     const businessMap = cheerio('a.email-business', html).map(async (i, e) => {\n//       const link = baseURL + e.attribs.href;\n//       const innerHtml = await rp(link);\n//       const emailAddress = cheerio('h2.address', innerHtml).prop('href');\n//       const name = e.children[0].data;\n//       const phone = cheerio('p.phone', innerHtml).text();\n  \n//       return {\n//        emailAddress,\n//         link,\n//         name,\n//         phone,\n//       }\n//     }).get();\n    \n//     return Promise.all(businessMap);\n    \n//   }; \n\n  \n//   //then(() => console.log(phone)); \n\n//   getCompanies()\n//   .then(result => {\n//     const transformed = new otcsv(result);\n//     return transformed.toDisk('./output.csv');\n     \n//   })\n \n//   .then(() => console.log('SUCCESSFULLY COMPLETED THE WEB SCRAPING SAMPLE'));\n\n\n\n\n\n\nMongoClient.connect('mongodb+srv://shambhavir:s8uxeaQZcw@S-Px@cluster0-xrzxq.mongodb.net/test?authSource=admin&replicaSet=Cluster0-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true', {useUnifiedTopology: true})\n.then(client => {\n    console.log('Connected to databse')\n    const db = client.db('star-wars-quotes')\n  \n    const quotesCollection = db.collection('test')\n    //const quotesCollection2 = db.collection('test')\n    //const quotesCollection3 = db.collection('park')\n\n    \n    app.set('view engine', 'ejs')\n    app.use(bodyParser.urlencoded({extended: true}))\n    app.use(bodyParser.json())\n    app.use(express.static('public'))\n\n    // app2.set('view engine', 'ejs')\n    // app2.use(bodyParser.urlencoded({extended: true}))\n    // app2.use(bodyParser.json())\n    // app2.use(express.static('public'))\n    \n    app.get('/', (req, res) =>\n    {\n        db.collection('test').find().toArray()\n        .then(test => {\n           res.render({test: test})\n            //console.log(results)\n        })\n\n \n        \n        .catch(error => console.error(error))\n\n    })\n\n    // app2.get('/', (req, res) =>\n    // {\n        \n    //     db.collection('cafe').find().toArray()\n    //     .then(cafe => {\n    //        res.render('index.ejs', {cafe: cafe})\n    //         //console.log(results)\n    //     })\n    //     .catch()\n    //    // res.render('index.ejs', {}); \n    //     //res.render(view, locals)\n    // })\n\n    app.post('/test', (req, res) =>\n    {\n        quotesCollection.insertOne(req.body)\n        .then(result => {\n            res.redirect('/')\n        })\n    .catch(error => console.error(error))\n    })\n\n    // app2.post('/cafe', (req, res) =>\n    // {\n    //     quotesCollection2.insertOne(req.body)\n    //     .then(result => {\n    //         res.redirect('/')\n    //     })\n    // .catch(error => console.error(error))\n    // })\n\n\n    // app.put('/grocery', (req, res) => {\n        \n    //     quotesCollection.findOneAndUpdate(\n    //         { name: 'Yoda' },\n    //         {\n    //           $set: {\n    //             name: req.body.name,\n    //             quote: req.body.quote\n    //           }\n    //         },\n    //         {\n    //           upsert: true\n    //         }\n    //       )\n    //         .then(result => {res.json('Success')})\n    //         .catch(error => console.error(error))\n    //   })\n\n    app.listen(9700, function()\n    {\n      console.log('listening on 9700')\n    })\n\n    // app2.listen(4600, function()\n    // {\n    //   console.log('listening on 4600')\n    // })\n\n\n    // app.delete('/grocery', (req, res) => {\n    //     // Handle delete event here\n       \n         \n            \n    //         Collection.deleteOne(\n    //           { name: req.body.name }\n    //         )\n    //           .then(result => {\n    //             if (result.deletedCount === 0) {\n    //                 return res.json('No quote to delete')\n    //               }\n    //             res.json(`Deleted Darth Vadar's quote`)\n    //           })\n    //           .catch(error => console.error(error))\n        \n    //   })\n})\n\n\nexport default server; "]},"metadata":{},"sourceType":"module"}