{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch3.js\";\nimport React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport InputForm from \"./shared/InputForm\";\nimport Grocery2 from \"./Grocery2\";\nconst SEARCH = gql`\n  query Search($match: String) {\n    grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n      name\n      address\n      id\n    }\n  }\n`;\n\nconst GrocerySearch3 = () => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const [search, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(SEARCH);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputForm, {\n    inputVal: inputVal,\n    onChange: e => setInputVal(e.target.value),\n    onSubmit: () => search({\n      variables: {\n        match: `%${inputVal}%`\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grocery2, {\n    newGrocery: data ? data.grocery : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GrocerySearch3;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/client/src/GrocerySearch3.js"],"names":["React","useState","useLazyQuery","gql","InputForm","Grocery2","SEARCH","GrocerySearch3","inputVal","setInputVal","search","loading","error","data","e","target","value","variables","match","grocery"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,gBAAlC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAGH,GAAI;;;;;;;;CAAnB;;AAUA,MAAMI,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAAS;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAT,IAAqCX,YAAY,CAACI,MAAD,CAAvD;AAEA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,IAAA,QAAQ,EAAE,MAAMN,MAAM,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAG,IAAGV,QAAS;AAAtB;AAAb,KAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAGK,IAAI,GAAGA,IAAI,CAACM,OAAR,GAAkB,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAjBD;;AAmBA,eAAeZ,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport InputForm from \"./shared/InputForm\";\nimport Grocery2 from \"./Grocery2\";\n\nconst SEARCH = gql`\n  query Search($match: String) {\n    grocery(order_by: { name: asc }, where: { name: { _ilike: $match } }) {\n      name\n      address\n      id\n    }\n  }\n`;\n\nconst GrocerySearch3 = () => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const [search, { loading, error, data }] = useLazyQuery(SEARCH);\n\n  if (loading) return <p>Loading ...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div>\n      <InputForm\n        inputVal={inputVal}\n        onChange={(e) => setInputVal(e.target.value)}\n        onSubmit={() => search({ variables: { match: `%${inputVal}%` } })}\n      />\n      <Grocery2 newGrocery ={data ? data.grocery : null} />\n    </div>\n  );\n};\n\nexport default GrocerySearch3;"]},"metadata":{},"sourceType":"module"}