{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js\";\nimport React, { useState } from 'react';\nimport { useSubscription, useMutation, gqp } from '@apollo/client';\nimport { List, ListIteam } from './shared/List';\nimport { Badge } from './shared/Badge';\nconst GROCERY = gql`\n{\n    subscription Grocery($id: String!)\n        grocery_by_pk(id: $id)\n        {\n            address\n            alias\n            display_phone\n            id\n            name\n            finrevs {\n                body\n                grid\n                    }\n        }\n}\n`;\n\nconst Groceries = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(PLANET, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  const {\n    name,\n    address,\n    finrev\n  } = data.grocery_by_pk;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, name, \" \", /*#__PURE__*/React.createElement(Badge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }\n  }, address)), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, finrev.map(finrev => /*#__PURE__*/React.createElement(ListItem, {\n    key: finrev.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, finrev.body))));\n};\n\nexport default Groceries;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js"],"names":["React","useState","useSubscription","useMutation","gqp","List","ListIteam","Badge","GROCERY","gql","Groceries","match","params","id","loading","error","data","PLANET","variables","name","address","finrev","grocery_by_pk","map","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,GAAtC,QAAgD,gBAAhD;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,eAA9B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAEA,MAAMC,OAAO,GAAGC,GACf;;;;;;;;;;;;;;;;CADD;;AAmBA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADQ,CAAD,KAIV;AACJ,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bd,eAAe,CAACe,MAAD,EAAS;AACvDC,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF;AAD4C,GAAT,CAAhD;AAIA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACf,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGT,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BL,IAAI,CAACM,aAAvC;AAEF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IADH,oBACS,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,OAAR,CADT,CADF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACE,GAAP,CAAYF,MAAD,iBACV,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAACR,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BQ,MAAM,CAACG,IAAlC,CADD,CADH,CANF,CADF;AAcD,CA7BD;;AA+BA,eAAed,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useSubscription, useMutation, gqp} from '@apollo/client';\nimport {List, ListIteam} from './shared/List';\nimport {Badge} from './shared/Badge';\n\nconst GROCERY = gql \n`\n{\n    subscription Grocery($id: String!)\n        grocery_by_pk(id: $id)\n        {\n            address\n            alias\n            display_phone\n            id\n            name\n            finrevs {\n                body\n                grid\n                    }\n        }\n}\n`;\n\nconst Groceries = ({\n    match: {\n      params: { id },\n    },\n  }) => {\n    const { loading, error, data } = useSubscription(PLANET, {\n      variables: { id },\n    });\n\n    if (loading) return <p>Loading ...</p>;\n  if (error) return <p>Error :(</p>;\n\n\n    const { name, address, finrev } = data.grocery_by_pk;\n\n  return (\n    <div>\n      <h3>\n        {name} <Badge>{address}</Badge>\n      </h3>\n      \n      \n      <List>\n        {finrev.map((finrev) => (\n          <ListItem key={finrev.id}>{finrev.body}</ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Groceries;"]},"metadata":{},"sourceType":"module"}