{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar CommandOperation = require('./command');\n\nvar defineAspects = require('./operation').defineAspects;\n/**\n * Get all the collection statistics.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n */\n\n\nvar StatsOperation = /*#__PURE__*/function (_CommandOperation) {\n  _inherits(StatsOperation, _CommandOperation);\n\n  var _super = _createSuper(StatsOperation);\n\n  /**\n   * Construct a Stats operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  function StatsOperation(collection, options) {\n    _classCallCheck(this, StatsOperation);\n\n    return _super.call(this, collection.s.db, options, collection);\n  }\n\n  _createClass(StatsOperation, [{\n    key: \"_buildCommand\",\n    value: function _buildCommand() {\n      var collection = this.collection;\n      var options = this.options; // Build command object\n\n      var command = {\n        collStats: collection.collectionName\n      }; // Check if we have the scale value\n\n      if (options['scale'] != null) {\n        command['scale'] = options['scale'];\n      }\n\n      return command;\n    }\n  }]);\n\n  return StatsOperation;\n}(CommandOperation);\n\ndefineAspects(StatsOperation, Aspect.READ_OPERATION);\nmodule.exports = StatsOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/stats.js"],"names":["Aspect","require","CommandOperation","defineAspects","StatsOperation","collection","options","s","db","command","collStats","collectionName","READ_OPERATION","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,IAAME,gBAAgB,GAAGD,OAAO,CAAC,WAAD,CAAhC;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;AAEA;;;;;;;;;IAOMC,c;;;;;AACJ;;;;;;AAMA,0BAAYC,UAAZ,EAAwBC,OAAxB,EAAiC;AAAA;;AAAA,6BACzBD,UAAU,CAACE,CAAX,CAAaC,EADY,EACRF,OADQ,EACCD,UADD;AAEhC;;;;oCAEe;AACd,UAAMA,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB,CAFc,CAId;;AACA,UAAMG,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAEL,UAAU,CAACM;AADR,OAAhB,CALc,CASd;;AACA,UAAIL,OAAO,CAAC,OAAD,CAAP,IAAoB,IAAxB,EAA8B;AAC5BG,QAAAA,OAAO,CAAC,OAAD,CAAP,GAAmBH,OAAO,CAAC,OAAD,CAA1B;AACD;;AAED,aAAOG,OAAP;AACD;;;;EA1B0BP,gB;;AA6B7BC,aAAa,CAACC,cAAD,EAAiBJ,MAAM,CAACY,cAAxB,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBV,cAAjB","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\n\n/**\n * Get all the collection statistics.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n */\nclass StatsOperation extends CommandOperation {\n  /**\n   * Construct a Stats operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  constructor(collection, options) {\n    super(collection.s.db, options, collection);\n  }\n\n  _buildCommand() {\n    const collection = this.collection;\n    const options = this.options;\n\n    // Build command object\n    const command = {\n      collStats: collection.collectionName\n    };\n\n    // Check if we have the scale value\n    if (options['scale'] != null) {\n      command['scale'] = options['scale'];\n    }\n\n    return command;\n  }\n}\n\ndefineAspects(StatsOperation, Aspect.READ_OPERATION);\n\nmodule.exports = StatsOperation;\n"]},"metadata":{},"sourceType":"script"}