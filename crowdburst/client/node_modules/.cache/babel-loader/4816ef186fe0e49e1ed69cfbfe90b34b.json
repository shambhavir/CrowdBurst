{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js\";\nimport React, { useState } from 'react';\nimport { useSubscription, useMutation, gql, useLazyQuery } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\nimport { List, ListItem } from './shared/List'; // import {Badge} from './shared/Badge';\n\nimport InputForm from './InputForm'; // const GROCERY = gql \n// `\n//     subscription Grocery($id: String!)\n//     {\n//         grocery_by_pk(id: $id)\n//         {\n//             address\n//             alias\n//             display_phone\n//             id\n//             name\n//             finrevs {\n//                 body\n//                 grid\n//                     }\n//         }\n//     }\n// `;\n\nconst GROCERY = gql`\n\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n  \n\n`; // const ADD_REVIEW = gql`\n//   mutation($body: String!, $id: uuid!) {\n//     AddFearlessReview(body: $body, id: $id) {\n//       affected_rows\n//     }\n//   }\n// `;\n\nconst Groceries = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GROCERY, {\n    variables: {\n      id\n    }\n  }); //const [inputVal, setInputVal] = useState(\"\");\n  // const { loading, error, data } = useSubscription(GROCERY, {\n  //   variables: { id },\n  // });\n  // const [addReview] = useMutation(ADD_REVIEW);\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Loading ...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  const {\n    name,\n    address,\n    finrevs\n  } = data.grocery_by_pk;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, alias, \" \", address), /*#__PURE__*/React.createElement(InputForm // inputVal={inputVal}\n  // onChange={(e) => setInputVal(e.target.value)}\n  // onSubmit={() => {\n  //   addReview({ variables: { id, body: inputVal } })\n  //     .then(() => setInputVal(\"\"))\n  //     .catch((e) => {\n  //       setInputVal(e.message);\n  //     })\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, finrevs.map(finrevs => /*#__PURE__*/React.createElement(ListItem, {\n    key: finrevs.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, finrevs.body))));\n};\n\nexport default Groceries;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js"],"names":["React","useState","useSubscription","useMutation","gql","useLazyQuery","useQuery","List","ListItem","InputForm","GROCERY","Groceries","match","params","id","loading","error","data","variables","name","address","finrevs","grocery_by_pk","alias","map","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,GAAtC,EAA2CC,YAA3C,QAA8D,gBAA9D;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,OAAO,GAAGN,GACf;;;;;;;;;;;;;;;CADD,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,SAAS,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH;AADQ,CAAD,KAIV;AACJ,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBX,QAAQ,CAACI,OAAD,EAAU;AAACQ,IAAAA,SAAS,EAAE;AAACJ,MAAAA;AAAD;AAAZ,GAAV,CAAvC,CADI,CAEN;AACA;AACA;AACA;AACA;;AAEE,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGX,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BJ,IAAI,CAACK,aAAxC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,OACWH,OADX,CADF,eAIE,oBAAC,SAAD,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAcE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACG,GAAR,CAAaH,OAAD,iBACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BO,OAAO,CAACI,IAApC,CADD,CADH,CAdF,CADJ;AAsBC,CAxCL;;AA0CA,eAAed,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useSubscription, useMutation, gql, useLazyQuery} from '@apollo/client';\nimport {useQuery} from '@apollo/client'; \nimport {List, ListItem} from './shared/List';\n// import {Badge} from './shared/Badge';\nimport InputForm from './InputForm'; \n\n\n// const GROCERY = gql \n// `\n\n//     subscription Grocery($id: String!)\n//     {\n//         grocery_by_pk(id: $id)\n//         {\n//             address\n//             alias\n//             display_phone\n//             id\n//             name\n//             finrevs {\n//                 body\n//                 grid\n//                     }\n//         }\n//     }\n\n// `;\n\n\nconst GROCERY = gql \n`\n\nquery MyQuery($id: String!) {\n  grocery_by_pk(id: $id) {\n    address\n    name\n    id\n    finrevs {\n      body\n      grid\n    }\n  }\n}\n  \n\n`;\n\n\n// const ADD_REVIEW = gql`\n//   mutation($body: String!, $id: uuid!) {\n//     AddFearlessReview(body: $body, id: $id) {\n//       affected_rows\n//     }\n//   }\n// `;\n\nconst Groceries = ({\n    match: {\n      params: { id },\n    },\n  }) => {\n    const {loading, error, data} = useQuery(GROCERY, {variables: {id}}); \n  //const [inputVal, setInputVal] = useState(\"\");\n  // const { loading, error, data } = useSubscription(GROCERY, {\n  //   variables: { id },\n  // });\n  // const [addReview] = useMutation(ADD_REVIEW);\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error :(</p>;\n\n\n    const { name, address, finrevs } = data.grocery_by_pk;\n\n    return (\n        <div>\n          <h3>\n            {alias} {address}\n          </h3>\n          <InputForm\n            // inputVal={inputVal}\n            // onChange={(e) => setInputVal(e.target.value)}\n            // onSubmit={() => {\n            //   addReview({ variables: { id, body: inputVal } })\n            //     .then(() => setInputVal(\"\"))\n            //     .catch((e) => {\n            //       setInputVal(e.message);\n            //     })\n          />\n          <List>\n            {finrevs.map((finrevs) => (\n              <ListItem key={finrevs.id}>{finrevs.body}</ListItem>\n            ))}\n          </List>\n        </div>\n      );\n    };\n\nexport default Groceries;"]},"metadata":{},"sourceType":"module"}