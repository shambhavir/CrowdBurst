{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Form.js\";\nimport React, { Component } from 'react'; // const add = () =>  {\n//     // Prevent button click from submitting form\n//     // addItem(e)\n//     // e.preventDefault();\n//     // Create variables for our list, the item to add, and our form\n//     let list = this.state.list;\n//     const newItem = document.getElementById(\"addInput\");\n//     const form = document.getElementById(\"addItemForm\");\n//     // If our input has a value\n//     if (newItem.value !== \"\") {\n//       // Add the new item to the end of our list array\n//       list.push(newItem.value);\n//       // Then we use that to set the state for list\n//       this.setState({\n//         list: list\n//       });\n//       // Finally, we need to reset the form\n//       newItem.classList.remove(\"is-danger\");\n//       form.reset();\n//     } else {\n//       // If the input doesn't have a value, make the border red since it's required\n//       newItem.classList.add(\"is-danger\");\n//     }\n//   }\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cats: [{\n        name: \"\",\n        age: \"\"\n      }],\n      owner: \"\",\n      description: \"\"\n    };\n\n    this.handleChange = e => {\n      if ([\"name\", \"age\"].includes(e.target.className)) {\n        let cats = [...this.state.cats];\n        cats[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase();\n        this.setState({\n          cats\n        }, () => console.log(this.state.cats));\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value.toUpperCase()\n        });\n      }\n    };\n\n    this.addCat = e => {\n      this.setState(prevState => ({\n        cats: [...prevState.cats, {\n          name: \"\",\n          age: \"\"\n        }]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      owner,\n      description,\n      cats\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Owner\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"owner\",\n      id: \"owner\",\n      value: owner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Add new cat\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    })) // <form>\n    //     <label htmlFor = \"Grocery Store\">Add Grocery Store</label>\n    //     <input type = \"text\" name = \"Grocery Store\" id=\"Grocery Store\"/>\n    //     <button>Add</button>\n    //     <input type = \"submit\" value = \"Submit\"/>\n    // </form>\n    // <button className=\"button is-info\">\n    //     Add Grocery Store\n    // </button>\n    ;\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Form.js"],"names":["React","Component","Form","state","cats","name","age","owner","description","handleChange","e","includes","target","className","dataset","id","value","toUpperCase","setState","console","log","addCat","prevState","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n\n// const add = () =>  {\n//     // Prevent button click from submitting form\n//     // addItem(e)\n//     // e.preventDefault();\n\n//     // Create variables for our list, the item to add, and our form\n//     let list = this.state.list;\n//     const newItem = document.getElementById(\"addInput\");\n//     const form = document.getElementById(\"addItemForm\");\n\n//     // If our input has a value\n//     if (newItem.value !== \"\") {\n//       // Add the new item to the end of our list array\n//       list.push(newItem.value);\n//       // Then we use that to set the state for list\n//       this.setState({\n//         list: list\n//       });\n//       // Finally, we need to reset the form\n//       newItem.classList.remove(\"is-danger\");\n//       form.reset();\n//     } else {\n//       // If the input doesn't have a value, make the border red since it's required\n//       newItem.classList.add(\"is-danger\");\n//     }\n//   }\n\nclass Form extends React.Component {\n    \n    state = {\n        cats: [{name:\"\", age:\"\"}],\n        owner: \"\",\n        description: \"\"\n      }\n\n      handleChange = (e) => {\n        if ([\"name\", \"age\"].includes(e.target.className) ) {\n          let cats = [...this.state.cats]\n          cats[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase()\n          this.setState({ cats }, () => console.log(this.state.cats))\n        } else {\n          this.setState({ [e.target.name]: e.target.value.toUpperCase() })\n        }\n      }\n\n      addCat = (e) => {\n        this.setState((prevState) => ({\n          cats: [...prevState.cats, {name:\"\", age:\"\"}],\n        }));\n      }\n    handleSubmit = (e) => { e.preventDefault() }\n    render() {\n        let {owner, description, cats} = this.state\n    return(\n        <form onSubmit={this.handleSubmit} onChange={this.handleChange} >\n        <label htmlFor=\"name\">Owner</label> \n        <input type=\"text\" name=\"owner\" id=\"owner\" value={owner} />\n        <label htmlFor=\"description\">Description</label> \n        <input type=\"text\" name=\"description\" id=\"description\" value={description} />\n        <button onClick={this.addCat}>Add new cat</button>\n        <input type=\"submit\" value=\"Submit\" /> \n      </form>\n        \n        // <form>\n\n\n        //     <label htmlFor = \"Grocery Store\">Add Grocery Store</label>\n        //     <input type = \"text\" name = \"Grocery Store\" id=\"Grocery Store\"/>\n        //     <button>Add</button>\n        //     <input type = \"submit\" value = \"Submit\"/>\n        // </form>\n                    \n                            // <button className=\"button is-info\">\n                            //     Add Grocery Store\n                            // </button>\n                      \n    \n    \n    )\n}\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}