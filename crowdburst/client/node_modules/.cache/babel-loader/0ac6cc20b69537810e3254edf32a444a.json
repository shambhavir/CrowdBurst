{"ast":null,"code":"import { fromByteArray, toByteArray } from \"base64-js\";\nexport function base64Decode(str) {\n  var unevenBytes = str.length % 4;\n  var strToDecode;\n\n  if (unevenBytes != 0) {\n    var paddingNeeded = 4 - unevenBytes;\n    strToDecode = str + \"=\".repeat(paddingNeeded);\n  } else {\n    strToDecode = str;\n  }\n\n  var bytes = toByteArray(strToDecode);\n  return utf8Slice(bytes, 0, bytes.length);\n}\nexport function base64Encode(str) {\n  var result;\n\n  if (\"undefined\" === typeof Uint8Array) {\n    result = utf8ToBytes(str);\n  }\n\n  result = new Uint8Array(utf8ToBytes(str));\n  return fromByteArray(result);\n}\n\nfunction utf8ToBytes(string) {\n  var units = Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  var i = 0;\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i);\n\n    if (codePoint > 0xd7ff && codePoint < 0xe000) {\n      if (leadSurrogate) {\n        if (codePoint < 0xdc00) {\n          if ((units -= 3) > -1) {\n            bytes.push(0xef, 0xbf, 0xbd);\n          }\n\n          leadSurrogate = codePoint;\n          continue;\n        } else {\n          codePoint = leadSurrogate - 0xd800 << 10 | codePoint - 0xdc00 | 0x10000;\n          leadSurrogate = null;\n        }\n      } else {\n        if (codePoint > 0xdbff) {\n          if ((units -= 3) > -1) {\n            bytes.push(0xef, 0xbf, 0xbd);\n          }\n\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1) {\n            bytes.push(0xef, 0xbf, 0xbd);\n          }\n\n          continue;\n        } else {\n          leadSurrogate = codePoint;\n          continue;\n        }\n      }\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1) {\n        bytes.push(0xef, 0xbf, 0xbd);\n      }\n\n      leadSurrogate = null;\n    }\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) {\n        break;\n      }\n\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) {\n        break;\n      }\n\n      bytes.push(codePoint >> 0x6 | 0xc0, codePoint & 0x3f | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) {\n        break;\n      }\n\n      bytes.push(codePoint >> 0xc | 0xe0, codePoint >> 0x6 & 0x3f | 0x80, codePoint & 0x3f | 0x80);\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) {\n        break;\n      }\n\n      bytes.push(codePoint >> 0x12 | 0xf0, codePoint >> 0xc & 0x3f | 0x80, codePoint >> 0x6 & 0x3f | 0x80, codePoint & 0x3f | 0x80);\n    } else {\n      throw new Error(\"Invalid code point\");\n    }\n  }\n\n  return bytes;\n}\n\nexport function utf8Slice(buf, start, end) {\n  var res = \"\";\n  var tmp = \"\";\n  end = Math.min(buf.length, end || Infinity);\n  start = start || 0;\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7f) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n      tmp = \"\";\n    } else {\n      tmp += \"%\" + buf[i].toString(16);\n    }\n  }\n\n  return res + decodeUtf8Char(tmp);\n}\n\nfunction decodeUtf8Char(str) {\n  try {\n    return decodeURIComponent(str);\n  } catch (err) {\n    return String.fromCharCode(0xfffd);\n  }\n}","map":{"version":3,"sources":["../../../../src/internal/common/Base64.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { fromByteArray, toByteArray } from \"base64-js\";\nexport function base64Decode(str) {\n    var unevenBytes = str.length % 4;\n    var strToDecode;\n    if (unevenBytes != 0) {\n        var paddingNeeded = 4 - unevenBytes;\n        strToDecode = str + \"=\".repeat(paddingNeeded);\n    }\n    else {\n        strToDecode = str;\n    }\n    var bytes = toByteArray(strToDecode);\n    return utf8Slice(bytes, 0, bytes.length);\n}\nexport function base64Encode(str) {\n    var result;\n    if (\"undefined\" === typeof Uint8Array) {\n        result = utf8ToBytes(str);\n    }\n    result = new Uint8Array(utf8ToBytes(str));\n    return fromByteArray(result);\n}\nfunction utf8ToBytes(string) {\n    var units = Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    var i = 0;\n    for (; i < length; i++) {\n        codePoint = string.charCodeAt(i);\n        if (codePoint > 0xd7ff && codePoint < 0xe000) {\n            if (leadSurrogate) {\n                if (codePoint < 0xdc00) {\n                    if ((units -= 3) > -1) {\n                        bytes.push(0xef, 0xbf, 0xbd);\n                    }\n                    leadSurrogate = codePoint;\n                    continue;\n                }\n                else {\n                    codePoint =\n                        ((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00) | 0x10000;\n                    leadSurrogate = null;\n                }\n            }\n            else {\n                if (codePoint > 0xdbff) {\n                    if ((units -= 3) > -1) {\n                        bytes.push(0xef, 0xbf, 0xbd);\n                    }\n                    continue;\n                }\n                else if (i + 1 === length) {\n                    if ((units -= 3) > -1) {\n                        bytes.push(0xef, 0xbf, 0xbd);\n                    }\n                    continue;\n                }\n                else {\n                    leadSurrogate = codePoint;\n                    continue;\n                }\n            }\n        }\n        else if (leadSurrogate) {\n            if ((units -= 3) > -1) {\n                bytes.push(0xef, 0xbf, 0xbd);\n            }\n            leadSurrogate = null;\n        }\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) {\n                break;\n            }\n            bytes.push(codePoint);\n        }\n        else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) {\n                break;\n            }\n            bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) {\n                break;\n            }\n            bytes.push((codePoint >> 0xc) | 0xe0, ((codePoint >> 0x6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint < 0x200000) {\n            if ((units -= 4) < 0) {\n                break;\n            }\n            bytes.push((codePoint >> 0x12) | 0xf0, ((codePoint >> 0xc) & 0x3f) | 0x80, ((codePoint >> 0x6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else {\n            throw new Error(\"Invalid code point\");\n        }\n    }\n    return bytes;\n}\nexport function utf8Slice(buf, start, end) {\n    var res = \"\";\n    var tmp = \"\";\n    end = Math.min(buf.length, end || Infinity);\n    start = start || 0;\n    for (var i = start; i < end; i++) {\n        if (buf[i] <= 0x7f) {\n            res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n            tmp = \"\";\n        }\n        else {\n            tmp += \"%\" + buf[i].toString(16);\n        }\n    }\n    return res + decodeUtf8Char(tmp);\n}\nfunction decodeUtf8Char(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (err) {\n        return String.fromCharCode(0xfffd);\n    }\n}\n//# sourceMappingURL=Base64.js.map"]},"metadata":{},"sourceType":"module"}