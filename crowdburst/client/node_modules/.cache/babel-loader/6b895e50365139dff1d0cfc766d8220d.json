{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar CommandOperationV2 = require('./command_v2');\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nvar ListDatabasesOperation = /*#__PURE__*/function (_CommandOperationV) {\n  _inherits(ListDatabasesOperation, _CommandOperationV);\n\n  var _super = _createSuper(ListDatabasesOperation);\n\n  function ListDatabasesOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, ListDatabasesOperation);\n\n    _this = _super.call(this, db, options);\n    _this.ns = new MongoDBNamespace('admin', '$cmd');\n    return _this;\n  }\n\n  _createClass(ListDatabasesOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      var cmd = {\n        listDatabases: 1\n      };\n\n      if (this.options.nameOnly) {\n        cmd.nameOnly = Number(cmd.nameOnly);\n      }\n\n      if (this.options.filter) {\n        cmd.filter = this.options.filter;\n      }\n\n      if (typeof this.options.authorizedDatabases === 'boolean') {\n        cmd.authorizedDatabases = this.options.authorizedDatabases;\n      }\n\n      _get(_getPrototypeOf(ListDatabasesOperation.prototype), \"executeCommand\", this).call(this, server, cmd, callback);\n    }\n  }]);\n\n  return ListDatabasesOperation;\n}(CommandOperationV2);\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ListDatabasesOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/list_databases.js"],"names":["CommandOperationV2","require","Aspect","defineAspects","MongoDBNamespace","ListDatabasesOperation","db","options","ns","server","callback","cmd","listDatabases","nameOnly","Number","filter","authorizedDatabases","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,GAAGC,OAAO,CAAC,cAAD,CAAlC;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AACA,IAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AACA,IAAMC,gBAAgB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,gBAA7C;;IAEMC,sB;;;;;AACJ,kCAAYC,EAAZ,EAAgBC,OAAhB,EAAyB;AAAA;;AAAA;;AACvB,8BAAMD,EAAN,EAAUC,OAAV;AACA,UAAKC,EAAL,GAAU,IAAIJ,gBAAJ,CAAqB,OAArB,EAA8B,MAA9B,CAAV;AAFuB;AAGxB;;;;4BAEOK,M,EAAQC,Q,EAAU;AACxB,UAAMC,GAAG,GAAG;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAZ;;AACA,UAAI,KAAKL,OAAL,CAAaM,QAAjB,EAA2B;AACzBF,QAAAA,GAAG,CAACE,QAAJ,GAAeC,MAAM,CAACH,GAAG,CAACE,QAAL,CAArB;AACD;;AAED,UAAI,KAAKN,OAAL,CAAaQ,MAAjB,EAAyB;AACvBJ,QAAAA,GAAG,CAACI,MAAJ,GAAa,KAAKR,OAAL,CAAaQ,MAA1B;AACD;;AAED,UAAI,OAAO,KAAKR,OAAL,CAAaS,mBAApB,KAA4C,SAAhD,EAA2D;AACzDL,QAAAA,GAAG,CAACK,mBAAJ,GAA0B,KAAKT,OAAL,CAAaS,mBAAvC;AACD;;AAED,iGAAqBP,MAArB,EAA6BE,GAA7B,EAAkCD,QAAlC;AACD;;;;EArBkCV,kB;;AAwBrCG,aAAa,CAACE,sBAAD,EAAyB,CACpCH,MAAM,CAACe,cAD6B,EAEpCf,MAAM,CAACgB,SAF6B,EAGpChB,MAAM,CAACiB,sBAH6B,CAAzB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBhB,sBAAjB","sourcesContent":["'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nclass ListDatabasesOperation extends CommandOperationV2 {\n  constructor(db, options) {\n    super(db, options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server, callback) {\n    const cmd = { listDatabases: 1 };\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    super.executeCommand(server, cmd, callback);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListDatabasesOperation;\n"]},"metadata":{},"sourceType":"script"}