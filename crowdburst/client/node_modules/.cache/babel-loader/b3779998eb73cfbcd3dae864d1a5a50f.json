{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar CommandOperation = require('./command');\n\nvar levelValues = new Set(['off', 'slow_only', 'all']);\n\nvar SetProfilingLevelOperation = /*#__PURE__*/function (_CommandOperation) {\n  _inherits(SetProfilingLevelOperation, _CommandOperation);\n\n  var _super = _createSuper(SetProfilingLevelOperation);\n\n  function SetProfilingLevelOperation(db, level, options) {\n    var _this;\n\n    _classCallCheck(this, SetProfilingLevelOperation);\n\n    var profile = 0;\n\n    if (level === 'off') {\n      profile = 0;\n    } else if (level === 'slow_only') {\n      profile = 1;\n    } else if (level === 'all') {\n      profile = 2;\n    }\n\n    _this = _super.call(this, db, options);\n    _this.level = level;\n    _this.profile = profile;\n    return _this;\n  }\n\n  _createClass(SetProfilingLevelOperation, [{\n    key: \"_buildCommand\",\n    value: function _buildCommand() {\n      var profile = this.profile; // Set up the profile number\n\n      var command = {\n        profile: profile\n      };\n      return command;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(callback) {\n      var level = this.level;\n\n      if (!levelValues.has(level)) {\n        return callback(new Error('Error: illegal profiling level value ' + level));\n      }\n\n      _get(_getPrototypeOf(SetProfilingLevelOperation.prototype), \"execute\", this).call(this, function (err, doc) {\n        if (err == null && doc.ok === 1) return callback(null, level);\n        return err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n      });\n    }\n  }]);\n\n  return SetProfilingLevelOperation;\n}(CommandOperation);\n\nmodule.exports = SetProfilingLevelOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/set_profiling_level.js"],"names":["CommandOperation","require","levelValues","Set","SetProfilingLevelOperation","db","level","options","profile","command","callback","has","Error","err","doc","ok","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,WAAD,CAAhC;;AACA,IAAMC,WAAW,GAAG,IAAIC,GAAJ,CAAQ,CAAC,KAAD,EAAQ,WAAR,EAAqB,KAArB,CAAR,CAApB;;IAEMC,0B;;;;;AACJ,sCAAYC,EAAZ,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAAA;;AAAA;;AAC9B,QAAIC,OAAO,GAAG,CAAd;;AAEA,QAAIF,KAAK,KAAK,KAAd,EAAqB;AACnBE,MAAAA,OAAO,GAAG,CAAV;AACD,KAFD,MAEO,IAAIF,KAAK,KAAK,WAAd,EAA2B;AAChCE,MAAAA,OAAO,GAAG,CAAV;AACD,KAFM,MAEA,IAAIF,KAAK,KAAK,KAAd,EAAqB;AAC1BE,MAAAA,OAAO,GAAG,CAAV;AACD;;AAED,8BAAMH,EAAN,EAAUE,OAAV;AACA,UAAKD,KAAL,GAAaA,KAAb;AACA,UAAKE,OAAL,GAAeA,OAAf;AAb8B;AAc/B;;;;oCAEe;AACd,UAAMA,OAAO,GAAG,KAAKA,OAArB,CADc,CAGd;;AACA,UAAMC,OAAO,GAAG;AAAED,QAAAA,OAAO,EAAPA;AAAF,OAAhB;AAEA,aAAOC,OAAP;AACD;;;4BAEOC,Q,EAAU;AAChB,UAAMJ,KAAK,GAAG,KAAKA,KAAnB;;AAEA,UAAI,CAACJ,WAAW,CAACS,GAAZ,CAAgBL,KAAhB,CAAL,EAA6B;AAC3B,eAAOI,QAAQ,CAAC,IAAIE,KAAJ,CAAU,0CAA0CN,KAApD,CAAD,CAAf;AACD;;AAED,8FAAc,UAACO,GAAD,EAAMC,GAAN,EAAc;AAC1B,YAAID,GAAG,IAAI,IAAP,IAAeC,GAAG,CAACC,EAAJ,KAAW,CAA9B,EAAiC,OAAOL,QAAQ,CAAC,IAAD,EAAOJ,KAAP,CAAf;AACjC,eAAOO,GAAG,IAAI,IAAP,GACHH,QAAQ,CAACG,GAAD,EAAM,IAAN,CADL,GAEHH,QAAQ,CAAC,IAAIE,KAAJ,CAAU,4BAAV,CAAD,EAA0C,IAA1C,CAFZ;AAGD,OALD;AAMD;;;;EAvCsCZ,gB;;AA0CzCgB,MAAM,CAACC,OAAP,GAAiBb,0BAAjB","sourcesContent":["'use strict';\n\nconst CommandOperation = require('./command');\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n\nclass SetProfilingLevelOperation extends CommandOperation {\n  constructor(db, level, options) {\n    let profile = 0;\n\n    if (level === 'off') {\n      profile = 0;\n    } else if (level === 'slow_only') {\n      profile = 1;\n    } else if (level === 'all') {\n      profile = 2;\n    }\n\n    super(db, options);\n    this.level = level;\n    this.profile = profile;\n  }\n\n  _buildCommand() {\n    const profile = this.profile;\n\n    // Set up the profile number\n    const command = { profile };\n\n    return command;\n  }\n\n  execute(callback) {\n    const level = this.level;\n\n    if (!levelValues.has(level)) {\n      return callback(new Error('Error: illegal profiling level value ' + level));\n    }\n\n    super.execute((err, doc) => {\n      if (err == null && doc.ok === 1) return callback(null, level);\n      return err != null\n        ? callback(err, null)\n        : callback(new Error('Error with profile command'), null);\n    });\n  }\n}\n\nmodule.exports = SetProfilingLevelOperation;\n"]},"metadata":{},"sourceType":"script"}