{"ast":null,"code":"// import React, {useState} from 'react';\n// import {useSubscription, useMutation, gql, useLazyQuery} from '@apollo/client';\n// import {useQuery} from '@apollo/client'; \n// import {List, ListItem} from './shared/List';\n// import InputForm from './InputForm'; \n// const IHATECODE = gql \n// `\n// query MyQuery($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     name\n//     id\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n// `;\n// const Groceries = ({\n//     match: {\n//       params: { id },\n//     },\n//   }) => {\n//     const {loading, error, data} = useQuery(IHATECODE, {variables: {id}}); \n//     if (loading) return <p>Loading ...</p>;\n//     if (error) return <p>Error :(</p>;\n//     const { name, address, finrevs } = data.grocery_by_pk;\n//     return (\n//         <div>\n//           <h3>\n//             {name} {address}\n//           </h3>\n//           <List>\n//             {finrevs.map((finrevs) => (\n//               <ListItem key={finrevs.id}>{finrevs.body}</ListItem>\n//             ))}\n//           </List>\n//         </div>\n//       );\n//     };\n// export default Groceries;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/Components/Groceries.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, {useState} from 'react';\n// import {useSubscription, useMutation, gql, useLazyQuery} from '@apollo/client';\n// import {useQuery} from '@apollo/client'; \n// import {List, ListItem} from './shared/List';\n// import InputForm from './InputForm'; \n\n\n\n// const IHATECODE = gql \n// `\n\n// query MyQuery($id: String!) {\n//   grocery_by_pk(id: $id) {\n//     address\n//     name\n//     id\n//     finrevs {\n//       body\n//       grid\n//     }\n//   }\n// }\n  \n\n// `;\n\n\n\n\n// const Groceries = ({\n//     match: {\n//       params: { id },\n//     },\n//   }) => {\n//     const {loading, error, data} = useQuery(IHATECODE, {variables: {id}}); \n\n//     if (loading) return <p>Loading ...</p>;\n//     if (error) return <p>Error :(</p>;\n\n\n//     const { name, address, finrevs } = data.grocery_by_pk;\n\n//     return (\n//         <div>\n//           <h3>\n//             {name} {address}\n//           </h3>\n//           <List>\n//             {finrevs.map((finrevs) => (\n//               <ListItem key={finrevs.id}>{finrevs.body}</ListItem>\n//             ))}\n//           </List>\n//         </div>\n//       );\n//     };\n\n// export default Groceries;"]},"metadata":{},"sourceType":"module"}