{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar CommandOperation = require('./command');\n\nvar applyWriteConcern = require('../utils').applyWriteConcern;\n\nvar handleCallback = require('../utils').handleCallback;\n\nvar loadCollection = require('../dynamic_loaders').loadCollection;\n\nvar MongoError = require('../core').MongoError;\n\nvar ReadPreference = require('../core').ReadPreference; // Filter out any write concern options\n\n\nvar illegalCommandFields = ['w', 'wtimeout', 'j', 'fsync', 'autoIndexId', 'strict', 'serializeFunctions', 'pkFactory', 'raw', 'readPreference', 'session', 'readConcern', 'writeConcern'];\n\nvar CreateCollectionOperation = /*#__PURE__*/function (_CommandOperation) {\n  _inherits(CreateCollectionOperation, _CommandOperation);\n\n  var _super = _createSuper(CreateCollectionOperation);\n\n  function CreateCollectionOperation(db, name, options) {\n    var _this;\n\n    _classCallCheck(this, CreateCollectionOperation);\n\n    _this = _super.call(this, db, options);\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(CreateCollectionOperation, [{\n    key: \"_buildCommand\",\n    value: function _buildCommand() {\n      var name = this.name;\n      var options = this.options; // Create collection command\n\n      var cmd = {\n        create: name\n      }; // Add all optional parameters\n\n      for (var n in options) {\n        if (options[n] != null && typeof options[n] !== 'function' && illegalCommandFields.indexOf(n) === -1) {\n          cmd[n] = options[n];\n        }\n      }\n\n      return cmd;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(callback) {\n      var _this2 = this;\n\n      var db = this.db;\n      var name = this.name;\n      var options = this.options;\n      var Collection = loadCollection(); // Did the user destroy the topology\n\n      if (db.serverConfig && db.serverConfig.isDestroyed()) {\n        return callback(new MongoError('topology was destroyed'));\n      }\n\n      var listCollectionOptions = Object.assign({}, options, {\n        nameOnly: true\n      });\n      listCollectionOptions = applyWriteConcern(listCollectionOptions, {\n        db: db\n      }, listCollectionOptions); // Check if we have the name\n\n      db.listCollections({\n        name: name\n      }, listCollectionOptions).setReadPreference(ReadPreference.PRIMARY).toArray(function (err, collections) {\n        if (err != null) return handleCallback(callback, err, null);\n\n        if (collections.length > 0 && listCollectionOptions.strict) {\n          return handleCallback(callback, MongoError.create({\n            message: \"Collection \".concat(name, \" already exists. Currently in strict mode.\"),\n            driver: true\n          }), null);\n        } else if (collections.length > 0) {\n          try {\n            return handleCallback(callback, null, new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options));\n          } catch (err) {\n            return handleCallback(callback, err);\n          }\n        } // Execute command\n\n\n        _get(_getPrototypeOf(CreateCollectionOperation.prototype), \"execute\", _this2).call(_this2, function (err) {\n          if (err) return handleCallback(callback, err);\n\n          try {\n            return handleCallback(callback, null, new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options));\n          } catch (err) {\n            return handleCallback(callback, err);\n          }\n        });\n      });\n    }\n  }]);\n\n  return CreateCollectionOperation;\n}(CommandOperation);\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\nmodule.exports = CreateCollectionOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/create_collection.js"],"names":["Aspect","require","defineAspects","CommandOperation","applyWriteConcern","handleCallback","loadCollection","MongoError","ReadPreference","illegalCommandFields","CreateCollectionOperation","db","name","options","cmd","create","n","indexOf","callback","Collection","serverConfig","isDestroyed","listCollectionOptions","Object","assign","nameOnly","listCollections","setReadPreference","PRIMARY","toArray","err","collections","length","strict","message","driver","s","topology","databaseName","pkFactory","WRITE_OPERATION","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperation = require('./command');\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst handleCallback = require('../utils').handleCallback;\nconst loadCollection = require('../dynamic_loaders').loadCollection;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\n\n// Filter out any write concern options\nconst illegalCommandFields = [\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'strict',\n  'serializeFunctions',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern'\n];\n\nclass CreateCollectionOperation extends CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n\n    this.name = name;\n  }\n\n  _buildCommand() {\n    const name = this.name;\n    const options = this.options;\n\n    // Create collection command\n    const cmd = { create: name };\n    // Add all optional parameters\n    for (let n in options) {\n      if (\n        options[n] != null &&\n        typeof options[n] !== 'function' &&\n        illegalCommandFields.indexOf(n) === -1\n      ) {\n        cmd[n] = options[n];\n      }\n    }\n\n    return cmd;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    let Collection = loadCollection();\n\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    let listCollectionOptions = Object.assign({}, options, { nameOnly: true });\n    listCollectionOptions = applyWriteConcern(listCollectionOptions, { db }, listCollectionOptions);\n\n    // Check if we have the name\n    db.listCollections({ name }, listCollectionOptions)\n      .setReadPreference(ReadPreference.PRIMARY)\n      .toArray((err, collections) => {\n        if (err != null) return handleCallback(callback, err, null);\n        if (collections.length > 0 && listCollectionOptions.strict) {\n          return handleCallback(\n            callback,\n            MongoError.create({\n              message: `Collection ${name} already exists. Currently in strict mode.`,\n              driver: true\n            }),\n            null\n          );\n        } else if (collections.length > 0) {\n          try {\n            return handleCallback(\n              callback,\n              null,\n              new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options)\n            );\n          } catch (err) {\n            return handleCallback(callback, err);\n          }\n        }\n\n        // Execute command\n        super.execute(err => {\n          if (err) return handleCallback(callback, err);\n\n          try {\n            return handleCallback(\n              callback,\n              null,\n              new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options)\n            );\n          } catch (err) {\n            return handleCallback(callback, err);\n          }\n        });\n      });\n  }\n}\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = CreateCollectionOperation;\n"]},"metadata":{},"sourceType":"script"}