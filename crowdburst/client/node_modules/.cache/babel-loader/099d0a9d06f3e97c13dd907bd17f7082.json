{"ast":null,"code":"var _jsxFileName = \"/Users/S/Desktop/nodeprotake2/crowdburst/src/index.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport Grocery from \"./Components/Grocery\";\nimport Search from './Components/Search'; //import { render } from 'ejs';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://crowdburst.herokuapp.com/v1/graphql'\n  })\n}); // const App = () => (\n//   <ApolloProvider client = {client}>\n//     {/* <div>\n//       <h2>My first React App</h2>\n//     </div> */}\n//     <Search/>\n//     <Grocery/>\n//   </ApolloProvider>\n// ); \n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [/*#__PURE__*/React.createElement(ApolloProvider, {\n        client: client,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"app\"), /*#__PURE__*/React.createElement(Grocery, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }))]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.state.list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \" \", item))))));\n  }\n\n} //ReactDOM.render(<App />, document.getElementById('app'))\n\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 8\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/crowdburst/src/index.js"],"names":["React","Component","render","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","serviceWorker","Grocery","Search","client","cache","link","uri","App","constructor","props","state","list","map","item","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAsD,gBAAtD,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CACb;AACEO,EAAAA,KAAK,EAAE,IAAIL,aAAJ,EADT;AAEEM,EAAAA,IAAI,EAAE,IAAIP,QAAJ,CAAa;AACjBQ,IAAAA,GAAG,EAAE;AADY,GAAb;AAFR,CADa,CAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAC1Bc,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,cACJ,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAIR,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADI;AADK,KAAb;AAQD;;AAEDR,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKe,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,iBACvB;AAAI,MAAA,GAAG,EAAIA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoBA,IAApB,CADD,CADH,CADF,CADF,CADF,CADF;AAaD;;AA5ByB,C,CA8B5B;;;AAEAlB,MAAM,eAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAASmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAT,CAAN,C,CAGA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React, {Component} from 'react';\n//import ReactDOM from 'react-dom';\nimport './index.css';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'; \n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Grocery from \"./Components/Grocery\"; \nimport Search from './Components/Search'; \n\n//import { render } from 'ejs';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nconst client = new ApolloClient(\n  {\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n      uri: 'https://crowdburst.herokuapp.com/v1/graphql',\n    })\n  }\n); \n\n// const App = () => (\n//   <ApolloProvider client = {client}>\n//     {/* <div>\n//       <h2>My first React App</h2>\n//     </div> */}\n//     <Search/>\n//     <Grocery/>\n//   </ApolloProvider>\n// ); \n\nclass App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      list: [\n        <ApolloProvider client = {client}>\n          <h2>app</h2>\n          <Grocery/>\n        </ApolloProvider>\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div className = \"content\">\n        <div className = \"container\">\n          <section className = \"section\">\n            <ul>\n              {this.state.list.map(item => (\n                <li key = {item} > {item}</li>\n              ))}\n            </ul>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\n//ReactDOM.render(<App />, document.getElementById('app'))\n\nrender(<App/>, document.getElementById('root')); \n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}