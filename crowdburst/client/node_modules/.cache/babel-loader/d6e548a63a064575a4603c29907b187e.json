{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar handleCallback = require('../utils').handleCallback;\n\nvar collection;\n\nfunction loadCollection() {\n  if (!collection) {\n    collection = require('../collection');\n  }\n\n  return collection;\n}\n\nvar CollectionsOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(CollectionsOperation, _OperationBase);\n\n  var _super = _createSuper(CollectionsOperation);\n\n  function CollectionsOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, CollectionsOperation);\n\n    _this = _super.call(this, options);\n    _this.db = db;\n    return _this;\n  }\n\n  _createClass(CollectionsOperation, [{\n    key: \"execute\",\n    value: function execute(callback) {\n      var db = this.db;\n      var options = this.options;\n      var Collection = loadCollection();\n      options = Object.assign({}, options, {\n        nameOnly: true\n      }); // Let's get the collection names\n\n      db.listCollections({}, options).toArray(function (err, documents) {\n        if (err != null) return handleCallback(callback, err, null); // Filter collections removing any illegal ones\n\n        documents = documents.filter(function (doc) {\n          return doc.name.indexOf('$') === -1;\n        }); // Return the collection objects\n\n        handleCallback(callback, null, documents.map(function (d) {\n          return new Collection(db, db.s.topology, db.databaseName, d.name, db.s.pkFactory, db.s.options);\n        }));\n      });\n    }\n  }]);\n\n  return CollectionsOperation;\n}(OperationBase);\n\nmodule.exports = CollectionsOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/collections.js"],"names":["OperationBase","require","handleCallback","collection","loadCollection","CollectionsOperation","db","options","callback","Collection","Object","assign","nameOnly","listCollections","toArray","err","documents","filter","doc","name","indexOf","map","d","s","topology","databaseName","pkFactory","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,aAA7C;;AACA,IAAME,cAAc,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,cAA3C;;AAEA,IAAIC,UAAJ;;AACA,SAASC,cAAT,GAA0B;AACxB,MAAI,CAACD,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGF,OAAO,CAAC,eAAD,CAApB;AACD;;AACD,SAAOE,UAAP;AACD;;IAEKE,oB;;;;;AACJ,gCAAYC,EAAZ,EAAgBC,OAAhB,EAAyB;AAAA;;AAAA;;AACvB,8BAAMA,OAAN;AAEA,UAAKD,EAAL,GAAUA,EAAV;AAHuB;AAIxB;;;;4BAEOE,Q,EAAU;AAChB,UAAMF,EAAE,GAAG,KAAKA,EAAhB;AACA,UAAIC,OAAO,GAAG,KAAKA,OAAnB;AAEA,UAAIE,UAAU,GAAGL,cAAc,EAA/B;AAEAG,MAAAA,OAAO,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,OAAlB,EAA2B;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAA3B,CAAV,CANgB,CAOhB;;AACAN,MAAAA,EAAE,CAACO,eAAH,CAAmB,EAAnB,EAAuBN,OAAvB,EAAgCO,OAAhC,CAAwC,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAC1D,YAAID,GAAG,IAAI,IAAX,EAAiB,OAAOb,cAAc,CAACM,QAAD,EAAWO,GAAX,EAAgB,IAAhB,CAArB,CADyC,CAE1D;;AACAC,QAAAA,SAAS,GAAGA,SAAS,CAACC,MAAV,CAAiB,UAAAC,GAAG,EAAI;AAClC,iBAAOA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAlC;AACD,SAFW,CAAZ,CAH0D,CAO1D;;AACAlB,QAAAA,cAAc,CACZM,QADY,EAEZ,IAFY,EAGZQ,SAAS,CAACK,GAAV,CAAc,UAAAC,CAAC,EAAI;AACjB,iBAAO,IAAIb,UAAJ,CACLH,EADK,EAELA,EAAE,CAACiB,CAAH,CAAKC,QAFA,EAGLlB,EAAE,CAACmB,YAHE,EAILH,CAAC,CAACH,IAJG,EAKLb,EAAE,CAACiB,CAAH,CAAKG,SALA,EAMLpB,EAAE,CAACiB,CAAH,CAAKhB,OANA,CAAP;AAQD,SATD,CAHY,CAAd;AAcD,OAtBD;AAuBD;;;;EAtCgCP,a;;AAyCnC2B,MAAM,CAACC,OAAP,GAAiBvB,oBAAjB","sourcesContent":["'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst handleCallback = require('../utils').handleCallback;\n\nlet collection;\nfunction loadCollection() {\n  if (!collection) {\n    collection = require('../collection');\n  }\n  return collection;\n}\n\nclass CollectionsOperation extends OperationBase {\n  constructor(db, options) {\n    super(options);\n\n    this.db = db;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    let options = this.options;\n\n    let Collection = loadCollection();\n\n    options = Object.assign({}, options, { nameOnly: true });\n    // Let's get the collection names\n    db.listCollections({}, options).toArray((err, documents) => {\n      if (err != null) return handleCallback(callback, err, null);\n      // Filter collections removing any illegal ones\n      documents = documents.filter(doc => {\n        return doc.name.indexOf('$') === -1;\n      });\n\n      // Return the collection objects\n      handleCallback(\n        callback,\n        null,\n        documents.map(d => {\n          return new Collection(\n            db,\n            db.s.topology,\n            db.databaseName,\n            d.name,\n            db.s.pkFactory,\n            db.s.options\n          );\n        })\n      );\n    });\n  }\n}\n\nmodule.exports = CollectionsOperation;\n"]},"metadata":{},"sourceType":"script"}