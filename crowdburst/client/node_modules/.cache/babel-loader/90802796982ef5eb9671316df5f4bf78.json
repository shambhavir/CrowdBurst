{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/S/Desktop/nodeprotake2/crowdburst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar MongoError = require('../core').MongoError;\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar insertDocuments = require('./common_functions').insertDocuments;\n\nvar InsertOneOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(InsertOneOperation, _OperationBase);\n\n  var _super = _createSuper(InsertOneOperation);\n\n  function InsertOneOperation(collection, doc, options) {\n    var _this;\n\n    _classCallCheck(this, InsertOneOperation);\n\n    _this = _super.call(this, options);\n    _this.collection = collection;\n    _this.doc = doc;\n    return _this;\n  }\n\n  _createClass(InsertOneOperation, [{\n    key: \"execute\",\n    value: function execute(callback) {\n      var coll = this.collection;\n      var doc = this.doc;\n      var options = this.options;\n\n      if (Array.isArray(doc)) {\n        return callback(MongoError.create({\n          message: 'doc parameter must be an object',\n          driver: true\n        }));\n      }\n\n      insertDocuments(coll, [doc], options, function (err, r) {\n        if (callback == null) return;\n        if (err && callback) return callback(err); // Workaround for pre 2.6 servers\n\n        if (r == null) return callback(null, {\n          result: {\n            ok: 1\n          }\n        }); // Add values to top level to ensure crud spec compatibility\n\n        r.insertedCount = r.result.n;\n        r.insertedId = doc._id;\n        if (callback) callback(null, r);\n      });\n    }\n  }]);\n\n  return InsertOneOperation;\n}(OperationBase);\n\nmodule.exports = InsertOneOperation;","map":{"version":3,"sources":["/Users/S/Desktop/nodeprotake2/node_modules/mongodb/lib/operations/insert_one.js"],"names":["MongoError","require","OperationBase","insertDocuments","InsertOneOperation","collection","doc","options","callback","coll","Array","isArray","create","message","driver","err","r","result","ok","insertedCount","n","insertedId","_id","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,UAAtC;;AACA,IAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,IAAMC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,eAAtD;;IAEMC,kB;;;;;AACJ,8BAAYC,UAAZ,EAAwBC,GAAxB,EAA6BC,OAA7B,EAAsC;AAAA;;AAAA;;AACpC,8BAAMA,OAAN;AAEA,UAAKF,UAAL,GAAkBA,UAAlB;AACA,UAAKC,GAAL,GAAWA,GAAX;AAJoC;AAKrC;;;;4BAEOE,Q,EAAU;AAChB,UAAMC,IAAI,GAAG,KAAKJ,UAAlB;AACA,UAAMC,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;;AAEA,UAAIG,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAJ,EAAwB;AACtB,eAAOE,QAAQ,CACbR,UAAU,CAACY,MAAX,CAAkB;AAAEC,UAAAA,OAAO,EAAE,iCAAX;AAA8CC,UAAAA,MAAM,EAAE;AAAtD,SAAlB,CADa,CAAf;AAGD;;AAEDX,MAAAA,eAAe,CAACM,IAAD,EAAO,CAACH,GAAD,CAAP,EAAcC,OAAd,EAAuB,UAACQ,GAAD,EAAMC,CAAN,EAAY;AAChD,YAAIR,QAAQ,IAAI,IAAhB,EAAsB;AACtB,YAAIO,GAAG,IAAIP,QAAX,EAAqB,OAAOA,QAAQ,CAACO,GAAD,CAAf,CAF2B,CAGhD;;AACA,YAAIC,CAAC,IAAI,IAAT,EAAe,OAAOR,QAAQ,CAAC,IAAD,EAAO;AAAES,UAAAA,MAAM,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAV,SAAP,CAAf,CAJiC,CAKhD;;AACAF,QAAAA,CAAC,CAACG,aAAF,GAAkBH,CAAC,CAACC,MAAF,CAASG,CAA3B;AACAJ,QAAAA,CAAC,CAACK,UAAF,GAAef,GAAG,CAACgB,GAAnB;AACA,YAAId,QAAJ,EAAcA,QAAQ,CAAC,IAAD,EAAOQ,CAAP,CAAR;AACf,OATc,CAAf;AAUD;;;;EA7B8Bd,a;;AAgCjCqB,MAAM,CAACC,OAAP,GAAiBpB,kBAAjB","sourcesContent":["'use strict';\n\nconst MongoError = require('../core').MongoError;\nconst OperationBase = require('./operation').OperationBase;\nconst insertDocuments = require('./common_functions').insertDocuments;\n\nclass InsertOneOperation extends OperationBase {\n  constructor(collection, doc, options) {\n    super(options);\n\n    this.collection = collection;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const doc = this.doc;\n    const options = this.options;\n\n    if (Array.isArray(doc)) {\n      return callback(\n        MongoError.create({ message: 'doc parameter must be an object', driver: true })\n      );\n    }\n\n    insertDocuments(coll, [doc], options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err);\n      // Workaround for pre 2.6 servers\n      if (r == null) return callback(null, { result: { ok: 1 } });\n      // Add values to top level to ensure crud spec compatibility\n      r.insertedCount = r.result.n;\n      r.insertedId = doc._id;\n      if (callback) callback(null, r);\n    });\n  }\n}\n\nmodule.exports = InsertOneOperation;\n"]},"metadata":{},"sourceType":"script"}